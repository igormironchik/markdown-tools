<Keyword>#!/usr/bin/perl6</Keyword><br/>
<Normal Text></Normal Text><br/>
<Keyword>use</Keyword><Normal Text> v6</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Control Flow>if</Control Flow><Normal Text> </Normal Text><Keyword Value>True</Keyword Value><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>Hello</String><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Control Flow>if</Control Flow><Normal Text> </Normal Text><Keyword Value>True</Keyword Value><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>Hello</String><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Comment># Bad indentation intended</Comment><br/>
<Normal Text>        </Normal Text><Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Control Flow>if</Control Flow><Normal Text> </Normal Text><Keyword Value>True</Keyword Value><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>Hello</String><String Delimiter>"</String Delimiter><Normal Text> </Normal Text><Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Control Flow>if</Control Flow><Normal Text> </Normal Text><Keyword Value>True</Keyword Value><Normal Text> </Normal Text><Symbol>{</Symbol><Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>Hello</String><String Delimiter>"</String Delimiter><Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Control Flow>if</Control Flow><Normal Text> </Normal Text><Keyword Value>True</Keyword Value><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>Hello</String><String Delimiter>"</String Delimiter><Normal Text> </Normal Text><Symbol>}</Symbol><Normal Text> </Normal Text><Control Flow>else</Control Flow><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>Goodbye</String><String Delimiter>"</String Delimiter><Normal Text> </Normal Text><Symbol>}</Symbol><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>world</String><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Comment>## </Comment><Region Marker>BEGIN</Region Marker><Comment> Comments</Comment><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Decimal>1</Decimal><Normal Text> </Normal Text><Comment>#`( blah </Comment><Alert Level 2>TODO</Alert Level 2><Comment> blah</Comment><br/>
<Comment>here? )</Comment><Normal Text> </Normal Text><Decimal>2</Decimal><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Decimal>1</Decimal><Normal Text> </Normal Text><Comment>#`{{ blah </Comment><Alert Level 2>TODO</Alert Level 2><Comment> blah</Comment><br/>
<Comment>here? }}</Comment><Normal Text> </Normal Text><Decimal>2</Decimal><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Decimal>1</Decimal><Normal Text> </Normal Text><Comment>#`[[ blah </Comment><Alert Level 2>TODO</Alert Level 2><Comment> blah ]</Comment><br/>
<Comment>here? ]]</Comment><Normal Text> </Normal Text><Decimal>2</Decimal><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Decimal>1</Decimal><Normal Text> </Normal Text><Comment>#`««« blah </Comment><Alert Level 2>TODO</Alert Level 2><Comment> blah</Comment><br/>
<Comment>here? »»»</Comment><Normal Text> </Normal Text><Decimal>2</Decimal><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Decimal>1</Decimal><Normal Text> </Normal Text><Comment>#` ( blah </Comment><Alert Level 2>TODO</Alert Level 2><Comment> blah</Comment><br/>
<Decimal>2</Decimal><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Comment>#`[</Comment><br/>
<Comment>  This is another multi-line comment. ]</Comment><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>@sorted</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Variable>@names</Variable><Member Operator>.</Member Operator><Normal Text>sort</Normal Text><Symbol>({</Symbol><Normal Text> </Normal Text><Variable>%sets</Variable><Symbol>{</Symbol><Variable>$_</Variable><Symbol>}</Symbol><Normal Text> </Normal Text><Symbol>})</Symbol><Member Operator>.</Member Operator><Normal Text>sort</Normal Text><Symbol>({</Symbol><Normal Text> </Normal Text><Variable>%matches</Variable><Symbol>{</Symbol><Variable>$_</Variable><Symbol>}</Symbol><Normal Text> </Normal Text><Symbol>})</Symbol><Member Operator>.</Member Operator><Normal Text>reverse</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Comment>#`{ So is this, though it's not actually multi-line. }</Comment><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>code again</String><String Delimiter>'</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Comment>#`(  Multiple line comments `( sub-comment )`)</Comment><Normal Text>`</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Comment>## </Comment><Region Marker>END</Region Marker><Comment> Comments</Comment><br/>
<Normal Text></Normal Text><br/>
<Comment>#`[</Comment><br/>
<Comment>And this is how a multi would work.</Comment><br/>
<Comment>That says why we do what we do below.</Comment><br/>
<Comment>]</Comment><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>No more</String><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Comment>#`{{a}a}}</Comment><Normal Text> </Normal Text><Function>say</Function><Normal Text> ok</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>No more</String><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>this is code</String><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Block>begin</Pod Block><Normal Text> </Normal Text><Pod Typename Value>pod</Pod Typename Value><br/>
<Pod Paragraph></Pod Paragraph><br/>
<Pod Paragraph>A very simple Pod6 document</Pod Paragraph><br/>
<Pod Paragraph></Pod Paragraph><br/>
<Pod>=</Pod><Pod Block>end</Pod Block><Normal Text> </Normal Text><Pod Typename Value>pod</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Block>begin</Pod Block><Normal Text> </Normal Text><Pod Typename Value>head1</Pod Typename Value><br/>
<Pod Paragraph>Top Level Heading</Pod Paragraph><br/>
<Pod>=</Pod><Pod Block>end</Pod Block><Normal Text> </Normal Text><Pod Typename Value>head1</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Typename>head1</Pod Typename><Pod Typename Value> Top level heading</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Typename>for</Pod Typename><Normal Text> </Normal Text><Pod Typename>head1</Pod Typename><br/>
<Pod Typename Value>Top Level Heading</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Unknown>cutsdads</Pod Unknown><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Block>begin</Pod Block><Normal Text> </Normal Text><Pod Typename Value>pod</Pod Typename Value><br/>
<Pod Paragraph></Pod Paragraph><br/>
<Pod>=</Pod><Pod Typename>head1</Pod Typename><Pod Typename Value> This is a head1 title</Pod Typename Value><br/>
<Pod Paragraph></Pod Paragraph><br/>
<Pod Paragraph>This is a paragraph.</Pod Paragraph><br/>
<Pod Paragraph></Pod Paragraph><br/>
<Pod>=</Pod><Pod Typename>head2</Pod Typename><Pod Typename Value> Subsection</Pod Typename Value><br/>
<Pod Typename Value># plop</Pod Typename Value><br/>
<Pod Typename Value>Here some text for the subsection.</Pod Typename Value><br/>
<Pod Paragraph></Pod Paragraph><br/>
<Pod>=</Pod><Pod Block>end</Pod Block><Normal Text> </Normal Text><Pod Typename Value>pod</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Block>begin</Pod Block><Normal Text> </Normal Text><Pod Typename Value>table</Pod Typename Value><Normal Text> </Normal Text><Pod Operator>:</Pod Operator><Pod Key>caption</Pod Key><Pod Operator><</Pod Operator><Pod Config>My Tasks</Pod Config><Pod Operator>></Pod Operator><br/>
<Pod Paragraph>mow lawn</Pod Paragraph><br/>
<Pod Paragraph>take out trash</Pod Paragraph><br/>
<Pod>=</Pod><Pod Block>end</Pod Block><Normal Text> </Normal Text><Pod Typename Value>table</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Typename>head1</Pod Typename><Pod Typename Value> This is a heading block</Pod Typename Value><br/>
<Pod Typename Value>This is an ordinary paragraph.</Pod Typename Value><br/>
<Pod Typename Value>Its text will be squeezed and</Pod Typename Value><br/>
<Pod Typename Value>short lines filled. It is terminated by</Pod Typename Value><br/>
<Pod Typename Value>the first blank line.</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Typename>head2</Pod Typename><Pod Typename Value> This is another heading block</Pod Typename Value><br/>
<Pod Typename Value>This is yet another ordinary paragraph,</Pod Typename Value><br/>
<Pod Typename Value>at the first virtual column set by the</Pod Typename Value><br/>
<Pod Typename Value>previous directive</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Comment>#</Comment><Pod Operator>|</Pod Operator><Comment> Base class for magicians</Comment><br/>
<Keyword>class</Keyword><Normal Text> </Normal Text><Data Type>Magician</Data Type><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>  </Normal Text><Variable Storage>has</Variable Storage><Normal Text> </Normal Text><Data Type>Int</Data Type><Normal Text> </Normal Text><Variable>$</Variable><Twigil>.</Twigil><Variable>level</Variable><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>  </Normal Text><Variable Storage>has</Variable Storage><Normal Text> </Normal Text><Data Type>Str</Data Type><Normal Text> </Normal Text><Variable>@</Variable><Twigil>.</Twigil><Variable>spells</Variable><Separator Symbol>;</Separator Symbol><br/>
<Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Comment>#</Comment><Pod Operator>|</Pod Operator><Comment> Fight mechanics</Comment><br/>
<Declare Routine>sub</Declare Routine><Normal Text> duel</Normal Text><Symbol>(</Symbol><Data Type>Magician</Data Type><Normal Text> </Normal Text><Variable>$a</Variable><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Data Type>Magician</Data Type><Normal Text> </Normal Text><Variable>$b</Variable><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Symbol>}</Symbol><br/>
<Comment>#</Comment><Pod Operator>=</Pod Operator><Comment>«<((</Comment><br/>
<Comment> <Magicians only, no mortals. ></Comment><br/>
<Comment> Magicians only, no mortals.</Comment><br/>
<Comment>))>»</Comment><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Data Type>Magician</Data Type><Member Operator>.</Member Operator><Data Type>WHY</Data Type><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Comment>#</Comment><Pod Operator>|</Pod Operator><Comment><< This is an example of stringification:</Comment><br/>
<Comment>    * Numbers turn into strings</Comment><br/>
<Comment> >   * Regexes operate on said strings</Comment><br/>
<Comment>    * C<with> topicalizes and places result into $_</Comment><br/>
<Comment>>></Comment><br/>
<Declare Routine>sub</Declare Routine><Normal Text> search-in-seq</Normal Text><Symbol>(</Symbol><Normal Text> </Normal Text><Data Type>Int</Data Type><Normal Text> </Normal Text><Variable>$end</Variable><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Data Type>Int</Data Type><Normal Text> </Normal Text><Variable>$number</Variable><Normal Text> </Normal Text><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Control Flow>with</Control Flow><Normal Text> </Normal Text><Symbol>(</Symbol><Operator>^</Operator><Variable>$end</Variable><Symbol>)</Symbol><Member Operator>.</Member Operator><Normal Text>grep</Normal Text><Symbol>(</Symbol><Normal Text> </Normal Text><Pattern Delimiter>/</Pattern Delimiter><Pattern Control Flow>^</Pattern Control Flow><Variable>$number</Variable><Pattern Delimiter>/</Pattern Delimiter><Normal Text> </Normal Text><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>        </Normal Text><Member Operator>.</Member Operator><Function>say</Function><Normal Text> </Normal Text><Control Flow>for</Control Flow><Normal Text> </Normal Text><Variable>$_</Variable><String Delimiter><></String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Symbol>}</Symbol><br/>
<Symbol>}</Symbol><br/>
<Comment>#</Comment><Pod Operator>=</Pod Operator><Comment> Uses     * topic    * decont operator</Comment><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Typename>head1</Pod Typename><Pod Typename Value> plop</Pod Typename Value><br/>
<Pod Typename Value>abc</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Typename>head1</Pod Typename><Pod Typename Value> plop</Pod Typename Value><br/>
<Pod>=</Pod><Pod Typename>para</Pod Typename><br/>
<Pod Typename Value>abc</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Typename>head1</Pod Typename><Pod Typename Value> plop</Pod Typename Value><br/>
<Normal Text> </Normal Text><Pod Typename Value>abc</Pod Typename Value><br/>
<Pod Typename Value>abc</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Typename>head1</Pod Typename><Pod Typename Value> plop</Pod Typename Value><br/>
<Pod Typename Value>abc</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Decimal>1</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Typename>head1</Pod Typename><Pod Typename Value> plop</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Decimal>1</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Typename>for</Pod Typename><Normal Text> </Normal Text><Pod Typename>head1</Pod Typename><br/>
<Pod Typename Value>plop</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Typename>for</Pod Typename><Normal Text> </Normal Text><Pod Typename>table</Pod Typename><Normal Text> </Normal Text><Pod Operator>:</Pod Operator><Pod Key>conf</Pod Key><Pod Operator>[</Pod Operator><Pod Config>str</Pod Config><Pod Operator>,</Pod Operator><Pod Config> </Pod Config><String>'str</String><String Delimiter>'</String Delimiter><Pod Operator>,</Pod Operator><Pod Config> </Pod Config><String>"str</String><String Delimiter>"</String Delimiter><Pod Operator>,</Pod Operator><Pod Config> </Pod Config><Decimal>1</Decimal><Pod Operator>,</Pod Operator><Pod Config> </Pod Config><Data Type>True</Data Type><Pod Operator>]</Pod Operator><Normal Text> </Normal Text><Pod Operator>:</Pod Operator><Pod Key>conf</Pod Key><Pod Operator>(</Pod Operator><Pod Config>str</Pod Config><Pod Operator>,</Pod Operator><Pod Config> </Pod Config><String>'str</String><String Delimiter>'</String Delimiter><Pod Operator>,</Pod Operator><Pod Config> </Pod Config><String>"str</String><String Delimiter>"</String Delimiter><Pod Operator>,</Pod Operator><Pod Config> </Pod Config><Decimal>1</Decimal><Pod Operator>,</Pod Operator><Pod Config> </Pod Config><Data Type>True</Data Type><Pod Operator>)</Pod Operator><br/>
<Pod>=</Pod><Pod Typename>for</Pod Typename><Normal Text> </Normal Text><Pod Typename>table</Pod Typename><Normal Text> </Normal Text><Pod Operator>:</Pod Operator><Pod Key>conf</Pod Key><Pod Operator><</Pod Operator><Pod Config>str </Pod Config><String>'str</String><String Delimiter>'</String Delimiter><Pod Config> </Pod Config><String>"str</String><String Delimiter>"</String Delimiter><Pod Config> </Pod Config><Decimal>1</Decimal><Pod Config> </Pod Config><Data Type>True</Data Type><Pod Operator>></Pod Operator><br/>
<Pod>=</Pod><Pod Typename>for</Pod Typename><Normal Text> </Normal Text><Pod Typename>table</Pod Typename><Normal Text> </Normal Text><Pod Operator>:</Pod Operator><Pod Key>conf</Pod Key><Pod Operator>{</Pod Operator><Pod Config>k </Pod Config><Pod Operator>=></Pod Operator><Pod Config> str</Pod Config><Pod Operator>,</Pod Operator><Pod Config> k</Pod Config><Pod Operator>=></Pod Operator><String>'str</String><String Delimiter>'</String Delimiter><Pod Operator>,</Pod Operator><Pod Config> k</Pod Config><Pod Operator>=></Pod Operator><String>"str</String><String Delimiter>"</String Delimiter><Pod Operator>,</Pod Operator><Pod Config> k</Pod Config><Pod Operator>=></Pod Operator><Decimal>1</Decimal><Pod Operator>,</Pod Operator><Pod Config> k</Pod Config><Pod Operator>=></Pod Operator><Data Type>True</Data Type><Pod Operator>}</Pod Operator><br/>
<Pod>=</Pod><Pod Typename>for</Pod Typename><Normal Text> </Normal Text><Pod Typename>table</Pod Typename><Normal Text> </Normal Text><Pod Operator>:</Pod Operator><Pod Key>a</Pod Key><Normal Text> </Normal Text><Pod Operator>:!</Pod Operator><Pod Key>b</Pod Key><Normal Text> </Normal Text><Pod Operator>:</Pod Operator><Decimal>42</Decimal><Pod Key>k</Pod Key><Normal Text> </Normal Text><Pod Operator>:</Pod Operator><Error>+s</Error><br/>
<Pod Typename Value>abc</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Decimal>2</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Block>begin</Pod Block><Normal Text> </Normal Text><Pod Typename Value>a</Pod Typename Value><br/>
<Pod Paragraph>abc</Pod Paragraph><br/>
<Pod>=</Pod><Pod Block>end</Pod Block><Normal Text> </Normal Text><Pod Typename Value>a</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Block>begin</Pod Block><Normal Text> </Normal Text><Pod Typename Value>b</Pod Typename Value><Normal Text> </Normal Text><Error>sa</Error><br/>
<Pod>=</Pod><Pod Block>end</Pod Block><Normal Text> </Normal Text><Pod Typename Value>b</Pod Typename Value><br/>
<Function>say</Function><Normal Text> </Normal Text><Decimal>2</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Block>begin</Pod Block><Normal Text> </Normal Text><Pod Typename Value>a</Pod Typename Value><br/>
<Pod Paragraph>abc</Pod Paragraph><br/>
<Pod Paragraph></Pod Paragraph><br/>
<Pod Paragraph>abc</Pod Paragraph><br/>
<Pod Paragraph></Pod Paragraph><br/>
<Pod Paragraph>abc</Pod Paragraph><br/>
<Pod>=</Pod><Pod Block>end</Pod Block><Normal Text> </Normal Text><Pod Typename Value>a</Pod Typename Value><br/>
<Function>say</Function><Normal Text> </Normal Text><Decimal>0</Decimal><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Pod>=</Pod><Pod Block>begin</Pod Block><Normal Text> </Normal Text><Pod Typename Value>a</Pod Typename Value><Pod Operator>:</Pod Operator><Pod Key>config</Pod Key><Pod Operator>{</Pod Operator><Decimal>42</Decimal><Pod Operator>}</Pod Operator><br/>
<Pod Paragraph>abc</Pod Paragraph><br/>
<Pod Paragraph></Pod Paragraph><br/>
<Pod>=</Pod><Pod Typename>head1</Pod Typename><Pod Typename Value> The</Pod Typename Value><br/>
<Pod Typename Value>Title</Pod Typename Value><br/>
<Pod Paragraph></Pod Paragraph><br/>
<Pod Paragraph>abc</Pod Paragraph><br/>
<Pod>=</Pod><Pod Block>end</Pod Block><Error> ab</Error><br/>
<Function>say</Function><Normal Text> </Normal Text><Decimal>1</Decimal><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Block>begin</Pod Block><Normal Text> </Normal Text><Pod Typename Value>b</Pod Typename Value><Normal Text> </Normal Text><Error>sa</Error><br/>
<Pod>=</Pod><Pod Block>end</Pod Block><Normal Text> </Normal Text><Pod Typename Value>b</Pod Typename Value><br/>
<Pod>=</Pod><Pod Block>begin</Pod Block><Normal Text> </Normal Text><Pod Typename Value>a</Pod Typename Value><br/>
<Pod Paragraph>abc</Pod Paragraph><br/>
<Pod>=</Pod><Pod Block>begin</Pod Block><Normal Text> </Normal Text><Pod Typename Value>b</Pod Typename Value><br/>
<Pod Paragraph>abc</Pod Paragraph><br/>
<Pod>=</Pod><Pod Block>end</Pod Block><Normal Text> </Normal Text><Pod Typename Value>b</Pod Typename Value><Error> a</Error><br/>
<Pod Paragraph>abc</Pod Paragraph><br/>
<Pod Paragraph></Pod Paragraph><br/>
<Pod Paragraph>abc</Pod Paragraph><br/>
<Pod>=</Pod><Pod Block>end</Pod Block><Normal Text> </Normal Text><Pod Typename Value>a</Pod Typename Value><br/>
<Function>say</Function><Normal Text> </Normal Text><Decimal>3</Decimal><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Typename>item</Pod Typename><Pod Typename Value> a</Pod Typename Value><br/>
<Pod>=</Pod><Pod Typename>item</Pod Typename><Pod Typename Value> b</Pod Typename Value><br/>
<Pod>=</Pod><Pod Block>begin</Pod Block><Normal Text> </Normal Text><Pod Typename Value>code</Pod Typename Value><br/>
<Pod Verbatim> =item a</Pod Verbatim><br/>
<Pod>=</Pod><Pod Block>end</Pod Block><Normal Text> </Normal Text><Pod Typename Value>code</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Block>begin</Pod Block><Normal Text> </Normal Text><Pod Typename Value>code</Pod Typename Value><br/>
<Pod Verbatim> =item a</Pod Verbatim><br/>
<Pod Verbatim> b</Pod Verbatim><br/>
<Pod Verbatim>=end code d</Pod Verbatim><br/>
<Pod>=</Pod><Pod Block>end</Pod Block><Normal Text> </Normal Text><Pod Typename Value>code</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Block>begin</Pod Block><Normal Text> </Normal Text><Pod Typename Value>comment</Pod Typename Value><br/>
<Comment>Here are several</Comment><br/>
<Comment>lines</Comment><br/>
<Comment>of comment</Comment><br/>
<Pod>=</Pod><Pod Block>end</Pod Block><Normal Text> </Normal Text><Pod Typename Value>comment</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Block>begin</Pod Block><Normal Text> </Normal Text><Pod Typename Value>pod</Pod Typename Value><br/>
<Pod>=</Pod><Pod Typename>head1</Pod Typename><Pod Typename Value> ac</Pod Typename Value><Pod Bold>B<<</Pod Bold><Pod Italic>I<a></Pod Italic><Pod Bold>>></Pod Bold><Pod Typename Value>a </Pod Typename Value><Pod Bold>B<c></Pod Bold><Pod Typename Value> </Pod Typename Value><Pod Underline>U<d></Pod Underline><Pod Typename Value> B</Pod Typename Value><Pod Bold>B<a></Pod Bold><br/>
<Pod Paragraph></Pod Paragraph><br/>
<Pod Verbatim>C<my $var = 1; say $var;></Pod Verbatim><br/>
<Pod Paragraph>Perl 6 homepage </Pod Paragraph><Pod Link>L<https://perl6.org></Pod Link><Pod Paragraph> </Pod Paragraph><Pod Link>L<Perl 6 homepage</Pod Link><Pod Operator>|</Pod Operator><Pod Link>https://perl6.org></Pod Link><br/>
<Pod Paragraph>Comments </Pod Paragraph><Pod Link>L<#Comments></Pod Link><Pod Paragraph> </Pod Paragraph><Pod Link>L<Comments</Pod Link><Pod Operator>|</Pod Operator><Pod Link>#Comments></Pod Link><br/>
<Pod Paragraph>Perl 6 is awesome </Pod Paragraph><Pod Comment>Z<Of course it is!></Pod Comment><br/>
<Pod Paragraph>Perl 6 is multi-paradigmatic </Pod Paragraph><Pod Note>N<Supporting Procedural, Object Oriented, and Functional programming></Pod Note><br/>
<Pod Paragraph>Enter your name </Pod Paragraph><Pod Verbatim>K<John Doe></Pod Verbatim><Pod Paragraph> </Pod Paragraph><Pod Unicode>E<0xBB></Pod Unicode><Pod Paragraph> characters.</Pod Paragraph><br/>
<Pod Paragraph></Pod Paragraph><br/>
<Pod Paragraph>A </Pod Paragraph><Pod Indexed Terms>X<</Pod Indexed Terms><Pod Link>hash</Pod Link><Pod Operator>|</Pod Operator><Pod Link>hashes</Pod Link><Pod Operator>,</Pod Operator><Pod Link> definition of</Pod Link><Pod Operator>;</Pod Operator><Pod Link> associative arrays</Pod Link><Pod Indexed Terms>></Pod Indexed Terms><br/>
<Pod Paragraph></Pod Paragraph><br/>
<Pod>=</Pod><Pod Typename>DISCLAIMER</Pod Typename><br/>
<Pod Link>P<http://www.MegaGigaTeraPetaCorp.com/std/disclaimer.txt></Pod Link><br/>
<Pod Paragraph></Pod Paragraph><br/>
<Pod Paragraph>A </Pod Paragraph><Pod Indexed Terms>X<</Pod Indexed Terms><Pod Link>hash</Pod Link><Pod Operator>|</Pod Operator><Pod Link>hashes</Pod Link><Pod Operator>,</Pod Operator><Pod Link> definition of</Pod Link><Pod Operator>;</Pod Operator><Pod Link> associative arrays</Pod Link><Pod Indexed Terms>></Pod Indexed Terms><br/>
<Pod Paragraph>is an unordered collection of scalar values indexed by their</Pod Paragraph><br/>
<Pod Paragraph>associated string key.</Pod Paragraph><br/>
<Pod Paragraph></Pod Paragraph><br/>
<Pod Paragraph>    my @names = <Foo Bar Baz>;</Pod Paragraph><br/>
<Pod Paragraph>    my @upper-case-names = @names.map: { .uc }    # OUTPUT: [FOO BAR BAZ]</Pod Paragraph><br/>
<Pod Paragraph></Pod Paragraph><br/>
<Pod>=</Pod><Pod Block>end</Pod Block><Normal Text> </Normal Text><Pod Typename Value>pod</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Block>begin</Pod Block><Normal Text> </Normal Text><Pod Typename Value>table</Pod Typename Value><Normal Text> </Normal Text><Pod Operator>:</Pod Operator><Pod Key>caption</Pod Key><Pod Operator><</Pod Operator><Pod Config>My Tasks</Pod Config><Pod Operator>></Pod Operator><br/>
<Pod Paragraph>mow lawn</Pod Paragraph><br/>
<Pod Paragraph>take out trash</Pod Paragraph><br/>
<Pod>=</Pod><Pod Block>end</Pod Block><Normal Text> </Normal Text><Pod Typename Value>table</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Pod>=</Pod><Pod Block>begin</Pod Block><Normal Text> </Normal Text><Pod Typename Value>table</Pod Typename Value><Normal Text> </Normal Text><Pod Operator>:</Pod Operator><Pod Key>config</Pod Key><Pod Operator>{</Pod Operator><Pod Config>caption </Pod Config><Pod Operator>=></Pod Operator><Pod Config> </Pod Config><String>"My Tasks</String><String Delimiter>"</String Delimiter><Pod Operator>}</Pod Operator><br/>
<Pod Paragraph>mow lawn</Pod Paragraph><br/>
<Pod Paragraph>take out trash</Pod Paragraph><br/>
<Pod>=</Pod><Pod Block>end</Pod Block><Normal Text> </Normal Text><Pod Typename Value>table</Pod Typename Value><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String Special Character>\c999</String Special Character><String> </String><String Special Character>\c999999</String Special Character><Error>9</Error><String>99 </String><String Special Character>\c[LATIN CAPITAL LETTER A</String Special Character><Separator Symbol>,</Separator Symbol><String Special Character> LATIN CAPITAL LETTER B]</String Special Character><String> </String><String Special Character>\c77</String Special Character><String>s </String><String Special Character>\c[77</String Special Character><Separator Symbol>,</Separator Symbol><String Special Character>22]</String Special Character><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String Special Character>\x0</String Special Character><String> </String><String Special Character>\x00</String Special Character><String> </String><String Special Character>\x[0]</String Special Character><String> </String><String Special Character>\x[00]</String Special Character><String> </String><String Special Character>\x[f]</String Special Character><String> </String><String Special Character>\xaaa</String Special Character><String> </String><String Special Character>\xfffff</String Special Character><Error>f</Error><String>f </String><String Special Character>\xff</String Special Character><String>h </String><String Special Character>\x[ffff]</String Special Character><String> </String><String Special Character>\x[fffff</String Special Character><Error>ff</Error><String Special Character>]</String Special Character><String> </String><String Special Character>\x[42</String Special Character><Separator Symbol>,</Separator Symbol><String Special Character>42]</String Special Character><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String Special Character>\o0</String Special Character><String> </String><String Special Character>\o00</String Special Character><String> </String><String Special Character>\o[0]</String Special Character><String> </String><String Special Character>\o[00]</String Special Character><String> </String><String Special Character>\o[7]</String Special Character><String> </String><String Special Character>\o333</String Special Character><String> </String><String Special Character>\o777777</String Special Character><Error>7</Error><String>7 </String><String Special Character>\o77</String Special Character><String>h </String><String Special Character>\o[333]</String Special Character><String> </String><String Special Character>\o[777777</String Special Character><Error>77</Error><String Special Character>]</String Special Character><String> </String><String Special Character>\o[42</String Special Character><Separator Symbol>,</Separator Symbol><String Special Character>42]</String Special Character><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><String>Q</String><String Delimiter>[</String Delimiter><String>A literal string</String><String Delimiter>]</String Delimiter><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>｢</String Delimiter><String>More plainly.</String><String Delimiter>｣</String Delimiter><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String>Q </String><String Delimiter>^</String Delimiter><String>Almost any non-word character can be a delimiter!</String><String Delimiter>^</String Delimiter><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String>Q </String><String Delimiter>｢｢</String Delimiter><String>Delimiters can be repeated/nested if they are adjacent.</String><String Delimiter>｣｣</String Delimiter><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><String>Q </String><String Delimiter>(</String Delimiter><String>this is fine, because of space after Q</String><String Delimiter>)</String Delimiter><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String>Q </String><String Delimiter>'</String Delimiter><String>and so is this</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String>Q</String><String Delimiter><</String Delimiter><String>Make sure you </String><String Delimiter><</String Delimiter><String>match</String><String Delimiter>></String Delimiter><String> opening and closing delimiters</String><String Delimiter>></String Delimiter><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String>Q</String><String Delimiter>{</String Delimiter><String>This is still a closing curly brace → \</String><String Delimiter>}</String Delimiter><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><String>Q</String><String Delimiter>;</String Delimiter><String>yes, this is fine</String><String Delimiter>;</String Delimiter><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Data Type>Q</Data Type><Symbol>(</Symbol><String Delimiter>'</String Delimiter><String>this is a function</String><String Delimiter>'</String Delimiter><Symbol>)</Symbol><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>Very plain</String><String Delimiter>'</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Operator>q</Operator><String Delimiter>[</String Delimiter><String>This back\slash stays</String><String Delimiter>]</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Operator>q</Operator><String Delimiter>[</String Delimiter><String>This back</String><String Special Character>\\</String Special Character><String>slash stays</String><String Delimiter>]</String Delimiter><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Comment># Identical output</Comment><br/>
<Function>say</Function><Normal Text> </Normal Text><Operator>q</Operator><String Delimiter>{</String Delimiter><String>This is not a closing curly brace → </String><String Special Character>\}</String Special Character><String>, but this is → </String><String Delimiter>}</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String>Q </String><Operator>:q</Operator><String> </String><String Delimiter>$</String Delimiter><String>There are no backslashes here, only lots of </String><String Special Character>\$\$\$</String Special Character><String>>!</String><String Delimiter>$</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>(Just kidding. There</String><String Special Character>\'</String Special Character><String>s no money in that string)</String><String Delimiter>'</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>No $interpolation {here}!</String><String Delimiter>'</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String>Q</String><Operator>:q</Operator><String Delimiter>!</String Delimiter><String>Just a literal "\n" here</String><String Delimiter>!</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String>Q</String><Operator>:q</Operator><String Delimiter>[</String Delimiter><String>a</String><String Special Character>\[</String Special Character><String Delimiter>]</String Delimiter><br/>
<Function>say</Function><Normal Text> </Normal Text><String>Q</String><String Delimiter>[</String Delimiter><String>A literal string</String><String Delimiter>]</String Delimiter><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>｢</String Delimiter><String>More plainly.</String><String Delimiter>｣</String Delimiter><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String>Q </String><String Delimiter>^</String Delimiter><String>Almost any non-word character can be a delimiter!</String><String Delimiter>^</String Delimiter><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String>Q </String><String Delimiter>｢｢</String Delimiter><String>Delimiters can be repeated/nested if they are adjacent.</String><String Delimiter>｣｣</String Delimiter><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Operator>qq</Operator><String Delimiter>[</String Delimiter><String>My favorite color is </String><String (interpolated)>{</String (interpolated)><Variable>$n</Variable><Operator>+</Operator><Decimal>2</Decimal><String (interpolated)>}</String (interpolated)><String>!</String><String Delimiter>]</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Operator>qq</Operator><String Delimiter>{</String Delimiter><String>My favorite color</String><String Special Character>\-</String Special Character><String> is </String><String Delimiter>{</String Delimiter><Variable>$n</Variable><String>+2</String><String Delimiter>}</String Delimiter><String>!</String><String Delimiter>}</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String>Q</String><Operator>:qq</Operator><String Delimiter>{</String Delimiter><String>My favorite color</String><String Special Character>\-</String Special Character><String> is </String><String Delimiter>{</String Delimiter><Variable>$n</Variable><String>+2</String><String Delimiter>}</String Delimiter><String>!</String><String Delimiter>}</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>My </String><Variable>$color</Variable><Function>[</Function><Decimal>0</Decimal><Function>]</Function><String>.uc(</String><br/>
<String>) </String><Variable>$n</Variable><String>+</String><Variable>$n</Variable><String>.^name favorite color </String><Operator>\q</Operator><String Delimiter>[</String Delimiter><String>1is</String><String Delimiter>]</String Delimiter><String> </String><String (interpolated)>{</String (interpolated)><Variable>$n</Variable><Operator>+</Operator><Decimal>2</Decimal><String (interpolated)>}</String (interpolated)><String>!abc</String><Function>&uc(</Function><String Delimiter>'</String Delimiter><String>a</String><String Delimiter>'</String Delimiter><Function>)</Function><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Operator>qqww</Operator><String Delimiter>|</String Delimiter><String>a</String><String Delimiter>|</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Operator>qq:w:w</Operator><String Delimiter>|</String Delimiter><String>a</String><String Delimiter>|</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Operator>q:a:v</Operator><String Delimiter>|</String Delimiter><String>a</String><String Delimiter>|</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Symbol>(</Symbol><Operator>qq:to</Operator><String Delimiter>/TERM INATOR/</String Delimiter><String>, 1+1);</String><br/>
<String> blah blah</String><br/>
<String> </String><String Delimiter>TERM INATOR</String Delimiter><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$don't-do-that</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>1</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$piece_of_π</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Float>3.14</Float><Separator Symbol>;</Separator Symbol><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$駱駝道</Variable><Normal Text>    </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>1</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$lexical</Variable><Normal Text>   </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>1</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$</Variable><Twigil>*</Twigil><Variable>dynamic1</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>10</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$</Variable><Twigil>*</Twigil><Variable>dynamic2</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>100</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Declare Routine>sub</Declare Routine><Normal Text> say-all</Normal Text><Symbol>()</Symbol><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><Variable>$lexical</Variable><String>, </String><Variable>$</Variable><Twigil>*</Twigil><Variable>dynamic1</Variable><String>, </String><Variable>$</Variable><Twigil>*</Twigil><Variable>dynamic2</Variable><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Normal Text>say-all</Normal Text><Symbol>()</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$lexical</Variable><Normal Text>   </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>2</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$</Variable><Twigil>*</Twigil><Variable>dynamic1</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>11</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Variable>$</Variable><Twigil>*</Twigil><Variable>dynamic2</Variable><Normal Text>    </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>101</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$square</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>9</Decimal><Normal Text> </Normal Text><Operator>**</Operator><Normal Text> </Normal Text><Decimal>2</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>@array</Variable><Normal Text>  </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>1</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>3</Decimal><Separator Symbol>;</Separator Symbol><Normal Text>   </Normal Text><Comment># Array variable with three elements</Comment><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>%hash</Variable><Normal Text>   </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Data Type>London</Data Type><Normal Text> </Normal Text><Operator>=></Operator><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>UK</String><String Delimiter>'</String Delimiter><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Data Type>Berlin</Data Type><Normal Text> </Normal Text><Operator>=></Operator><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>Germany</String><String Delimiter>'</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Keyword>class</Keyword><Normal Text> </Normal Text><Data Type>FailHash</Data Type><Normal Text> </Normal Text><Keyword>is</Keyword><Normal Text> </Normal Text><Data Type>Hash</Data Type><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Variable Storage>has</Variable Storage><Normal Text> </Normal Text><Data Type>Bool</Data Type><Normal Text> </Normal Text><Variable>$</Variable><Twigil>!</Twigil><Variable>final</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Keyword Value>False</Keyword Value><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Declare Routine>multi</Declare Routine><Normal Text> </Normal Text><Declare Routine>method</Declare Routine><Normal Text> </Normal Text><Data Type>AT-KEY</Data Type><Normal Text> </Normal Text><Symbol>(</Symbol><Normal Text> </Normal Text><Separator Symbol>::?</Separator Symbol><Data Type>CLASS</Data Type><Separator Symbol>:</Separator Symbol><Data Type>D</Data Type><Separator Symbol>:</Separator Symbol><Normal Text> </Normal Text><Data Type>Str</Data Type><Separator Symbol>:</Separator Symbol><Data Type>D</Data Type><Normal Text> </Normal Text><Variable>\key</Variable><Normal Text> </Normal Text><Symbol>){</Symbol><br/>
<Normal Text>        </Normal Text><Control Flow>fail</Control Flow><Normal Text> </Normal Text><Operator>X</Operator><Separator Symbol>::</Separator Symbol><Data Type>OutOfRange</Data Type><Member Operator>.</Member Operator><Normal Text>new</Normal Text><Symbol>(</Symbol><Separator Symbol>:</Separator Symbol><Attribute>what</Attribute><Symbol>(</Symbol><String Delimiter>"</String Delimiter><String>Hash key</String><String Delimiter>"</String Delimiter><Symbol>)</Symbol><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Separator Symbol>:</Separator Symbol><Attribute>got</Attribute><Symbol>(</Symbol><Normal Text>key</Normal Text><Symbol>)</Symbol><Separator Symbol>,</Separator Symbol><br/>
<Normal Text>          </Normal Text><Separator Symbol>:</Separator Symbol><Attribute>range</Attribute><Symbol>(</Symbol><Keyword Value>self</Keyword Value><Member Operator>.</Member Operator><Normal Text>keys</Normal Text><Symbol>))</Symbol><Normal Text> </Normal Text><Control Flow>if</Control Flow><Normal Text> </Normal Text><Variable>$</Variable><Twigil>!</Twigil><Variable>final</Variable><Normal Text> </Normal Text><Operator>&& !</Operator><Keyword Value>self</Keyword Value><Member Operator>.</Member Operator><Data Type>EXISTS-KEY</Data Type><Symbol>(</Symbol><Normal Text>key</Normal Text><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>        callsame</Normal Text><br/>
<Normal Text>    </Normal Text><Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Normal Text>    </Normal Text><Declare Routine>method</Declare Routine><Normal Text> finalize</Normal Text><Symbol>()</Symbol><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>        </Normal Text><Variable>$</Variable><Twigil>!</Twigil><Variable>final</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Keyword Value>True</Keyword Value><br/>
<Normal Text>    </Normal Text><Symbol>}</Symbol><br/>
<Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>%h</Variable><Normal Text> </Normal Text><Keyword>is</Keyword><Normal Text> </Normal Text><Data Type>FailHash</Data Type><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> oranges </Normal Text><Operator>=></Operator><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>round</String><String Delimiter>"</String Delimiter><Separator Symbol>,</Separator Symbol><Normal Text> bananas </Normal Text><Operator>=></Operator><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>bendy</String><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Variable>%h</Variable><String Delimiter><</String Delimiter><String>oranges</String><String Delimiter>></String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Variable>%h</Variable><Member Operator>.</Member Operator><Normal Text>finalize</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Variable>%h</Variable><String Delimiter><</String Delimiter><String>cherry</String><String Delimiter>></String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Control Flow>CATCH</Control Flow><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Control Flow>default</Control Flow><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> put </Normal Text><Member Operator>.^</Member Operator><Normal Text>name</Normal Text><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>: </String><String Delimiter>'</String Delimiter><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Member Operator>.</Member Operator><Data Type>Str</Data Type><Normal Text> </Normal Text><Symbol>}</Symbol><Normal Text> </Normal Text><Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Symbol>(</Symbol><Normal Text> </Normal Text><Variable>@foo</Variable><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Variable>$bar</Variable><Normal Text> </Normal Text><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Variable>@foo</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Symbol>(</Symbol><Variable>$bar</Variable><Symbol>)</Symbol><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>42</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>str</String><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Variable Storage>anon</Variable Storage><Normal Text> </Normal Text><Keyword>class</Keyword><Normal Text> þ </Normal Text><Symbol>{}</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Variable Storage>anon</Variable Storage><Normal Text> </Normal Text><Declare Routine>sub</Declare Routine><Normal Text> þ  </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Decimal>42</Decimal><Normal Text> </Normal Text><Symbol>}</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Declare Routine>sub</Declare Routine><Normal Text> a </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Variable Storage>state</Variable Storage><Normal Text> </Normal Text><Variable>@x</Variable><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Variable Storage>state</Variable Storage><Normal Text> </Normal Text><Variable>$l</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>A</String><String Delimiter>'</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Variable>@x</Variable><Member Operator>.</Member Operator><Function>push</Function><Symbol>(</Symbol><Variable>$l</Variable><Operator>++</Operator><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Symbol>}</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> a </Normal Text><Control Flow>for</Control Flow><Normal Text> </Normal Text><Decimal>1</Decimal><Operator>..</Operator><Decimal>6</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Declare Routine>sub</Declare Routine><Normal Text> foo</Normal Text><Symbol>(</Symbol><Variable>$x</Variable><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$v</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Variable>@</Variable><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Variable>$v</Variable><Symbol>[</Symbol><Variable>$x</Variable><Symbol>]</Symbol><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Variable>$x</Variable><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Function>say</Function><Normal Text> </Normal Text><Variable>$v</Variable><Separator Symbol>;</Separator Symbol><br/>
<Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Normal Text>foo</Normal Text><Symbol>(</Symbol><Variable>$_</Variable><Symbol>)</Symbol><Normal Text> </Normal Text><Control Flow>for</Control Flow><Normal Text> </Normal Text><Operator>^</Operator><Decimal>3</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Keyword>use</Keyword><Normal Text> </Normal Text><Data Type>MONKEY-TYPING</Data Type><Separator Symbol>;</Separator Symbol><br/>
<Variable Storage>augment</Variable Storage><Normal Text> </Normal Text><Keyword>class</Keyword><Normal Text> </Normal Text><Data Type>Int</Data Type><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Declare Routine>method</Declare Routine><Normal Text> is-answer </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Keyword Value>self</Keyword Value><Normal Text> </Normal Text><Operator>==</Operator><Normal Text> </Normal Text><Decimal>42</Decimal><Normal Text> </Normal Text><Symbol>}</Symbol><br/>
<Symbol>}</Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Decimal>42</Decimal><Member Operator>.</Member Operator><Normal Text>is-answer</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$in</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>0</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Declare Routine>sub</Declare Routine><Normal Text> f</Normal Text><Symbol>(</Symbol><Variable>*@c</Variable><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Symbol>(</Symbol><Variable Storage>temp</Variable Storage><Normal Text> </Normal Text><Variable>$in</Variable><Symbol>)</Symbol><Operator>++</Operator><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>     </Normal Text><String Delimiter>"</String Delimiter><String><f></String><String Special Character>\n</String Special Character><String Delimiter>"</String Delimiter><br/>
<Normal Text>     </Normal Text><Operator>~</Operator><Normal Text> </Normal Text><Variable>@c</Variable><Hyper Operator>»</Hyper Operator><Member Operator>.</Member Operator><Normal Text>indent</Normal Text><Symbol>(</Symbol><Variable>$in</Variable><Symbol>)</Symbol><Member Operator>.</Member Operator><Normal Text>join</Normal Text><Symbol>(</Symbol><String Delimiter>"</String Delimiter><String Special Character>\n</String Special Character><String Delimiter>"</String Delimiter><Symbol>)</Symbol><br/>
<Normal Text>     </Normal Text><Operator>~</Operator><Normal Text> </Normal Text><Symbol>(</Symbol><Operator>+</Operator><Variable>@c</Variable><Normal Text> </Normal Text><Operator>??</Operator><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String Special Character>\n</String Special Character><String Delimiter>"</String Delimiter><Normal Text> </Normal Text><Operator>!!</Operator><Normal Text> </Normal Text><String Delimiter>""</String Delimiter><Symbol>)</Symbol><br/>
<Normal Text>     </Normal Text><Operator>~</Operator><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String></f></String><String Delimiter>'</String Delimiter><br/>
<Symbol>}</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Control Flow>for</Control Flow><Normal Text> </Normal Text><String Delimiter><</String Delimiter><String>ab:c d$e fgh ij*</String><String Delimiter>></String Delimiter><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Member Operator>.</Member Operator><Function>say</Function><Normal Text> </Normal Text><Control Flow>if</Control Flow><Normal Text> </Normal Text><Pattern Delimiter>m/</Pattern Delimiter><Pattern Meta Character><</Pattern Meta Character><Pattern Quantifier>-</Pattern Quantifier><Pattern Unicode Property>alpha</Pattern Unicode Property><Pattern Meta Character>></Pattern Meta Character><Pattern Delimiter>/</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Control Flow>for</Control Flow><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>.</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Member Operator>.</Member Operator><Data Type>Str</Data Type><Member Operator>.</Member Operator><Function>say</Function><Normal Text> </Normal Text><Control Flow>when</Control Flow><Normal Text> </Normal Text><Operator>!</Operator><Member Operator>.</Member Operator><Data Type>IO</Data Type><Member Operator>.</Member Operator><Normal Text>d</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Member Operator>.</Member Operator><Data Type>IO</Data Type><Member Operator>.</Member Operator><Normal Text>dir</Normal Text><Symbol>()</Symbol><Hyper Operator>»</Hyper Operator><Member Operator>.</Member Operator><Variable>&</Variable><Twigil>?</Twigil><Variable>BLOCK</Variable><Normal Text> </Normal Text><Control Flow>when</Control Flow><Normal Text> </Normal Text><Member Operator>.</Member Operator><Data Type>IO</Data Type><Member Operator>.</Member Operator><Normal Text>d </Normal Text><Comment># lets recurse a little!</Comment><br/>
<Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Keyword>use</Keyword><Normal Text> </Normal Text><Data Type>Dog</Data Type><Separator Symbol>:</Separator Symbol><Attribute>auth</Attribute><String Delimiter><</String Delimiter><String>Somebody</String><String Delimiter>></String Delimiter><Separator Symbol>:</Separator Symbol><Attribute>ver</Attribute><String Delimiter><</String Delimiter><String>2.0</String><String Delimiter>></String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Normal Text>infix</Normal Text><Separator Symbol>:</Separator Symbol><String Delimiter><</String Delimiter><String>+</String><String Delimiter>></String Delimiter><br/>
<Normal Text>infix</Normal Text><Separator Symbol>:</Separator Symbol><String Delimiter><</String Delimiter><String>*</String><String Delimiter>></String Delimiter><br/>
<Normal Text>infix</Normal Text><Separator Symbol>:</Separator Symbol><String Delimiter>«</String Delimiter><String><=</String><String Delimiter>»</String Delimiter><br/>
<Normal Text></Normal Text><br/>
<Normal Text>postfix</Normal Text><Separator Symbol>:</Separator Symbol><String Delimiter><</String Delimiter><String>²</String><String Delimiter>></String Delimiter><br/>
<Data Type>WOW</Data Type><Separator Symbol>:</Separator Symbol><Data Type>That'sAwesome</Data Type><br/>
<Data Type>WOW</Data Type><Separator Symbol>:</Separator Symbol><Data Type>That's</Data Type><String Delimiter><<</String Delimiter><String>🆒</String><String Delimiter>>></String Delimiter><br/>
<Normal Text>party</Normal Text><Separator Symbol>:</Separator Symbol><Attribute>sweet</Attribute><String Delimiter><</String Delimiter><String>16</String><String Delimiter>></String Delimiter><br/>
<Normal Text></Normal Text><br/>
<Normal Text>infix</Normal Text><Separator Symbol>:</Separator Symbol><String Delimiter><</String Delimiter><String>+</String><String Delimiter>></String Delimiter><br/>
<Normal Text>infix</Normal Text><Separator Symbol>:</Separator Symbol><String Delimiter><<</String Delimiter><String>+</String><String Delimiter>>></String Delimiter><br/>
<Normal Text>infix</Normal Text><Separator Symbol>:</Separator Symbol><String Delimiter>«</String Delimiter><String>+</String><String Delimiter>»</String Delimiter><br/>
<Normal Text>infix</Normal Text><Separator Symbol>:</Separator Symbol><Symbol>[</Symbol><String Delimiter>'</String Delimiter><String>+</String><String Delimiter>'</String Delimiter><Symbol>]</Symbol><br/>
<Normal Text>infix</Normal Text><Separator Symbol>:</Separator Symbol><Symbol>(</Symbol><String Delimiter>'</String Delimiter><String>+</String><String Delimiter>'</String Delimiter><Symbol>)</Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$a</Variable><Separator Symbol>:</Separator Symbol><Attribute>b</Attribute><String Delimiter><</String Delimiter><String>c</String><String Delimiter>></String Delimiter><Separator Symbol>:</Separator Symbol><Attribute>d</Attribute><String Delimiter><</String Delimiter><String>e</String><String Delimiter>></String Delimiter><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>100</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$a</Variable><Separator Symbol>:</Separator Symbol><Attribute>d</Attribute><String Delimiter><</String Delimiter><String>e</String><String Delimiter>></String Delimiter><Separator Symbol>:</Separator Symbol><Attribute>b</Attribute><String Delimiter><</String Delimiter><String>c</String><String Delimiter>></String Delimiter><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>200</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Variable>$a</Variable><Separator Symbol>:</Separator Symbol><Attribute>b</Attribute><String Delimiter><</String Delimiter><String>c</String><String Delimiter>></String Delimiter><Separator Symbol>:</Separator Symbol><Attribute>d</Attribute><String Delimiter><</String Delimiter><String>e</String><String Delimiter>></String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Keyword>use</Keyword><Normal Text> </Normal Text><Data Type>Test</Data Type><Separator Symbol>;</Separator Symbol><Normal Text> plan </Normal Text><Decimal>1</Decimal><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Variable Storage>constant</Variable Storage><Normal Text> </Normal Text><Variable>&term</Variable><Separator Symbol>:</Separator Symbol><String Delimiter><</String Delimiter><String>👍</String><String Delimiter>></String Delimiter><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Variable>&ok</Variable><Member Operator>.</Member Operator><Normal Text>assuming</Normal Text><Symbol>(</Symbol><Keyword Value>True</Keyword Value><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>👍</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$x</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Keyword>do</Keyword><Normal Text> </Normal Text><Control Flow>if</Control Flow><Normal Text> </Normal Text><Keyword Value>True</Keyword Value><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Decimal>42</Decimal><Normal Text> </Normal Text><Symbol>}</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Decimal>1000000</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>1_000_000</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>10_00000</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>100_00_00</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Operator>-</Operator><Decimal>2</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>12345</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Hex>0xBEEF</Hex><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Octal>0o755</Octal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Separator Symbol>:</Separator Symbol><Decimal>3</Decimal><String Delimiter><</String Delimiter><Decimal>1201</Decimal><String Delimiter>></String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Float>1.0</Float><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Float>3.14159</Float><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Operator>-</Operator><Float>2.5</Float><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Separator Symbol>:</Separator Symbol><Decimal>3</Decimal><String Delimiter><</String Delimiter><Float>21.0012</Float><String Delimiter>></String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Float>1e0</Float><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Float>6.022e23</Float><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Float>1e-9</Float><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Operator>-</Operator><Float>2e48</Float><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Float>2e2</Float><Number Suffix>i</Number Suffix><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Float>.42</Float><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Decimal>2</Decimal><Member Operator>.</Member Operator><Normal Text>e2</Normal Text><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Float>.2</Float><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Octal>0o3</Octal><Error>9</Error><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Hex>0xfF3</Hex><Error>u</Error><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Octal>0o</Octal><Error>i</Error><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Hex>0x</Hex><Error>i</Error><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Separator Symbol>:</Separator Symbol><Decimal>3</Decimal><String Delimiter><</String Delimiter><Error>></Error><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Separator Symbol>:</Separator Symbol><Decimal>23</Decimal><String Delimiter><</String Delimiter><Decimal>gg</Decimal><Error> </Error><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Comment># error</Comment><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Control Flow>for</Control Flow><Normal Text> </Normal Text><Variable>$size</Variable><Normal Text> </Normal Text><Hyper Operator>«</Hyper Operator><Symbol>[</Symbol><Normal Text>r</Normal Text><Operator>/</Operator><Symbol>]</Symbol><Hyper Operator>«</Hyper Operator><Normal Text> </Normal Text><Symbol>(</Symbol><Decimal>2</Decimal><Operator>**</Operator><Decimal>60</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Operator>**</Operator><Decimal>50</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Operator>**</Operator><Decimal>40</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Operator>**</Operator><Decimal>30</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Operator>**</Operator><Decimal>20</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Operator>**</Operator><Decimal>10</Decimal><Symbol>)</Symbol><br/>
<Normal Text>          </Normal Text><Operator>Z</Operator><Normal Text>      </Normal Text><String Delimiter><</String Delimiter><String>EB     PB     TB     GB     MB     KB</String><String Delimiter>></String Delimiter><Normal Text> </Normal Text><Operator>-></Operator><Normal Text> </Normal Text><Symbol>[</Symbol><Variable>\v</Variable><Separator Symbol>,</Separator Symbol><Variable>\suffix</Variable><Symbol>]</Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$a</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>32</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Variable>$a</Variable><Normal Text> </Normal Text><Operator>+=</Operator><Normal Text> </Normal Text><Decimal>10</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Variable>$a</Variable><Normal Text> </Normal Text><Operator>-=</Operator><Normal Text> </Normal Text><Decimal>2</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Variable>$a</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>3</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Variable>$a</Variable><Normal Text> </Normal Text><Operator>min=</Operator><Normal Text> </Normal Text><Decimal>5</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Variable>$s</Variable><Normal Text> </Normal Text><Operator>~=</Operator><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>b</String><String Delimiter>'</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Declare Routine>sub</Declare Routine><Normal Text> infix</Normal Text><Separator Symbol>:</Separator Symbol><String Delimiter><</String Delimiter><String>space-concat</String><String Delimiter>></String Delimiter><Normal Text> </Normal Text><Symbol>(</Symbol><Variable>$a</Variable><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Variable>$b</Variable><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Variable>$a</Variable><Normal Text> </Normal Text><Operator>~</Operator><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String> </String><String Delimiter>"</String Delimiter><Normal Text> </Normal Text><Operator>~</Operator><Normal Text> </Normal Text><Variable>$b</Variable><Normal Text> </Normal Text><Symbol>}</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$a</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>word1</String><String Delimiter>'</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Variable>$a</Variable><Normal Text> space-concat</Normal Text><Operator>=</Operator><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>word2</String><String Delimiter>'</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Data Type>Real</Data Type><Normal Text> </Normal Text><Variable>$a</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>1</Decimal><Operator>/</Operator><Decimal>2</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Variable>$a</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Float>3.14</Float><Separator Symbol>;</Separator Symbol><br/>
<Variable>$a</Variable><Normal Text> </Normal Text><Member Operator>.=</Member Operator><Normal Text> round</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$a</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Keyword Value>True</Keyword Value><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Operator>so</Operator><Normal Text> </Normal Text><Variable>$a</Variable><Normal Text> </Normal Text><Operator>!=</Operator><Normal Text> </Normal Text><Keyword Value>True</Keyword Value><Separator Symbol>;</Separator Symbol><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$i</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>10</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$release</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Data Type>Date</Data Type><Member Operator>.</Member Operator><Normal Text>new</Normal Text><Symbol>(</Symbol><Separator Symbol>:</Separator Symbol><Decimal>2015</Decimal><Normal Text>year</Normal Text><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Separator Symbol>:</Separator Symbol><Decimal>12</Decimal><Normal Text>month</Normal Text><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Separator Symbol>:</Separator Symbol><Decimal>24</Decimal><Normal Text>day</Normal Text><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$today</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Data Type>Date</Data Type><Member Operator>.</Member Operator><Normal Text>today</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Operator>so</Operator><Normal Text> </Normal Text><Variable>$release</Variable><Normal Text> </Normal Text><Operator>!before</Operator><Normal Text> </Normal Text><Variable>$today</Variable><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Decimal>4</Decimal><Normal Text> </Normal Text><Operator>R/</Operator><Normal Text> </Normal Text><Decimal>12</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Symbol>[</Symbol><Operator>R/</Operator><Symbol>]</Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>4</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>16</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Symbol>[</Symbol><Operator>RZ~</Operator><Symbol>]</Symbol><Normal Text> </Normal Text><String Delimiter><</String Delimiter><String>1 2 3</String><String Delimiter>></String Delimiter><Separator Symbol>,</Separator Symbol><String Delimiter><</String Delimiter><String>4 5 6</String><String Delimiter>></String Delimiter><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Symbol>(</Symbol><Decimal>1</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>3</Decimal><Symbol>)</Symbol><Normal Text> </Normal Text><Hyper Operator>»</Hyper Operator><Operator>*</Operator><Hyper Operator>»</Hyper Operator><Normal Text> </Normal Text><Decimal>2</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Symbol>(</Symbol><Decimal>1</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>3</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>4</Decimal><Symbol>)</Symbol><Normal Text> </Normal Text><Hyper Operator>»</Hyper Operator><Operator>~</Operator><Hyper Operator>»</Hyper Operator><Normal Text> </Normal Text><String Delimiter><</String Delimiter><String>a b</String><String Delimiter>></String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Symbol>(</Symbol><Decimal>1</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>3</Decimal><Symbol>)</Symbol><Normal Text> </Normal Text><Hyper Operator>»</Hyper Operator><Operator>+</Operator><Hyper Operator>«</Hyper Operator><Normal Text> </Normal Text><Symbol>(</Symbol><Decimal>4</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>5</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>6</Decimal><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Symbol>(</Symbol><Variable>&sin</Variable><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Variable>&cos</Variable><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Variable>&sqrt</Variable><Symbol>)</Symbol><Hyper Operator>»</Hyper Operator><Member Operator>.</Member Operator><Symbol>(</Symbol><Float>0.5</Float><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Variable>@a</Variable><Normal Text> </Normal Text><Hyper Operator>»</Hyper Operator><Operator>+=</Operator><Hyper Operator>»</Hyper Operator><Normal Text> </Normal Text><Decimal>1</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Symbol>(</Symbol><Variable>$a</Variable><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Variable>$b</Variable><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Variable>$c</Variable><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Symbol>((</Symbol><Variable>$a</Variable><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Variable>$b</Variable><Symbol>)</Symbol><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Variable>$c</Variable><Symbol>)</Symbol><Normal Text> </Normal Text><Hyper Operator>«</Hyper Operator><Operator>=</Operator><Hyper Operator>»</Hyper Operator><Normal Text> </Normal Text><Symbol>((</Symbol><Decimal>1</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Symbol>)</Symbol><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>3</Decimal><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Operator>!</Operator><Hyper Operator>«</Hyper Operator><Normal Text> </Normal Text><Variable>@wisdom</Variable><Separator Symbol>;</Separator Symbol><br/>
<Variable>@a</Variable><Hyper Operator>»</Hyper Operator><Operator>++</Operator><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Operator>-</Operator><Hyper Operator>«</Hyper Operator><Normal Text> </Normal Text><Symbol>[[</Symbol><Decimal>1</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Symbol>]</Symbol><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>3</Decimal><Symbol>]</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable>@slops</Variable><Hyper Operator>»</Hyper Operator><Member Operator>.?</Member Operator><Normal Text>this-method-may-not-exist</Normal Text><Symbol>()</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>%outer</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>1</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>3</Decimal><Normal Text> </Normal Text><Operator>Z=></Operator><Normal Text> </Normal Text><String Delimiter><</String Delimiter><String>a b c</String><String Delimiter>></String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>%inner</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>1</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Normal Text> </Normal Text><Operator>Z=></Operator><Normal Text> </Normal Text><String Delimiter><</String Delimiter><String>x z</String><String Delimiter>></String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Variable>%outer</Variable><Normal Text> </Normal Text><Hyper Operator>«</Hyper Operator><Operator>~</Operator><Hyper Operator>»</Hyper Operator><Normal Text> </Normal Text><Variable>%inner</Variable><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Variable>$neighbors</Variable><Normal Text> </Normal Text><Hyper Operator>»>></Hyper Operator><Operator>+</Operator><Hyper Operator><<»</Hyper Operator><Normal Text> </Normal Text><Symbol>(</Symbol><Variable>$p</Variable><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Variable>*</Variable><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Declare Routine>sub</Declare Routine><Normal Text> plus </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Variable>$</Variable><Twigil>^</Twigil><Variable>a</Variable><Normal Text> </Normal Text><Operator>+</Operator><Normal Text> </Normal Text><Variable>$</Variable><Twigil>^</Twigil><Variable>b</Variable><Normal Text> </Normal Text><Symbol>}</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Symbol>[[</Symbol><Variable>&plus</Variable><Symbol>]]</Symbol><Normal Text> </Normal Text><Decimal>1</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>3</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>@n</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Symbol>[</Symbol><Normal Text>\</Normal Text><Operator>~</Operator><Symbol>]</Symbol><Normal Text> </Normal Text><Decimal>1</Decimal><Operator>..</Operator><Variable>*</Variable><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Variable>@n</Variable><Symbol>[</Symbol><Operator>^</Operator><Decimal>5</Decimal><Symbol>]</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable>@l</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><String Delimiter><</String Delimiter><String>a b c d</String><String Delimiter>></String Delimiter><Normal Text> </Normal Text><Operator>Z~</Operator><Normal Text> </Normal Text><Decimal>1</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Variable>*</Variable><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Operator>so</Operator><Normal Text> </Normal Text><Decimal>1</Decimal><Normal Text> </Normal Text><Operator>S&</Operator><Normal Text> </Normal Text><Decimal>2</Decimal><Normal Text> </Normal Text><Operator>S&</Operator><Normal Text> </Normal Text><Decimal>3</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Variable>@a</Variable><Normal Text> </Normal Text><Operator>X</Operator><Symbol>[</Symbol><Operator>+=</Operator><Symbol>]</Symbol><Normal Text> </Normal Text><Variable>@b</Variable><Separator Symbol>;</Separator Symbol><br/>
<Declare Routine>multi</Declare Routine><Normal Text> </Normal Text><Declare Routine>sub</Declare Routine><Normal Text> postfix</Normal Text><Separator Symbol>:</Separator Symbol><String Delimiter><</String Delimiter><String>++</String><String Delimiter>></String Delimiter><Symbol>(</Symbol><Variable>$x</Variable><Normal Text> </Normal Text><Keyword>is</Keyword><Normal Text> </Normal Text><Property>rw</Property><Symbol>)</Symbol><Normal Text> </Normal Text><Keyword>is</Keyword><Normal Text> </Normal Text><Property>assoc</Property><String Delimiter><</String Delimiter><String>non</String><String Delimiter>></String Delimiter><br/>
<Function>say</Function><Normal Text> </Normal Text><Variable>$filename</Variable><Operator>++</Operator><Normal Text> </Normal Text><Control Flow>for</Control Flow><Normal Text> </Normal Text><Decimal>1</Decimal><Operator>..</Operator><Decimal>3</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Variable>$x</Variable><Normal Text> </Normal Text><Operator>%</Operator><Normal Text> </Normal Text><Variable>$y</Variable><Normal Text> </Normal Text><Operator>==</Operator><Normal Text> </Normal Text><Variable>$x</Variable><Normal Text> </Normal Text><Operator>-</Operator><Normal Text> floor</Normal Text><Symbol>(</Symbol><Variable>$x</Variable><Normal Text> </Normal Text><Operator>/</Operator><Normal Text> </Normal Text><Variable>$y</Variable><Symbol>)</Symbol><Normal Text> </Normal Text><Operator>*</Operator><Normal Text> </Normal Text><Variable>$y</Variable><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter><</String Delimiter><String>a a b c a d</String><String Delimiter>></String Delimiter><Normal Text> </Normal Text><Operator>⊍</Operator><Normal Text> bag</Normal Text><Symbol>(</Symbol><String Delimiter><</String Delimiter><String>a a b c c</String><String Delimiter>></String Delimiter><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Operator>-</Operator><Hyper Operator>«</Hyper Operator><Normal Text> </Normal Text><String Delimiter><</String Delimiter><String>1 2 3</String><String Delimiter>></String Delimiter><br/>
<Normal Text></Normal Text><br/>
<Comment># This is wrong: creates a Hash of Mixes, not Mix:</Comment><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Data Type>Mix</Data Type><Normal Text> </Normal Text><Variable>%mix</Variable><Separator Symbol>;</Separator Symbol><br/>
<Comment># Works with $ sigil:</Comment><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Data Type>Mix</Data Type><Normal Text> </Normal Text><Variable>$mix</Variable><Separator Symbol>;</Separator Symbol><br/>
<Comment># Can be typed:</Comment><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Data Type>Mix</Data Type><Symbol>[</Symbol><Normal Text>Int</Normal Text><Symbol>]</Symbol><Normal Text> </Normal Text><Variable>$mix-of-ints</Variable><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$x</Variable><Separator Symbol>;</Separator Symbol><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$x</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>7</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Data Type>Int</Data Type><Normal Text> </Normal Text><Variable>$x</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>7</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Data Type>Int</Data Type><Separator Symbol>:</Separator Symbol><Data Type>D</Data Type><Normal Text> </Normal Text><Variable>$x</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>7</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>ndef</Normal Text><Symbol>)</Symbol><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Data Type>Int</Data Type><Normal Text> </Normal Text><Variable>$x</Variable><Normal Text> </Normal Text><Keyword>where</Keyword><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Variable>$_</Variable><Normal Text> </Normal Text><Operator>></Operator><Normal Text> </Normal Text><Decimal>3</Decimal><Normal Text> </Normal Text><Symbol>}</Symbol><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>7</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Data Type>Int</Data Type><Normal Text> </Normal Text><Variable>$x</Variable><Normal Text> </Normal Text><Keyword>where</Keyword><Normal Text> </Normal Text><Variable>*</Variable><Normal Text> </Normal Text><Operator>></Operator><Normal Text> </Normal Text><Decimal>3</Decimal><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>7</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable>$str</Variable><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>tr</Pattern Delimiter><Pattern Modifier>:d:c</Pattern Modifier><Pattern Delimiter>!</Pattern Delimiter><Pattern>dol</Pattern><Pattern Delimiter>!</Pattern Delimiter><String>wne</String><Pattern Delimiter>!</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Variable>$str</Variable><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>TR</Pattern Delimiter><Pattern Modifier>:c</Pattern Modifier><Pattern Delimiter>/</Pattern Delimiter><Pattern>dol</Pattern><Pattern Delimiter>/</Pattern Delimiter><String>wne</String><Pattern Delimiter>/</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Variable>$str</Variable><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>s!</Pattern Delimiter><Pattern>foo</Pattern><Pattern Delimiter>!</Pattern Delimiter><String>fox</String><Pattern Delimiter>!</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Variable>$str</Variable><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>/</Pattern Delimiter><Pattern>foo</Pattern><Pattern Delimiter>/</Pattern Delimiter><Normal Text>bar</Normal Text><Pattern Delimiter>/</Pattern Delimiter><Pattern>;</Pattern><br/>
<Variable>$str</Variable><Pattern> </Pattern><Operator>~~</Operator><Pattern> </Pattern><Pattern Delimiter>/</Pattern Delimiter><Operator>//</Operator><Separator Symbol>;</Separator Symbol><br/>
<Variable>$str</Variable><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>rx/</Pattern Delimiter><Pattern>foo</Pattern><Pattern Delimiter>/</Pattern Delimiter><Normal Text>bar</Normal Text><Pattern Delimiter>/</Pattern Delimiter><Pattern>;</Pattern><br/>
<Variable>$str</Variable><Pattern> </Pattern><Operator>~~</Operator><Pattern> Q </Pattern><Pattern Modifier>:regex</Pattern Modifier><Pattern> </Pattern><Pattern Delimiter>/</Pattern Delimiter><Normal Text>foo</Normal Text><Pattern Delimiter>/</Pattern Delimiter><Pattern>;</Pattern><br/>
<Variable>$str</Variable><Pattern> </Pattern><Operator>~~</Operator><Pattern> s</Pattern><Symbol>{</Symbol><Normal Text>b</Normal Text><Symbol>(</Symbol><Member Operator>.</Member Operator><Symbol>)</Symbol><Normal Text>r</Normal Text><Symbol>}</Symbol><Pattern> = </Pattern><String Delimiter>"</String Delimiter><String> d</String><Variable>$0</Variable><String>n</String><String Delimiter>"</String Delimiter><Pattern>;</Pattern><br/>
<Variable>$str</Variable><Pattern> </Pattern><Operator>~~</Operator><Pattern> regex</Pattern><Symbol>{</Symbol><Normal Text>fox</Normal Text><Symbol>}</Symbol><Pattern>; </Pattern><Comment># error</Comment><br/>
<Variable>$str</Variable><Pattern> </Pattern><Operator>~~</Operator><Pattern> regex </Pattern><Symbol>{</Symbol><Normal Text>fox</Normal Text><Symbol>}</Symbol><Pattern>;</Pattern><br/>
<Pattern>rx</Pattern><Pattern Delimiter>/</Pattern Delimiter><Normal Text> </Normal Text><Operator>^</Operator><Normal Text>ab </Normal Text><Pattern Delimiter>/</Pattern Delimiter><Pattern>;</Pattern><br/>
<Pattern Delimiter>/</Pattern Delimiter><Normal Text> </Normal Text><Operator>^</Operator><Normal Text> ab </Normal Text><Pattern Delimiter>/</Pattern Delimiter><Pattern>;</Pattern><br/>
<Pattern>rx</Pattern><Pattern Delimiter>/</Pattern Delimiter><Normal Text> </Normal Text><Variable>\d</Variable><Normal Text> </Normal Text><Operator>**</Operator><Normal Text> </Normal Text><Decimal>2</Decimal><Operator>/</Operator><Separator Symbol>;</Separator Symbol><br/>
<Variable>$str</Variable><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>tr</Pattern Delimiter><Pattern Modifier>:d:c</Pattern Modifier><Pattern Delimiter>!</Pattern Delimiter><Pattern>dol</Pattern><Pattern Delimiter>!</Pattern Delimiter><String>wne</String><Pattern Delimiter>!</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Variable>$str</Variable><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>TR</Pattern Delimiter><Pattern Modifier>:c</Pattern Modifier><Pattern Delimiter>/</Pattern Delimiter><Pattern>dol</Pattern><Pattern Delimiter>/</Pattern Delimiter><String>wne</String><Pattern Delimiter>/</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Variable>$str</Variable><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>s!</Pattern Delimiter><Pattern>foo</Pattern><Pattern Delimiter>!</Pattern Delimiter><String>fox</String><Pattern Delimiter>!</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Variable>$str</Variable><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>rx/</Pattern Delimiter><Pattern>foo</Pattern><Pattern Delimiter>/</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Variable>$str</Variable><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Keyword>regex</Keyword><Separator Symbol>:</Separator Symbol><Attribute>ds</Attribute><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text>fox</Normal Text><Symbol>}</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Variable>$str</Variable><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Keyword>regex</Keyword><Symbol>{</Symbol><Pattern>fox</Pattern><Symbol>}</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Variable Storage>my</Variable Storage><Normal Text> a </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Pattern Delimiter>/</Pattern Delimiter><Pattern>a</Pattern><Pattern Delimiter>/</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Pattern Delimiter>rx/</Pattern Delimiter><Pattern> </Pattern><Pattern Control Flow>^</Pattern Control Flow><Pattern>ab </Pattern><Pattern Delimiter>/</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>a </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Pattern Delimiter>/</Pattern Delimiter><Pattern> </Pattern><Pattern Control Flow>^</Pattern Control Flow><Pattern> ab </Pattern><String Delimiter>'</String Delimiter><String>a</String><String Delimiter>'</String Delimiter><Pattern> </Pattern><String Delimiter>"</String Delimiter><Variable>$a</Variable><String Delimiter>"</String Delimiter><Pattern> </Pattern><Pattern Character Class>\d</Pattern Character Class><Pattern> </Pattern><Pattern Character Class>\n\n</Pattern Character Class><Pattern> </Pattern><Pattern Meta Character><:</Pattern Meta Character><Pattern Unicode Property>L </Pattern Unicode Property><Pattern Meta Character>:</Pattern Meta Character><Pattern Unicode Property>Script</Pattern Unicode Property><String Delimiter><</String Delimiter><String>Latin</String><String Delimiter>></String Delimiter><Pattern Meta Character>></Pattern Meta Character><Pattern> </Pattern><Pattern Meta Character><:</Pattern Meta Character><Pattern Unicode Property>Block</Pattern Unicode Property><Symbol>(</Symbol><String Delimiter>'</String Delimiter><String>Basic Latin</String><String Delimiter>'</String Delimiter><Symbol>)</Symbol><Pattern Meta Character>></Pattern Meta Character><Pattern>  </Pattern><Pattern Delimiter>/</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Operator>//</Operator><Separator Symbol>;</Separator Symbol><br/>
<Normal Text> </Normal Text><Pattern Delimiter>rx</Pattern Delimiter><Pattern Modifier>:sigspace</Pattern Modifier><Pattern Delimiter>.</Pattern Delimiter><Pattern Character Class>\d</Pattern Character Class><Pattern Quantifier>+</Pattern Quantifier><Pattern> </Pattern><Pattern Meta Character><</Pattern Meta Character><Pattern Unicode Property> </Pattern Unicode Property><Pattern Meta Character>:</Pattern Meta Character><Pattern Unicode Property>Script </Pattern Unicode Property><Pattern Quantifier>+</Pattern Quantifier><Pattern Meta Character>:</Pattern Meta Character><Pattern Unicode Property>Block "Basic Latin" </Pattern Unicode Property><Pattern Quantifier>+</Pattern Quantifier><Pattern Unicode Property> </Pattern Unicode Property><Pattern Meta Character>:</Pattern Meta Character><Pattern Unicode Property>L</Pattern Unicode Property><Pattern Meta Character>></Pattern Meta Character><Pattern> </Pattern><Comment>#plop</Comment><br/>
<String Delimiter>'</String Delimiter><String>-</String><String Delimiter>'</String Delimiter><Pattern Delimiter>.</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Pattern Delimiter>rx/</Pattern Delimiter><Pattern> </Pattern><Pattern Character Class>\d</Pattern Character Class><Pattern> </Pattern><Pattern Quantifier>**</Pattern Quantifier><Pattern> 2 </Pattern><Pattern Meta Character><</Pattern Meta Character><Pattern Bracket>[</Pattern Bracket><Pattern Character Class>\d</Pattern Character Class><Pattern Character> a d</Pattern Character><Pattern Bracket>]</Pattern Bracket><Pattern Quantifier>+</Pattern Quantifier><Pattern Bracket>[</Pattern Bracket><Pattern Character Class>\x233</Pattern Character Class><Pattern Quantifier>..</Pattern Quantifier><Pattern Character>\] " </Pattern Character><Pattern Character Class>\c[dsds]</Pattern Character Class><Pattern Bracket>]</Pattern Bracket><Pattern Meta Character>></Pattern Meta Character><Pattern Delimiter>/</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Variable>$str</Variable><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>m</Pattern Delimiter><Pattern Modifier>:g</Pattern Modifier><Pattern Delimiter>/</Pattern Delimiter><Symbol>[(</Symbol><Pattern Meta Character><</Pattern Meta Character><Pattern Bracket>[</Pattern Bracket><Pattern Character>ACGT</Pattern Character><Pattern Bracket>]</Pattern Bracket><Pattern Meta Character>></Pattern Meta Character><Pattern> </Pattern><Pattern Quantifier>**:</Pattern Quantifier><Pattern> 3</Pattern><Symbol>)</Symbol><Pattern> </Pattern><Pattern Character Class>\s</Pattern Character Class><Pattern Quantifier>*</Pattern Quantifier><Symbol>]</Symbol><Pattern Quantifier>+</Pattern Quantifier><Pattern> </Pattern><Pattern Character Class>\s</Pattern Character Class><Pattern Quantifier>+</Pattern Quantifier><Pattern> </Pattern><Symbol>(</Symbol><Pattern Meta Character><</Pattern Meta Character><Pattern Bracket>[</Pattern Bracket><Pattern Character>A</Pattern Character><Pattern Quantifier>..</Pattern Quantifier><Pattern Character>Z a a</Pattern Character><Pattern Quantifier>..</Pattern Quantifier><Pattern Character>z </Pattern Character><Pattern Character Class>\s</Pattern Character Class><Pattern Bracket>]</Pattern Bracket><Pattern Meta Character>></Pattern Meta Character><Pattern Quantifier>+</Pattern Quantifier><Symbol>)</Symbol><Pattern Delimiter>/</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>$333</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>m/</Pattern Delimiter><Pattern Control Flow>^^</Pattern Control Flow><Pattern> </Pattern><Pattern Meta Character><</Pattern Meta Character><Pattern Control Flow>?</Pattern Control Flow><Symbol>[</Symbol><Pattern Control Flow>$</Pattern Control Flow><Symbol>]</Symbol><Pattern Meta Character>></Pattern Meta Character><Pattern> </Pattern><Pattern Special Character>.</Pattern Special Character><Pattern> </Pattern><Pattern Character Class>\d</Pattern Character Class><Pattern Quantifier>+</Pattern Quantifier><Pattern> </Pattern><Pattern Delimiter>/</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>/foo/o/bar/</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>/</Pattern Delimiter><Pattern Character>\/</Pattern Character><Pattern Special Character>.</Pattern Special Character><Pattern Quantifier>**!</Pattern Quantifier><Symbol>{</Symbol><Decimal>1</Decimal><Operator>..</Operator><Decimal>10</Decimal><Symbol>}</Symbol><Pattern Character>\/</Pattern Character><Pattern Delimiter>/</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>rx</Normal Text><Symbol>(</Symbol><Normal Text>a</Normal Text><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Pattern Delimiter>rx (</Pattern Delimiter><Pattern>a</Pattern><Pattern Delimiter>)</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Variable>$str</Variable><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Keyword>regex</Keyword><Normal Text> </Normal Text><Symbol>{</Symbol><Pattern>fox</Pattern><Symbol>}</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Variable>$str</Variable><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>s{</Pattern Delimiter><Pattern>b</Pattern><Symbol>(</Symbol><Pattern Special Character>.</Pattern Special Character><Symbol>)</Symbol><Pattern>r</Pattern><Pattern Delimiter>}</Pattern Delimiter><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String> d</String><Variable>$0</Variable><String>n</String><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Control Flow>if</Control Flow><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>abc</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>/</Pattern Delimiter><Pattern> </Pattern><Symbol>[</Symbol><Pattern>a</Pattern><Pattern Control Flow>||</Pattern Control Flow><Pattern>b</Pattern><Symbol>]</Symbol><Pattern> </Pattern><Symbol>(</Symbol><Pattern>c</Pattern><Symbol>)</Symbol><Pattern> </Pattern><Pattern Delimiter>/</Pattern Delimiter><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Function>say</Function><Normal Text> </Normal Text><Operator>~</Operator><Variable>$0</Variable><Separator Symbol>;</Separator Symbol><Normal Text>                </Normal Text><Comment># OUTPUT: «c␤»</Comment><br/>
<Symbol>}</Symbol><br/>
<Control Flow>if</Control Flow><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>abc</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>/</Pattern Delimiter><Pattern> </Pattern><Pattern Named Capture>$<myname></Pattern Named Capture><Pattern> = </Pattern><Symbol>[</Symbol><Pattern> </Pattern><Pattern Character Class>\w</Pattern Character Class><Pattern Quantifier>+</Pattern Quantifier><Pattern> </Pattern><Symbol>]</Symbol><Pattern> </Pattern><Pattern Delimiter>/</Pattern Delimiter><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Function>say</Function><Normal Text> </Normal Text><Operator>~</Operator><Variable>$<myname></Variable><Normal Text>      </Normal Text><Comment># OUTPUT: «abc␤»</Comment><br/>
<Symbol>}</Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>abc</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>/</Pattern Delimiter><Pattern> a </Pattern><Pattern Meta Character><(</Pattern Meta Character><Pattern> b </Pattern><Pattern Meta Character>)></Pattern Meta Character><Pattern> c</Pattern><Pattern Delimiter>/</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>abc</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>/</Pattern Delimiter><Pattern> </Pattern><Pattern Meta Character><(</Pattern Meta Character><Pattern>a </Pattern><Pattern Meta Character><(</Pattern Meta Character><Pattern> b </Pattern><Pattern Meta Character>)></Pattern Meta Character><Pattern> c</Pattern><Pattern Meta Character>)></Pattern Meta Character><Pattern Delimiter>/</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>abc</String><String Delimiter>"</String Delimiter><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>/</Pattern Delimiter><Pattern>a</Pattern><Pattern Special Character>.</Pattern Special Character><Pattern> </Pattern><Pattern Control Flow>|</Pattern Control Flow><Pattern> ab </Pattern><Symbol>{</Symbol><Normal Text> </Normal Text><Function>print</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>win</String><String Delimiter>"</String Delimiter><Normal Text> </Normal Text><Symbol>}</Symbol><Pattern> </Pattern><Pattern Delimiter>/</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Operator>so</Operator><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>hello world</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>m</Pattern Delimiter><Pattern Modifier>:Perl5</Pattern Modifier><Operator>/</Operator><Pattern Internal Operator>^</Pattern Internal Operator><Pattern>hello </Pattern><Pattern Internal Operator>(</Pattern Internal Operator><Pattern>world</Pattern><Pattern Internal Operator>)</Pattern Internal Operator><Operator>/</Operator><Separator Symbol>;</Separator Symbol><Normal Text>   </Normal Text><Comment># OUTPUT: «True␤»</Comment><br/>
<Operator>so</Operator><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>hello world</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>m/</Pattern Delimiter><Pattern Control Flow>^</Pattern Control Flow><Pattern>hello </Pattern><Symbol>(</Symbol><Pattern>world</Pattern><Symbol>)</Symbol><Pattern Delimiter>/</Pattern Delimiter><Separator Symbol>;</Separator Symbol><Normal Text>         </Normal Text><Comment># OUTPUT: «False␤»</Comment><br/>
<Operator>so</Operator><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>hello world</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>m/</Pattern Delimiter><Pattern Control Flow>^</Pattern Control Flow><Pattern> </Pattern><String Delimiter>'</String Delimiter><String>hello </String><String Delimiter>'</String Delimiter><Pattern> </Pattern><Symbol>(</Symbol><String Delimiter>'</String Delimiter><String>world</String><String Delimiter>'</String Delimiter><Symbol>)</Symbol><Pattern Delimiter>/</Pattern Delimiter><Separator Symbol>;</Separator Symbol><Normal Text>   </Normal Text><Comment># OUTPUT: «True␤»</Comment><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>Abra abra CADABRA</String><String Delimiter>"</String Delimiter><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>m</Pattern Delimiter><Pattern Modifier>:exhaustive</Pattern Modifier><Pattern Delimiter>/</Pattern Delimiter><Pattern Modifier>:i</Pattern Modifier><Pattern> a </Pattern><Pattern Character Class>\w</Pattern Character Class><Pattern Quantifier>+</Pattern Quantifier><Pattern> a</Pattern><Pattern Delimiter>/</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Keyword>regex</Keyword><Normal Text> ipv4-octet </Normal Text><Symbol>{</Symbol><Pattern> </Pattern><Pattern Character Class>\d</Pattern Character Class><Pattern> </Pattern><Pattern Quantifier>**</Pattern Quantifier><Pattern> 1</Pattern><Operator>..</Operator><Pattern>3 </Pattern><Pattern Meta Character><</Pattern Meta Character><Pattern Control Flow>?</Pattern Control Flow><Symbol>{</Symbol><Normal Text> </Normal Text><Variable>$/</Variable><Member Operator>.</Member Operator><Data Type>Int</Data Type><Normal Text> </Normal Text><String Delimiter><</String Delimiter><String>= 255 && $/.Int </String><String Delimiter>></String Delimiter><Operator>=</Operator><Normal Text> </Normal Text><Decimal>0</Decimal><Normal Text> </Normal Text><Symbol>}</Symbol><Pattern Meta Character>></Pattern Meta Character><Pattern> </Pattern><Symbol>}</Symbol><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Keyword>regex</Keyword><Normal Text> ipv4-octet </Normal Text><Symbol>{</Symbol><Pattern> </Pattern><Pattern Character Class>\d</Pattern Character Class><Pattern> </Pattern><Pattern Quantifier>**</Pattern Quantifier><Pattern> 1</Pattern><Operator>..</Operator><Pattern>3 </Pattern><Pattern Meta Character><</Pattern Meta Character><Pattern Control Flow>?</Pattern Control Flow><Symbol>{</Symbol><Normal Text> </Normal Text><Keyword Value>True</Keyword Value><Normal Text> </Normal Text><Symbol>}</Symbol><Pattern Meta Character>></Pattern Meta Character><Pattern> </Pattern><Symbol>}</Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>abc</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>/</Pattern Delimiter><Pattern> </Pattern><Pattern Meta Character><</Pattern Meta Character><Pattern Control Flow>?</Pattern Control Flow><Pattern Meta Character>before</Pattern Meta Character><Pattern> a</Pattern><Pattern Meta Character>></Pattern Meta Character><Pattern> </Pattern><Pattern Control Flow>&&</Pattern Control Flow><Pattern> </Pattern><Pattern Special Character>.</Pattern Special Character><Pattern> </Pattern><Pattern Delimiter>/</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>abcdefg</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>rx{</Pattern Delimiter><Pattern> abc </Pattern><Pattern Meta Character><</Pattern Meta Character><Pattern Bracket>[</Pattern Bracket><Pattern Character>email protected</Pattern Character><Pattern Bracket>]</Pattern Bracket><Pattern Unicode Property>ending_letters</Pattern Unicode Property><Pattern Meta Character>></Pattern Meta Character><Pattern> </Pattern><Pattern Delimiter>}</Pattern Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Pattern Delimiter>s</Pattern Delimiter><Pattern Modifier>:g</Pattern Modifier><Pattern Delimiter>[</Pattern Delimiter><Pattern Character Class>\d</Pattern Character Class><Pattern Quantifier>+</Pattern Quantifier><Pattern> </Pattern><Pattern Meta Character><</Pattern Meta Character><Pattern Control Flow>?</Pattern Control Flow><Pattern Meta Character>before</Pattern Meta Character><Pattern> </Pattern><Pattern Character Class>\s</Pattern Character Class><Pattern Quantifier>*</Pattern Quantifier><Pattern> </Pattern><Variable>@units</Variable><Pattern Meta Character>></Pattern Meta Character><Pattern Delimiter>]</Pattern Delimiter><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>5</Decimal><Normal Text> </Normal Text><Operator>*</Operator><Normal Text> </Normal Text><Variable>$/</Variable><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Declare Routine>sub</Declare Routine><Normal Text> walk</Normal Text><Symbol>(</Symbol><Variable>\thing</Variable><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Variable>*@keys</Variable><Symbol>)</Symbol><Normal Text> </Normal Text><Keyword>is</Keyword><Normal Text> </Normal Text><Property>rw</Property><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$current</Variable><Normal Text> </Normal Text><Operator>:=</Operator><Normal Text> thing</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Control Flow>for</Control Flow><Normal Text> </Normal Text><Variable>@keys</Variable><Normal Text> </Normal Text><Operator>-></Operator><Normal Text> </Normal Text><Variable>$k</Variable><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>        </Normal Text><Control Flow>if</Control Flow><Normal Text> </Normal Text><Variable>$k</Variable><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Data Type>Int</Data Type><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>            </Normal Text><Variable>$current</Variable><Normal Text> </Normal Text><Operator>:=</Operator><Normal Text> </Normal Text><Variable>$current</Variable><Symbol>[</Symbol><Variable>$k</Variable><Symbol>]</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>        </Normal Text><Symbol>}</Symbol><br/>
<Normal Text>        </Normal Text><Control Flow>else</Control Flow><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>            </Normal Text><Variable>$current</Variable><Normal Text> </Normal Text><Operator>:=</Operator><Normal Text> </Normal Text><Variable>$current</Variable><Symbol>{</Symbol><Variable>$k</Variable><Symbol>}</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>        </Normal Text><Symbol>}</Symbol><br/>
<Normal Text>    </Normal Text><Symbol>}</Symbol><br/>
<Normal Text>    </Normal Text><Variable>$current</Variable><Separator Symbol>;</Separator Symbol><br/>
<Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>%hash</Variable><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>walk</Normal Text><Symbol>(</Symbol><Variable>%hash</Variable><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>some</String><String Delimiter>'</String Delimiter><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>key</String><String Delimiter>'</String Delimiter><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>1</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Symbol>)</Symbol><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>autovivified</String><String Delimiter>'</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Variable>%hash</Variable><Member Operator>.</Member Operator><Normal Text>perl</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Keyword>class</Keyword><Normal Text> </Normal Text><Operator>X</Operator><Separator Symbol>::</Separator Symbol><Data Type>WithoutLineNumber</Data Type><Normal Text> </Normal Text><Keyword>is</Keyword><Normal Text> </Normal Text><Operator>X</Operator><Separator Symbol>::</Separator Symbol><Data Type>AdHoc</Data Type><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Declare Routine>multi</Declare Routine><Normal Text> </Normal Text><Declare Routine>method</Declare Routine><Normal Text> gist</Normal Text><Symbol>(</Symbol><Operator>X</Operator><Separator Symbol>::</Separator Symbol><Data Type>WithoutLineNumber</Data Type><Separator Symbol>:</Separator Symbol><Data Type>D</Data Type><Separator Symbol>:</Separator Symbol><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>        </Normal Text><Variable>$</Variable><Twigil>.</Twigil><Variable>payload</Variable><br/>
<Normal Text>    </Normal Text><Symbol>}</Symbol><br/>
<Symbol>}</Symbol><br/>
<Control Flow>die</Control Flow><Normal Text> </Normal Text><Operator>X</Operator><Separator Symbol>::</Separator Symbol><Data Type>WithoutLineNumber</Data Type><Member Operator>.</Member Operator><Normal Text>new</Normal Text><Symbol>(</Symbol><Normal Text>payload </Normal Text><Operator>=></Operator><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>message</String><String Delimiter>"</String Delimiter><Symbol>)</Symbol><br/>
<Normal Text></Normal Text><br/>
<Symbol>{</Symbol><Normal Text> </Normal Text><Control Flow>return</Control Flow><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Control Flow>CATCH</Control Flow><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Control Flow>default</Control Flow><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Variable>$</Variable><Twigil>*</Twigil><Variable>ERR</Variable><Member Operator>.</Member Operator><Function>say</Function><Separator Symbol>:</Separator Symbol><Normal Text> </Normal Text><Member Operator>.^</Member Operator><Normal Text>name</Normal Text><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>: </String><String Delimiter>'</String Delimiter><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Member Operator>.</Member Operator><Data Type>Str</Data Type><Normal Text> </Normal Text><Symbol>}</Symbol><Normal Text> </Normal Text><Symbol>}</Symbol><Normal Text> </Normal Text><Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Declare Routine>multi</Declare Routine><Normal Text> </Normal Text><Declare Routine>sub</Declare Routine><Normal Text> trait_mod</Normal Text><Separator Symbol>:</Separator Symbol><String Delimiter><</String Delimiter><String>is</String><String Delimiter>></String Delimiter><Symbol>(</Symbol><Data Type>Routine</Data Type><Normal Text> </Normal Text><Variable>$r</Variable><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Separator Symbol>:</Separator Symbol><Variable>$export</Variable><Member Operator>!</Member Operator><Symbol>)</Symbol><br/>
<Normal Text></Normal Text><br/>
<Control Flow>react</Control Flow><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Control Flow>whenever</Control Flow><Normal Text> signal</Normal Text><Symbol>(</Symbol><Data Type>SIGINT</Data Type><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>        </Normal Text><Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>goodbye</String><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>        done</Normal Text><br/>
<Normal Text>    </Normal Text><Symbol>}</Symbol><br/>
<Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Normal Text>signal</Normal Text><Symbol>(</Symbol><Data Type>SIGINT</Data Type><Symbol>)</Symbol><Member Operator>.</Member Operator><Normal Text>tap</Normal Text><Separator Symbol>:</Separator Symbol><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>bye</String><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Control Flow>exit</Control Flow><Normal Text> </Normal Text><Symbol>}</Symbol><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Control Flow>loop</Control Flow><Normal Text> </Normal Text><Symbol>{}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Declare Routine>method</Declare Routine><Normal Text> base-repeating</Normal Text><Symbol>(</Symbol><Data Type>Rational</Data Type><Separator Symbol>:</Separator Symbol><Data Type>D</Data Type><Separator Symbol>:</Separator Symbol><Normal Text> </Normal Text><Data Type>Int</Data Type><Separator Symbol>:</Separator Symbol><Data Type>D</Data Type><Symbol>()</Symbol><Normal Text> </Normal Text><Variable>$base</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>10</Decimal><Symbol>)</Symbol><br/>
<Normal Text></Normal Text><br/>
<Declare Routine>multi</Declare Routine><Normal Text> </Normal Text><Declare Routine>sub</Declare Routine><Normal Text> prefix</Normal Text><Separator Symbol>:</Separator Symbol><String Delimiter><</String Delimiter><String>--</String><String Delimiter>></String Delimiter><Symbol>(</Symbol><Variable>$x</Variable><Normal Text> </Normal Text><Keyword>is</Keyword><Normal Text> </Normal Text><Property>rw</Property><Symbol>)</Symbol><Normal Text> </Normal Text><Keyword>is</Keyword><Normal Text> </Normal Text><Property>assoc</Property><String Delimiter><</String Delimiter><String>non</String><String Delimiter>></String Delimiter><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Declare Routine>multi</Declare Routine><Normal Text> </Normal Text><Data Type>MAIN</Data Type><Symbol>(</Symbol><Data Type>Bool</Data Type><Normal Text> </Normal Text><Separator Symbol>:</Separator Symbol><Variable>$man</Variable><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    run </Normal Text><Variable>$</Variable><Twigil>*</Twigil><Variable>EXECUTABLE</Variable><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>--doc</String><String Delimiter>'</String Delimiter><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Variable>$</Variable><Twigil>*</Twigil><Variable>PROGRAM</Variable><Separator Symbol>;</Separator Symbol><br/>
<Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Control Flow>for</Control Flow><Normal Text> </Normal Text><Variable>$file</Variable><Member Operator>.</Member Operator><Normal Text>lines </Normal Text><Operator>-></Operator><Normal Text> </Normal Text><Variable>$line</Variable><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Control Flow>next</Control Flow><Normal Text> </Normal Text><Control Flow>unless</Control Flow><Normal Text> </Normal Text><Variable>$line</Variable><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Comment># ignore any empty lines</Comment><br/>
<Normal Text></Normal Text><br/>
<Normal Text>    </Normal Text><Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Symbol>(</Symbol><Variable>$pairing</Variable><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Variable>$result</Variable><Symbol>)</Symbol><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Variable>$line</Variable><Member Operator>.</Member Operator><Normal Text>split</Normal Text><Symbol>(</Symbol><String Delimiter>'</String Delimiter><String> | </String><String Delimiter>'</String Delimiter><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Symbol>(</Symbol><Variable>$p1</Variable><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Variable>$p2</Variable><Symbol>)</Symbol><Normal Text>          </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Variable>$pairing</Variable><Member Operator>.</Member Operator><Normal Text>words</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Symbol>(</Symbol><Variable>$r1</Variable><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Variable>$r2</Variable><Symbol>)</Symbol><Normal Text>          </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Variable>$result</Variable><Member Operator>.</Member Operator><Normal Text>split</Normal Text><Symbol>(</Symbol><String Delimiter>'</String Delimiter><String>:</String><String Delimiter>'</String Delimiter><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Normal Text>    </Normal Text><Variable>%sets</Variable><Symbol>{</Symbol><Variable>$p1</Variable><Symbol>}</Symbol><Normal Text> </Normal Text><Operator>+=</Operator><Normal Text> </Normal Text><Variable>$r1</Variable><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Variable>%sets</Variable><Symbol>{</Symbol><Variable>$p2</Variable><Symbol>}</Symbol><Normal Text> </Normal Text><Operator>+=</Operator><Normal Text> </Normal Text><Variable>$r2</Variable><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Normal Text>    </Normal Text><Control Flow>if</Control Flow><Normal Text> </Normal Text><Variable>$r1</Variable><Normal Text> </Normal Text><Operator>></Operator><Normal Text> </Normal Text><Variable>$r2</Variable><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>        </Normal Text><Variable>%matches</Variable><Symbol>{</Symbol><Variable>$p1</Variable><Symbol>}</Symbol><Operator>++</Operator><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Symbol>}</Symbol><Normal Text> </Normal Text><Control Flow>else</Control Flow><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>        </Normal Text><Variable>%matches</Variable><Symbol>{</Symbol><Variable>$p2</Variable><Symbol>}</Symbol><Operator>++</Operator><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Symbol>}</Symbol><br/>
<Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Control Flow>for</Control Flow><Normal Text> </Normal Text><Variable>@sorted</Variable><Normal Text> </Normal Text><Operator>-></Operator><Normal Text> </Normal Text><Variable>$n</Variable><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$match-noun</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Variable>%matches</Variable><Symbol>{</Symbol><Variable>$n</Variable><Symbol>}</Symbol><Normal Text> </Normal Text><Operator>==</Operator><Normal Text> </Normal Text><Decimal>1</Decimal><Normal Text> </Normal Text><Operator>??</Operator><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>match</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Operator>!!</Operator><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>matches</String><String Delimiter>'</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>$set-noun</Variable><Normal Text>   </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Variable>%sets</Variable><Symbol>{</Symbol><Variable>$n</Variable><Symbol>}</Symbol><Normal Text> </Normal Text><Operator>==</Operator><Normal Text> </Normal Text><Decimal>1</Decimal><Normal Text> </Normal Text><Operator>??</Operator><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>set</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Operator>!!</Operator><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>sets</String><String Delimiter>'</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><Variable>$n</Variable><String> has won %matches</String><String (interpolated)>{</String (interpolated)><Variable>$n</Variable><String (interpolated)>}</String (interpolated)><String> </String><Variable>$match-noun</Variable><String> and %sets</String><String (interpolated)>{</String (interpolated)><Variable>$n</Variable><String (interpolated)>}</String (interpolated)><String> </String><Variable>$set-noun</Variable><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>Math: </String><String (interpolated)>{ </String (interpolated)><Decimal>1</Decimal><Normal Text> </Normal Text><Operator>+</Operator><String (interpolated)> </String (interpolated)><Decimal>2</Decimal><Normal Text> </Normal Text><String (interpolated)>}</String (interpolated)><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>@people</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><String Delimiter><</String Delimiter><String>Luke Matthew Mark</String><String Delimiter>></String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>The synoptics are: </String><String (interpolated)>{</String (interpolated)><Variable>@people</Variable><String (interpolated)>}</String (interpolated)><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String (interpolated)>{</String (interpolated)><Variable>%sets</Variable><String (interpolated)>}</String (interpolated)><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>we have </String><Variable>@flavors</Variable><Function>[</Function><Decimal>0</Decimal><Function>]</Function><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>we have </String><Variable>@flavors</Variable><Function>[]</Function><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>we have </String><Variable>@flavors</Variable><Function>.sort()</Function><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>we have </String><Variable>@flavors</Variable><Function>.sort.join(</Function><String Delimiter>'</String Delimiter><String>, </String><String Delimiter>'</String Delimiter><Function>)</Function><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>@valid-players</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Variable>$file</Variable><Member Operator>.</Member Operator><Normal Text>get</Normal Text><Member Operator>.</Member Operator><Normal Text>words</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Control Flow>for</Control Flow><Normal Text> </Normal Text><Variable>$file</Variable><Member Operator>.</Member Operator><Normal Text>lines </Normal Text><Operator>-></Operator><Normal Text> </Normal Text><Variable>$line</Variable><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Symbol>(</Symbol><Variable>$pairing</Variable><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Variable>$result</Variable><Symbol>)</Symbol><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Variable>$line</Variable><Member Operator>.</Member Operator><Normal Text>split</Normal Text><Symbol>(</Symbol><String Delimiter>'</String Delimiter><String> | </String><String Delimiter>'</String Delimiter><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Symbol>(</Symbol><Variable>$p1</Variable><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Variable>$p2</Variable><Symbol>)</Symbol><Normal Text>          </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Variable>$pairing</Variable><Member Operator>.</Member Operator><Normal Text>split</Normal Text><Symbol>(</Symbol><String Delimiter>'</String Delimiter><String> </String><String Delimiter>'</String Delimiter><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Control Flow>if</Control Flow><Normal Text> </Normal Text><Variable>$p1</Variable><Normal Text> </Normal Text><Operator>∉</Operator><Normal Text> </Normal Text><Variable>@valid-players</Variable><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>        </Normal Text><Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>Warning: '</String><Variable>$p1'</Variable><String> is not on our list!</String><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Symbol>}</Symbol><br/>
<Normal Text>    </Normal Text><Control Flow>if</Control Flow><Normal Text> </Normal Text><Variable>$p2</Variable><Normal Text> </Normal Text><Operator>∉</Operator><Normal Text> </Normal Text><Variable>@valid-players</Variable><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>        </Normal Text><Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>Warning: '</String><Variable>$p2'</Variable><String> is not on our list!</String><String Delimiter>"</String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Symbol>}</Symbol><br/>
<Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>@array</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Symbol>[</Symbol><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>x</String><String Delimiter>'</String Delimiter><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>xx</String><String Delimiter>'</String Delimiter><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>xxx</String><String Delimiter>'</String Delimiter><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>o</String><String Delimiter>'</String Delimiter><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>oo</String><String Delimiter>'</String Delimiter><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>X</String><String Delimiter>'</String Delimiter><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>Y</String><String Delimiter>'</String Delimiter><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>Z</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Symbol>]</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>@array</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><String Delimiter><</String Delimiter><String>  x    xx    xxx    o    oo    X    Y    Z  </String><String Delimiter>></String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Declare Routine>sub</Declare Routine><Normal Text> plus </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Variable>$</Variable><Twigil>^</Twigil><Variable>a</Variable><Normal Text> </Normal Text><Operator>+</Operator><Normal Text> </Normal Text><Variable>$</Variable><Twigil>^</Twigil><Variable>b</Variable><Normal Text> </Normal Text><Symbol>}</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Symbol>[[</Symbol><Variable>&plus</Variable><Symbol>]]</Symbol><Normal Text> </Normal Text><Decimal>1</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>3</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Symbol>[</Symbol><Operator>X~</Operator><Symbol>]</Symbol><Normal Text> </Normal Text><Symbol>(</Symbol><Decimal>1</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Symbol>)</Symbol><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><String Delimiter><</String Delimiter><String>a b</String><String Delimiter>></String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>@n</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Symbol>[</Symbol><Normal Text>\</Normal Text><Operator>~</Operator><Symbol>]</Symbol><Normal Text> </Normal Text><Decimal>1</Decimal><Operator>..</Operator><Variable>*</Variable><Separator Symbol>;</Separator Symbol><br/>
<Function>say</Function><Normal Text> </Normal Text><Variable>@n</Variable><Symbol>[</Symbol><Operator>^</Operator><Decimal>5</Decimal><Symbol>]</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>@l</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><String Delimiter><</String Delimiter><String>a b c d</String><String Delimiter>></String Delimiter><Normal Text> </Normal Text><Operator>Z~</Operator><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>:</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Operator>xx</Operator><Normal Text> </Normal Text><Variable>*</Variable><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>   </Normal Text><Variable>@l</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><String Delimiter><</String Delimiter><String>a b c d</String><String Delimiter>></String Delimiter><Normal Text> </Normal Text><Operator>Z~</Operator><Normal Text> </Normal Text><Decimal>1</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Variable>*</Variable><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Operator>so</Operator><Normal Text> </Normal Text><Decimal>1</Decimal><Normal Text> </Normal Text><Operator>S&</Operator><Normal Text> </Normal Text><Decimal>2</Decimal><Normal Text> </Normal Text><Operator>S&</Operator><Normal Text> </Normal Text><Decimal>3</Decimal><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Variable>%color</Variable><Hyper Operator>«</Hyper Operator><Normal Text>cherry </Normal Text><String Delimiter>"</String Delimiter><Variable>$fruit</Variable><String Delimiter>"</String Delimiter><Hyper Operator>»</Hyper Operator><Member Operator>.</Member Operator><Normal Text>raku</Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Variable>$a</Variable><Member Operator>.:</Member Operator><String Delimiter><</String Delimiter><String>++</String><String Delimiter>></String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Decimal>2</Decimal><Normal Text> </Normal Text><Operator>!(elem)</Operator><Normal Text> </Normal Text><Symbol>(</Symbol><Decimal>1</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Decimal>3</Decimal><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> </Normal Text><Variable>$_</Variable><Normal Text> </Normal Text><Control Flow>if</Control Flow><Normal Text> </Normal Text><Pattern Delimiter>/</Pattern Delimiter><Pattern>A</Pattern><Pattern Delimiter>/</Pattern Delimiter><Normal Text> </Normal Text><Operator>^ff^</Operator><Normal Text> </Normal Text><Pattern Delimiter>/</Pattern Delimiter><Pattern>C</Pattern><Pattern Delimiter>/</Pattern Delimiter><Normal Text> </Normal Text><Control Flow>for</Control Flow><Normal Text> </Normal Text><Variable>@list</Variable><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>@result</Variable><Separator Symbol>;</Separator Symbol><br/>
<String Delimiter><</String Delimiter><String>people of earth</String><String Delimiter>></String Delimiter><br/>
<Normal Text>    </Normal Text><Operator>==></Operator><Normal Text> </Normal Text><Function>map</Function><Symbol>({</Symbol><Normal Text> </Normal Text><Member Operator>.</Member Operator><Normal Text>tc </Normal Text><Symbol>})</Symbol><br/>
<Normal Text>    </Normal Text><Operator>==></Operator><Normal Text> </Normal Text><Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>@caps</Variable><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Variable>@caps</Variable><Normal Text>   </Normal Text><Comment># also could wrap in parentheses instead</Comment><br/>
<Normal Text>    </Normal Text><Operator>==></Operator><Normal Text> grep </Normal Text><Pattern Delimiter>/</Pattern Delimiter><Pattern Meta Character><</Pattern Meta Character><Pattern Bracket>[</Pattern Bracket><Pattern Character>PE</Pattern Character><Pattern Bracket>]</Pattern Bracket><Pattern Meta Character>></Pattern Meta Character><Pattern Delimiter>/</Pattern Delimiter><br/>
<Normal Text>    </Normal Text><Operator>==></Operator><Normal Text> sort</Normal Text><Symbol>()</Symbol><br/>
<Normal Text>    </Normal Text><Operator>==></Operator><Normal Text> </Normal Text><Variable>@result</Variable><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>@result</Variable><br/>
<Normal Text>    </Normal Text><Operator><==</Operator><Normal Text> sort</Normal Text><Symbol>()</Symbol><br/>
<Normal Text>    </Normal Text><Operator><==</Operator><Normal Text> grep</Normal Text><Symbol>({</Symbol><Normal Text> </Normal Text><Pattern Delimiter>/</Pattern Delimiter><Pattern Meta Character><</Pattern Meta Character><Pattern Bracket>[</Pattern Bracket><Pattern Character>PE</Pattern Character><Pattern Bracket>]</Pattern Bracket><Pattern Meta Character>></Pattern Meta Character><Pattern Delimiter>/</Pattern Delimiter><Normal Text> </Normal Text><Symbol>})</Symbol><br/>
<Normal Text>    </Normal Text><Operator><==</Operator><Normal Text> </Normal Text><Variable Storage>my</Variable Storage><Normal Text> </Normal Text><Variable>@caps</Variable><Normal Text>            </Normal Text><Comment># unlike ==>, there's no need for additional statement</Comment><br/>
<Normal Text>    </Normal Text><Operator><==</Operator><Normal Text> </Normal Text><Function>map</Function><Symbol>({</Symbol><Normal Text> </Normal Text><Member Operator>.</Member Operator><Normal Text>tc </Normal Text><Symbol>})</Symbol><br/>
<Normal Text>    </Normal Text><Operator><==</Operator><Normal Text> </Normal Text><String Delimiter><</String Delimiter><String>people of earth</String><String Delimiter>></String Delimiter><Separator Symbol>;</Separator Symbol><br/>
<Normal Text></Normal Text><br/>
<Keyword Value>False</Keyword Value><Normal Text> </Normal Text><Operator>and</Operator><Normal Text> </Normal Text><Keyword>do</Keyword><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Decimal>42</Decimal><Member Operator>.</Member Operator><Function>say</Function><Normal Text> </Normal Text><Symbol>}</Symbol><Separator Symbol>;</Separator Symbol><br/>
<Decimal>3</Decimal><Separator Symbol>,</Separator Symbol><Normal Text> </Normal Text><Keyword>do</Keyword><Normal Text> </Normal Text><Control Flow>if</Control Flow><Normal Text> </Normal Text><Decimal>1</Decimal><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Decimal>2</Decimal><Normal Text> </Normal Text><Symbol>}</Symbol><Normal Text>  </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Control Flow>if</Control Flow><Normal Text> </Normal Text><Decimal>0</Decimal><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>no</String><String Delimiter>"</String Delimiter><Normal Text> </Normal Text><Symbol>}</Symbol><Normal Text> </Normal Text><Control Flow>elsif</Control Flow><Normal Text> </Normal Text><Keyword Value>False</Keyword Value><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>NO</String><String Delimiter>"</String Delimiter><Normal Text> </Normal Text><Symbol>}</Symbol><Normal Text> </Normal Text><Control Flow>else</Control Flow><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Function>say</Function><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>yes</String><String Delimiter>"</String Delimiter><Normal Text> </Normal Text><Symbol>}</Symbol><br/>
<Variable>$_</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Decimal>1</Decimal><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Control Flow>unless</Control Flow><Normal Text> </Normal Text><Keyword Value>False</Keyword Value><Normal Text> </Normal Text><Operator>-></Operator><Normal Text> </Normal Text><Variable>$a</Variable><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Variable>$a</Variable><Member Operator>.</Member Operator><Function>say</Function><Normal Text> </Normal Text><Symbol>}</Symbol><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Control Flow>when</Control Flow><Normal Text> </Normal Text><Operator>so</Operator><Normal Text> </Normal Text><Variable>$a</Variable><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Function>say</Function><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>a</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Control Flow>for</Control Flow><Normal Text> </Normal Text><Decimal>1</Decimal><Operator>..</Operator><Decimal>100</Decimal><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Control Flow>when</Control Flow><Normal Text> </Normal Text><Variable>*</Variable><Normal Text> </Normal Text><Operator>%%</Operator><Normal Text> </Normal Text><Decimal>15</Decimal><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Function>say</Function><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>FizzBuzz</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Symbol>}</Symbol><br/>
<Normal Text>    </Normal Text><Control Flow>when</Control Flow><Normal Text> </Normal Text><Variable>*</Variable><Normal Text> </Normal Text><Operator>%%</Operator><Normal Text> </Normal Text><Decimal>3</Decimal><Normal Text>  </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Function>say</Function><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>Fizz</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Symbol>}</Symbol><br/>
<Normal Text>    </Normal Text><Control Flow>when</Control Flow><Normal Text> </Normal Text><Variable>*</Variable><Normal Text> </Normal Text><Operator>%%</Operator><Normal Text> </Normal Text><Decimal>5</Decimal><Normal Text>  </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Function>say</Function><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>Buzz</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Symbol>}</Symbol><br/>
<Normal Text>    </Normal Text><Control Flow>default</Control Flow><Normal Text>      </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><Function>say</Function><Normal Text> </Normal Text><Variable>$_</Variable><Normal Text> </Normal Text><Symbol>}</Symbol><br/>
<Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Declare Routine>multi</Declare Routine><Normal Text> </Normal Text><Declare Routine>sub</Declare Routine><Normal Text> grab</Normal Text><Symbol>(</Symbol><Variable>*</Variable><Operator>*</Operator><Variable>@a</Variable><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>{</Symbol><Normal Text> </Normal Text><String Delimiter>"</String Delimiter><String>grab </String><Variable>$_</Variable><String Delimiter>"</String Delimiter><Member Operator>.</Member Operator><Function>say</Function><Normal Text> </Normal Text><Control Flow>for</Control Flow><Normal Text> </Normal Text><Variable>@a</Variable><Normal Text> </Normal Text><Symbol>}</Symbol><br/>
<Declare Routine>multi</Declare Routine><Normal Text> </Normal Text><Declare Routine>sub</Declare Routine><Normal Text> grab</Normal Text><Symbol>(</Symbol><Variable>\a</Variable><Symbol>)</Symbol><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    a </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Data Type>Iterable</Data Type><Normal Text> </Normal Text><Operator>and</Operator><Normal Text> a</Normal Text><Member Operator>.</Member Operator><Data Type>VAR</Data Type><Normal Text> </Normal Text><Operator>!~~</Operator><Normal Text> </Normal Text><Data Type>Scalar</Data Type><Normal Text> </Normal Text><Operator>??</Operator><Normal Text> nextwith</Normal Text><Symbol>(</Symbol><Operator>|</Operator><Normal Text>a</Normal Text><Symbol>)</Symbol><Normal Text> </Normal Text><Operator>!!</Operator><Normal Text> nextwith</Normal Text><Symbol>(</Symbol><Normal Text>a</Normal Text><Separator Symbol>,</Separator Symbol><Symbol>)</Symbol><br/>
<Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Control Flow>for</Control Flow><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>.</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Member Operator>.</Member Operator><Data Type>Str</Data Type><Member Operator>.</Member Operator><Function>say</Function><Normal Text> </Normal Text><Control Flow>when</Control Flow><Normal Text> </Normal Text><Operator>!</Operator><Member Operator>.</Member Operator><Data Type>IO</Data Type><Member Operator>.</Member Operator><Normal Text>d</Normal Text><Separator Symbol>;</Separator Symbol><br/>
<Normal Text>    </Normal Text><Member Operator>.</Member Operator><Data Type>IO</Data Type><Member Operator>.</Member Operator><Normal Text>dir</Normal Text><Symbol>()</Symbol><Hyper Operator>»</Hyper Operator><Member Operator>.</Member Operator><Variable>&</Variable><Twigil>?</Twigil><Variable>BLOCK</Variable><Normal Text> </Normal Text><Control Flow>when</Control Flow><Normal Text> </Normal Text><Member Operator>.</Member Operator><Data Type>IO</Data Type><Member Operator>.</Member Operator><Normal Text>d </Normal Text><Comment># lets recurse a little!</Comment><br/>
<Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Function>say</Function><Normal Text> a</Normal Text><Hyper Operator>»</Hyper Operator><Member Operator>.</Member Operator><Symbol>(</Symbol><Float>0.5</Float><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Function>say</Function><Normal Text> a</Normal Text><Hyper Operator>>></Hyper Operator><Member Operator>.</Member Operator><Symbol>(</Symbol><Float>0.5</Float><Symbol>)</Symbol><Separator Symbol>;</Separator Symbol><Normal Text> a</Normal Text><Member Operator>.:</Member Operator><String Delimiter><</String Delimiter><String>sa</String><String Delimiter>></String Delimiter><Normal Text> </Normal Text><Separator Symbol>;</Separator Symbol><Normal Text> a</Normal Text><Member Operator>.</Member Operator><Normal Text> sa </Normal Text><Separator Symbol>:</Separator Symbol><Operator>!</Operator><Keyword Value>False</Keyword Value><br/>
<Normal Text>func </Normal Text><String Delimiter><</String Delimiter><String>a b</String><String Delimiter>></String Delimiter><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Control Flow>if</Control Flow><Normal Text> </Normal Text><String Delimiter>'</String Delimiter><String>abc-abc-abc</String><String Delimiter>'</String Delimiter><Normal Text> </Normal Text><Operator>~~</Operator><Normal Text> </Normal Text><Pattern Delimiter>/</Pattern Delimiter><Pattern> </Pattern><Pattern Named Capture>$<string></Pattern Named Capture><Pattern>=</Pattern><Symbol>(</Symbol><Pattern> </Pattern><Symbol>[</Symbol><Pattern> </Pattern><Pattern Named Capture>$<part></Pattern Named Capture><Pattern>=</Pattern><Symbol>[</Symbol><Pattern>abc</Pattern><Symbol>]</Symbol><Pattern> </Pattern><Symbol>]</Symbol><Pattern Quantifier>*</Pattern Quantifier><Pattern> </Pattern><Pattern Quantifier>%</Pattern Quantifier><Pattern> </Pattern><String Delimiter>'</String Delimiter><String>-</String><String Delimiter>'</String Delimiter><Pattern> </Pattern><Symbol>)</Symbol><Pattern> </Pattern><Pattern Delimiter>/</Pattern Delimiter><Normal Text> </Normal Text><Symbol>{</Symbol><br/>
<Normal Text>    </Normal Text><Function>say</Function><Normal Text> </Normal Text><Operator>~</Operator><Variable>$<string></Variable><Separator Symbol>;</Separator Symbol><Normal Text>          </Normal Text><Comment># OUTPUT: «abc-abc-abc␤»</Comment><br/>
<Normal Text>    </Normal Text><Function>say</Function><Normal Text> </Normal Text><Operator>~</Operator><Variable>$<string><part></Variable><Separator Symbol>;</Separator Symbol><Normal Text>    </Normal Text><Comment># OUTPUT: «abc abc abc␤»</Comment><br/>
<Normal Text>    </Normal Text><Function>say</Function><Normal Text> </Normal Text><Operator>~</Operator><Variable>$<string><part></Variable><Symbol>[</Symbol><Decimal>0</Decimal><Symbol>]</Symbol><Separator Symbol>;</Separator Symbol><Normal Text> </Normal Text><Comment># OUTPUT: «abc␤»</Comment><br/>
<Symbol>}</Symbol><br/>
<Normal Text></Normal Text><br/>
<Symbol>[</Symbol><Hyper Operator>«</Hyper Operator><Symbol>[</Symbol><Hyper Operator>«</Hyper Operator><Symbol>[</Symbol><Hyper Operator>«</Hyper Operator><Symbol>[</Symbol><Operator>+</Operator><Symbol>]</Symbol><Hyper Operator>»</Hyper Operator><Symbol>]</Symbol><Hyper Operator>»</Hyper Operator><Symbol>]</Symbol><Hyper Operator>»</Hyper Operator><Symbol>]</Symbol><Normal Text> </Normal Text><String Delimiter><</String Delimiter><String>1 2 3 4</String><String Delimiter>></String Delimiter><br/>
