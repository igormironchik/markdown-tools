<Comment># A sample file to test syntax highlighting.</Comment><br/>
<Normal Text></Normal Text><br/>
<Builtin>nop</Builtin><Normal Text> </Normal Text><String>"double </String><Keychar>\n</Keychar><String> quoted"</String><Normal Text> </Normal Text><Operator>and</Operator><Normal Text> </Normal Text><String>'single '' quoted'</String><Normal Text> </Normal Text><Comment># comment</Comment><br/>
<Normal Text></Normal Text><br/>
<Comment># Various variable contexts</Comment><br/>
<Builtin>nop</Builtin><Normal Text> </Normal Text><Variable>$pid</Variable><br/>
<Keyword>var</Keyword><Variable> var-name</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Operator>{ </Operator><Keyword>var</Keyword><Variable> fn-name~</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Operator>{</Operator><Normal Text>var not-var-name</Normal Text><Operator>}</Operator><Normal Text> </Normal Text><Operator>}</Operator><br/>
<Builtin>nop</Builtin><Normal Text> </Normal Text><Operator>(</Operator><Keyword>set</Keyword><Variable> var-name</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> foo </Normal Text><Operator>|</Operator><Normal Text> </Normal Text><Keyword>tmp</Keyword><Variable> var-name</Variable><Normal Text> </Normal Text><Operator>=</Operator><Normal Text> bar</Normal Text><Operator>);</Operator><Normal Text> </Normal Text><Keyword>del</Keyword><Variable> var-name</Variable><br/>
<Control Flow>for</Control Flow><Normal Text> var-name </Normal Text><Operator>[]</Operator><Normal Text> </Normal Text><Operator>{ }</Operator><br/>
<Control Flow>try</Control Flow><Normal Text> </Normal Text><Operator>{ }</Operator><Normal Text> </Normal Text><Control Flow>catch</Control Flow><Normal Text> var-name </Normal Text><Operator>{ }</Operator><br/>
<Normal Text></Normal Text><br/>
<Comment># Builtin functions</Comment><br/>
<Builtin>!=</Builtin><Normal Text> a </Normal Text><Operator>(</Operator><Builtin>nop</Builtin><Normal Text> b</Normal Text><Operator>)</Operator><Normal Text> </Normal Text><Operator>|</Operator><Normal Text> </Normal Text><Builtin>echo</Builtin><Normal Text> c</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Comment># Builtin special command</Comment><br/>
<Operator>and</Operator><Normal Text> a b </Normal Text><Comment># "operator"</Comment><br/>
<Use>use</Use><Normal Text> re </Normal Text><Comment># "other"</Comment><br/>
<Control Flow>if</Control Flow><Normal Text> a </Normal Text><Operator>{ }</Operator><Normal Text> </Normal Text><Control Flow>elif</Control Flow><Normal Text> b </Normal Text><Operator>{ }</Operator><Normal Text> </Normal Text><Control Flow>else</Control Flow><Normal Text> </Normal Text><Operator>{ }</Operator><br/>
<Control Flow>try</Control Flow><Normal Text> </Normal Text><Operator>{ }</Operator><Normal Text> </Normal Text><Control Flow>except</Control Flow><Normal Text> err </Normal Text><Operator>{ }</Operator><Normal Text> </Normal Text><Control Flow>else</Control Flow><Normal Text> </Normal Text><Operator>{ }</Operator><Normal Text> </Normal Text><Control Flow>finally</Control Flow><Normal Text> </Normal Text><Operator>{ }</Operator><br/>
<Normal Text></Normal Text><br/>
<Comment># Metacharacters</Comment><br/>
<Builtin>echo</Builtin><Normal Text> </Normal Text><Operator>**</Operator><Normal Text> </Normal Text><Operator>()</Operator><Normal Text> </Normal Text><Operator>[]</Operator><br/>
<Normal Text></Normal Text><br/>
<Comment># Regression tests</Comment><br/>
<Builtin>set-env</Builtin><Normal Text> </Normal Text><Comment># should highlight entire set-env</Comment><br/>
<Normal Text>set-foo </Normal Text><Comment># should highlight nothing</Comment><br/>
