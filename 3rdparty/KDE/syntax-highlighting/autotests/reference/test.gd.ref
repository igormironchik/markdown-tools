<Definition Keyword>tool</Definition Keyword><br/>
<Definition Keyword>extends</Definition Keyword><Normal Text> </Normal Text><String>"res://Level.gd"</String><br/>
<Definition Keyword>class_name</Definition Keyword><Normal Text> MyNode</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Preprocessor>breakpoint</Preprocessor><br/>
<Definition Keyword>var</Definition Keyword><Normal Text> x </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Preprocessor>preload</Preprocessor><Normal Text>()</Normal Text><br/>
<Definition Keyword>const</Definition Keyword><Normal Text> y </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Int>1</Int><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>onready</Definition Keyword><Normal Text> </Normal Text><Definition Keyword>var</Definition Keyword><Normal Text> z </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Function Call>get_node</Function Call><Normal Text>(</Normal Text><String>"/root/Node"</String><Normal Text>)</Normal Text><br/>
<Definition Keyword>export</Definition Keyword><Normal Text> </Normal Text><Definition Keyword>var</Definition Keyword><Normal Text> r </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Int>1</Int><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>var</Definition Keyword><Normal Text> value  </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Int>1</Int><Normal Text> </Normal Text><Definition Keyword>setget</Definition Keyword><Normal Text> setterfunc, getterfunc</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>class</Definition Keyword><Normal Text> Test:</Normal Text><br/>
<Normal Text>    </Normal Text><Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Function Call>test</Function Call><Normal Text>(parameter):</Normal Text><br/>
<Normal Text>        </Normal Text><Definition Keyword>var</Definition Keyword><Normal Text> c </Normal Text><Operator>=</Operator><Normal Text> CubeMesh.</Normal Text><Function Call>new</Function Call><Normal Text>()</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>enum</Definition Keyword><Normal Text> {A, B, C}</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>static</Definition Keyword><Normal Text> </Normal Text><Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Overloaders>_init</Overloaders><Normal Text>():</Normal Text><br/>
<Normal Text>    </Normal Text><Preprocessor>assert</Preprocessor><Normal Text>(</Normal Text><Consts Keyword>PI</Consts Keyword><Normal Text> </Normal Text><Operator>==</Operator><Normal Text> </Normal Text><Consts Keyword>TAU</Consts Keyword><Normal Text>)</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>if</Flow Control Keyword><Normal Text> </Normal Text><Consts Keyword>INF</Consts Keyword><Normal Text> </Normal Text><Operator>==</Operator><Normal Text> </Normal Text><Consts Keyword>INF</Consts Keyword><Normal Text>:</Normal Text><br/>
<Normal Text>        </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>elif</Flow Control Keyword><Normal Text> </Normal Text><Int>1</Int><Normal Text>. </Normal Text><Operator><=</Operator><Normal Text> </Normal Text><Int>1</Int><Normal Text>:</Normal Text><br/>
<Normal Text>        </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>else</Flow Control Keyword><br/>
<Normal Text>        </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>signal</Definition Keyword><Normal Text> </Normal Text><Function Call>moved</Function Call><Normal Text>():</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>remote</Definition Keyword><Normal Text> </Normal Text><Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Function Call>test_connection</Function Call><Normal Text>(</Normal Text><UnusedVariable>_info</UnusedVariable><Normal Text>):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>master</Definition Keyword><Normal Text> </Normal Text><Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Function Call>test_connection</Function Call><Normal Text>(</Normal Text><UnusedVariable>_info</UnusedVariable><Normal Text>):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>puppet</Definition Keyword><Normal Text> </Normal Text><Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Function Call>test_connection</Function Call><Normal Text>(</Normal Text><UnusedVariable>_info</UnusedVariable><Normal Text>):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>remotesync</Definition Keyword><Normal Text> </Normal Text><Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Function Call>test_connection</Function Call><Normal Text>(</Normal Text><UnusedVariable>_info</UnusedVariable><Normal Text>):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>mastersync</Definition Keyword><Normal Text> </Normal Text><Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Function Call>test_connection</Function Call><Normal Text>(</Normal Text><UnusedVariable>_info</UnusedVariable><Normal Text>):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>return</Flow Control Keyword><Normal Text> </Normal Text><Int>1</Int><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>puppetsync</Definition Keyword><Normal Text> </Normal Text><Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Function Call>test_connection</Function Call><Normal Text>(</Normal Text><UnusedVariable>_info</UnusedVariable><Normal Text>):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>yield</Flow Control Keyword><Normal Text> </Normal Text><Int>2</Int><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Function Call>test</Function Call><Normal Text>():</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>if</Flow Control Keyword><Normal Text> </Normal Text><Int>1</Int><Normal Text> </Normal Text><Operator Keyword>is</Operator Keyword><Normal Text> </Normal Text><Int>2</Int><Normal Text> </Normal Text><Operator Keyword>and</Operator Keyword><Normal Text> </Normal Text><Int>1</Int><Normal Text> </Normal Text><Operator Keyword>not</Operator Keyword><Normal Text> </Normal Text><Operator Keyword>is</Operator Keyword><Normal Text> </Normal Text><Int>1</Int><Normal Text> </Normal Text><Operator Keyword>or</Operator Keyword><Normal Text> </Normal Text><Int>1</Int><Normal Text> </Normal Text><Operator Keyword>in</Operator Keyword><Normal Text> [</Normal Text><Int>1</Int><Normal Text>, </Normal Text><String>"test"</String><Normal Text>, </Normal Text><NodePath-String>@"Node</NodePath-String><String>"</String><Normal Text>, </Normal Text><NodePath-Var>$NodeName</NodePath-Var><Normal Text>]:</Normal Text><br/>
<Normal Text>        </Normal Text><Definition Keyword>var</Definition Keyword><Normal Text> x </Normal Text><Operator>=</Operator><Normal Text>  </Normal Text><NodePath-Var>$NodeName</NodePath-Var><Normal Text> </Normal Text><Operator Keyword>as</Operator Keyword><Normal Text> Node2D</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>for</Flow Control Keyword><Normal Text> i </Normal Text><Operator Keyword>in</Operator Keyword><Normal Text> </Normal Text><Builtin Function>range</Builtin Function><Normal Text>(</Normal Text><Int>1</Int><Normal Text>, </Normal Text><Int>100</Int><Normal Text>):</Normal Text><br/>
<Normal Text>        </Normal Text><Flow Control Keyword>continue</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Normal Text>    x.</Normal Text><Function Call>lala</Function Call><Normal Text>().</Normal Text><Function Call>prolog</Function Call><Normal Text>()</Normal Text><br/>
<Normal Text>    x.</Normal Text><Function Call>lala</Function Call><Normal Text>().prolog</Normal Text><br/>
<Normal Text>    x.lala</Normal Text><br/>
<Normal Text>    x.</Normal Text><Function Call>lala</Function Call><Normal Text>()</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>while</Flow Control Keyword><Normal Text> </Normal Text><Int>1</Int><Normal Text> </Normal Text><Operator>!=</Operator><Normal Text> </Normal Text><Int>1</Int><Normal Text>:</Normal Text><br/>
<Normal Text>        </Normal Text><Function Call>statement</Function Call><Normal Text>(s)</Normal Text><br/>
<Normal Text>        </Normal Text><Flow Control Keyword>break</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>match</Flow Control Keyword><Normal Text> </Normal Text><Builtin Function>typeof</Builtin Function><Normal Text>(</Normal Text><Int>123</Int><Normal Text>):</Normal Text><br/>
<Normal Text>        </Normal Text><Int>1234</Int><Normal Text>:</Normal Text><br/>
<Normal Text>            </Normal Text><Builtin Function>print</Builtin Function><Normal Text>(</Normal Text><String>"""test"""</String><Normal Text>)</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>min</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>Color8</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>ColorN</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>abs</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>acos</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>asin</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>atan</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>atan2</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>bytes2var</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>cartesian2polar</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>ceil</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>char</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>clamp</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>convert</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>cos</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>cosh</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>db2linear</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>decimals</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>dectime</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>deg2rad</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>dict2inst</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>ease</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>exp</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>floor</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>fmod</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>fposmod</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>funcref</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>get_stack</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>hash</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>inst2dict</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>instance_from_id</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>inverse_lerp</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>is_equal_approx</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>is_inf</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>is_instance_valid</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>is_nan</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>is_zero_approx</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>len</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>lerp</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>lerp_angle</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>linear2db</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>load</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>log</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>max</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>min</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>move_toward</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>nearest_po2</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>ord</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>parse_json</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>polar2cartesian</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>posmod</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>pow</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>print</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>print_debug</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>print_stack</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>printerr</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>printraw</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>prints</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>printt</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>push_error</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>push_warning</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>rad2deg</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>rand_range</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>rand_seed</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>randf</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>randi</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>randomize</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>range</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>range_lerp</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>round</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>seed</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>sign</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>sin</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>sinh</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>smoothstep</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>sqrt</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>step_decimals</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>stepify</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>str</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>str2var</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>tan</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>tanh</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>to_json</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>type_exists</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>typeof</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>validate_json</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>var2bytes</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>var2str</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>weakref</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>wrapf</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text>    </Normal Text><Builtin Function>wrapi</Builtin Function><Normal Text>(abc);</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text>    </Normal Text><Definition Keyword>var</Definition Keyword><Normal Text> x </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Special Variable>null</Special Variable><br/>
<Normal Text>    x </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Special Variable>true</Special Variable><br/>
<Normal Text>    x </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Special Variable>false</Special Variable><br/>
<Normal Text>    </Normal Text><Special Variable>self</Special Variable><Normal Text>.x </Normal Text><Operator>=</Operator><Normal Text> x</Normal Text><br/>
<Normal Text>    </Normal Text><Special Variable>self</Special Variable><Normal Text>.x.</Normal Text><Bindings>connect</Bindings><Normal Text>(</Normal Text><String>"asd"</String><Normal Text>, x, </Normal Text><String>"asd"</String><Normal Text>)</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Overloaders>_get</Overloaders><Normal Text>(abc):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Overloaders>_get_property_list</Overloaders><Normal Text>(abc):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Overloaders>_init</Overloaders><Normal Text>(abc):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Overloaders>_notification</Overloaders><Normal Text>(abc):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Overloaders>_set</Overloaders><Normal Text>(abc):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Overloaders>_to_string</Overloaders><Normal Text>(abc):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Overloaders>_enter_tree</Overloaders><Normal Text>(abc):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Overloaders>_exit_tree</Overloaders><Normal Text>(abc):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Overloaders>_get_configuration_warning</Overloaders><Normal Text>(abc):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Overloaders>_input</Overloaders><Normal Text>(abc):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Overloaders>_physics_process</Overloaders><Normal Text>(abc):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Overloaders>_process</Overloaders><Normal Text>(abc):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Overloaders>_ready</Overloaders><Normal Text>(abc):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Overloaders>_unhandled_input</Overloaders><Normal Text>(abc):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>func</Definition Keyword><Normal Text> </Normal Text><Overloaders>_unhandled_key_input</Overloaders><Normal Text>(abc):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>pass</Flow Control Keyword><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
