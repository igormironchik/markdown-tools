<Pick>pick</Pick><Commit> 318aceb</Commit><Summary> Add test for Makefile highlighting</Summary><br/>
<Pick>p</Pick><Commit> 4c7182a</Commit><Summary> Add first batch of test files resurrected from Kate 4.6</Summary><br/>
<Reword>r</Reword><Commit> 6f7d8a7</Commit><Summary> Sync xml files with KTextEditor</Summary><br/>
<Reword>reword</Reword><Commit> 8f0dbdc</Commit><Summary> Add another batch of resurrected tests from Kate 4.6</Summary><br/>
<Edit>e</Edit><Commit> 828de45</Commit><Summary> Add some more resurrected tests from Kate 4.6</Summary><br/>
<Edit>edit</Edit><Commit> 6aa6264</Commit><Summary> Add simple coverage information for syntax definition tests</Summary><br/>
<Squash>s</Squash><Commit> 63df253</Commit><Summary> Add more syntax highlighting tests from Kate 4.6</Summary><br/>
<Squash>squash</Squash><Commit> 3e7771f</Commit><Summary> Add three more tests recovered from Kate 4.6</Summary><br/>
<Fixup>f</Fixup><Commit> 5c7fd91</Commit><Summary> Add Kate 4.6 ASP syntax test</Summary><br/>
<Fixup>f</Fixup><Commit> -c 5c7fd91</Commit><Summary> Add Kate 4.6 ASP syntax test</Summary><br/>
<Fixup>fixup</Fixup><Commit> 7a777ff</Commit><Summary> Implement case-sensitive overrides for keyword rules</Summary><br/>
<Fixup>fixup</Fixup><Commit> -C 7a777ff</Commit><Summary> Implement case-sensitive overrides for keyword rules</Summary><br/>
<Exec>exec</Exec><Summary> 2b16665 Implement dynamic DetectChar rules</Summary><br/>
<Exec>x</Exec><Summary> 0b703a3 Add a few more tests from the Kate 4.6 test suite</Summary><br/>
<Drop>d</Drop><Commit> dd808dc</Commit><Summary> Quote captured strings we replace in regular expressions</Summary><br/>
<Drop>drop</Drop><Commit> dd808dc</Commit><Summary> Quote captured strings we replace in regular expressions</Summary><br/>
<Break>b</Break><Summary> afafafaffa</Summary><br/>
<Break>break</Break><Summary> afafafaffa</Summary><br/>
<Label>l</Label><Summary> label</Summary><br/>
<Label>label</Label><Summary> afafafaffa</Summary><br/>
<Reset>t</Reset><Summary> label</Summary><br/>
<Reset>reset</Reset><Summary> afafafaffa</Summary><br/>
<Merge>m</Merge><Commit> </Commit><Summary>label # bla bla bla</Summary><br/>
<Merge>merge</Merge><Commit> -c afafafaffa</Commit><Summary> label</Summary><br/>
<Update-Ref>u</Update-Ref><Summary> ref</Summary><br/>
<Update-Ref>update-ref</Update-Ref><Summary> ref</Summary><br/>
<Normal Text></Normal Text><br/>
<Comment># Rebase </Comment><Commit>a27a854</Commit><Comment>..</Comment><Commit>0b703a3</Commit><Comment> onto </Comment><Commit>a27a854</Commit><Comment> (13 command(s))</Comment><br/>
<Comment>#</Comment><br/>
<Comment># Commands:</Comment><br/>
<Comment># p, pick <commit> = use commit</Comment><br/>
<Comment># r, reword <commit> = use commit, but edit the commit message</Comment><br/>
<Comment># e, edit <commit> = use commit, but stop for amending</Comment><br/>
<Comment># s, squash <commit> = use commit, but meld into previous commit</Comment><br/>
<Comment># f, fixup [-C | -c] <commit> = like "squash" but keep only the previous</Comment><br/>
<Comment>#                    commit's log message, unless -C is used, in which case</Comment><br/>
<Comment>#                    keep only this commit's message; -c is same as -C but</Comment><br/>
<Comment>#                    opens the editor</Comment><br/>
<Comment># x, exec <command> = run command (the rest of the line) using shell</Comment><br/>
<Comment># b, break = stop here (continue rebase later with 'git rebase --continue')</Comment><br/>
<Comment># d, drop <commit> = remove commit</Comment><br/>
<Comment># l, label <label> = label current HEAD with a name</Comment><br/>
<Comment># t, reset <label> = reset HEAD to a label</Comment><br/>
<Comment># m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]</Comment><br/>
<Comment>#         create a merge commit using the original merge commit's</Comment><br/>
<Comment>#         message (or the oneline, if no original merge commit was</Comment><br/>
<Comment>#         specified); use -c <commit> to reword the commit message</Comment><br/>
<Comment># u, update-ref <ref> = track a placeholder for the <ref> to be updated</Comment><br/>
<Comment>#                       to this position in the new commits. The <ref> is</Comment><br/>
<Comment>#                       updated at the end of the rebase</Comment><br/>
<Comment>#</Comment><br/>
<Comment># These lines can be re-ordered; they are executed from top to bottom.</Comment><br/>
<Comment>#</Comment><br/>
<Comment># If you remove a line here THAT COMMIT WILL BE LOST.</Comment><br/>
<Comment>#</Comment><br/>
<Comment># However, if you remove everything, the rebase will be aborted.</Comment><br/>
<Comment>#</Comment><br/>
<Comment># Note that empty commits are commented out</Comment><br/>
