<Comment># comment with </Comment><Alert Level 1>ALERT</Alert Level 1><br/>
<Normal Text></Normal Text><br/>
<Comment>''' multiline</Comment><br/>
<Comment>    comment</Comment><br/>
<Comment>    </Comment><Alert Level 3>###</Alert Level 3><br/>
<Comment>    '''</Comment><br/>
<Normal Text></Normal Text><br/>
<Operator>//</Operator><Normal Text> alert check, no word delimiter check at start of word, bug </Normal Text><Int>397719</Int><br/>
<Comment>#</Comment><Alert Level 2>TODO</Alert Level 2><br/>
<Normal Text></Normal Text><br/>
<Normal Text>a </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Int>100_000</Int><br/>
<Normal Text>b </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Float>856_264.65</Float><br/>
<Normal Text>c </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Hex>0x420_F52</Hex><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>def</Definition Keyword><Normal Text> func(x):</Normal Text><br/>
<Normal Text>    </Normal Text><Comment>""" EXTENDED API docs """</Comment><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>if</Flow Control Keyword><Normal Text> x </Normal Text><Operator>==</Operator><Normal Text> </Normal Text><Int>42</Int><Normal Text>:</Normal Text><br/>
<Normal Text>        func()</Normal Text><br/>
<Normal Text>        c1 </Normal Text><Operator>=</Operator><Normal Text> {}</Normal Text><br/>
<Normal Text>        c2 </Normal Text><Operator>=</Operator><Normal Text> {</Normal Text><br/>
<Normal Text>            </Normal Text><Float>2.4</Float><Normal Text>,</Normal Text><br/>
<Normal Text>            </Normal Text><Hex>0x42</Hex><Normal Text>,</Normal Text><br/>
<Normal Text>            }</Normal Text><br/>
<Normal Text>        a1 </Normal Text><Operator>=</Operator><Normal Text> []</Normal Text><br/>
<Normal Text>        a2 </Normal Text><Operator>=</Operator><Normal Text> [</Normal Text><br/>
<Normal Text>            </Normal Text><String Deliminator>"</String Deliminator><String>a</String><String Deliminator>"</String Deliminator><Normal Text>, </Normal Text><Int>0</Int><Error>32</Error><Normal Text>, (</Normal Text><br/>
<Normal Text>                )]</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>else</Flow Control Keyword><Normal Text>:</Normal Text><br/>
<Normal Text>        </Normal Text><Builtin Function>print</Builtin Function><Normal Text>(</Normal Text><String Deliminator>"""</String Deliminator><String>multi</String><br/>
<String>            line</String><br/>
<String>            string</String><String Deliminator>"""</String Deliminator><Normal Text>)</Normal Text><br/>
<Normal Text>        </Normal Text><Builtin Function>print</Builtin Function><Normal Text>(</Normal Text><String Deliminator>"</String Deliminator><String>single </String><Operator>\</Operator><br/>
<String>                continued line </String><String Deliminator>"</String Deliminator><Normal Text>)</Normal Text><br/>
<Normal Text>        </Normal Text><Builtin Function>print</Builtin Function><Normal Text>(</Normal Text><String Deliminator>'</String Deliminator><String>single line</String><String Deliminator>'</String Deliminator><Normal Text>)</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>if</Flow Control Keyword><Normal Text> y </Normal Text><Operator>:=</Operator><Normal Text> x:</Normal Text><br/>
<Normal Text>        </Normal Text><Builtin Function>anext</Builtin Function><Normal Text>(a)</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>return</Flow Control Keyword><Normal Text> </Normal Text><Builtin Function>float</Builtin Function><Normal Text>(</Normal Text><Builtin Function>len</Builtin Function><Normal Text>(a2))</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>def</Definition Keyword><Normal Text> test_f_literals():</Normal Text><br/>
<Normal Text>    </Normal Text><F-String Deliminator>f'</F-String Deliminator><F-String>xy</F-String><F-String Deliminator>'</F-String Deliminator><br/>
<Normal Text>    </Normal Text><F-String Deliminator>f'</F-String Deliminator><F-String>x</F-String><String Substitution>{</String Substitution><Normal Text>bar</Normal Text><String Substitution>}</String Substitution><F-String>y</F-String><F-String Deliminator>'</F-String Deliminator><br/>
<Normal Text>    </Normal Text><F-String Deliminator>f'</F-String Deliminator><F-String>x</F-String><String Substitution>{</String Substitution><Normal Text>bar[</Normal Text><String Deliminator>"</String Deliminator><String>baz</String><String Deliminator>"</String Deliminator><Normal Text>]</Normal Text><String Substitution>}</String Substitution><F-String>y</F-String><F-String Deliminator>'</F-String Deliminator><br/>
<Normal Text>    </Normal Text><F-String Deliminator>f'</F-String Deliminator><F-String>x</F-String><String Substitution>{</String Substitution><Normal Text>bar[</Normal Text><String Deliminator>"</String Deliminator><String>baz</String><String Deliminator>"</String Deliminator><Normal Text>]</Normal Text><String Substitution>}</String Substitution><F-String>y</F-String><String Char>\n</String Char><F-String Deliminator>'</F-String Deliminator><br/>
<Normal Text></Normal Text><br/>
<Normal Text>    </Normal Text><F-String Deliminator>f'</F-String Deliminator><F-String>x</F-String><String Substitution>{</String Substitution><Normal Text>bar[</Normal Text><String Deliminator>"</String Deliminator><String>baz</String><String Deliminator>"</String Deliminator><Normal Text>]</Normal Text><String Substitution>!r}</String Substitution><F-String>y</F-String><String Char>\n</String Char><F-String Deliminator>'</F-String Deliminator><br/>
<Normal Text>    </Normal Text><F-String Deliminator>f'</F-String Deliminator><F-String>x</F-String><String Substitution>{</String Substitution><Normal Text>bar[</Normal Text><String Deliminator>"</String Deliminator><String>baz</String><String Deliminator>"</String Deliminator><Normal Text>]</Normal Text><String Substitution>:.2}</String Substitution><F-String>y</F-String><String Char>\n</String Char><F-String Deliminator>'</F-String Deliminator><br/>
<Normal Text></Normal Text><br/>
<Normal Text>    </Normal Text><F-String Deliminator>f'</F-String Deliminator><F-String>x</F-String><String Substitution>{</String Substitution><Normal Text>bar[</Normal Text><String Deliminator>"</String Deliminator><String>baz</String><String Deliminator>"</String Deliminator><Normal Text>]</Normal Text><String Substitution>:.2}</String Substitution><F-String>y</F-String><String Char>\n</String Char><F-String Deliminator>'</F-String Deliminator><br/>
<Normal Text>    </Normal Text><F-String Deliminator>f'</F-String Deliminator><F-String>x</F-String><String Substitution>{</String Substitution><Normal Text>bar[</Normal Text><String Deliminator>"</String Deliminator><String>baz</String><String Deliminator>"</String Deliminator><Normal Text>]</Normal Text><String Substitution>:._f}</String Substitution><F-String>y</F-String><String Char>\n</String Char><F-String Deliminator>'</F-String Deliminator><br/>
<Normal Text>    </Normal Text><F-String Deliminator>f'</F-String Deliminator><F-String>x</F-String><String Substitution>{</String Substitution><Normal Text>bar[</Normal Text><String Deliminator>"</String Deliminator><String>baz</String><String Deliminator>"</String Deliminator><Normal Text>]</Normal Text><String Substitution>:.3_f}</String Substitution><F-String>y</F-String><String Char>\n</String Char><F-String Deliminator>'</F-String Deliminator><br/>
<Normal Text>    </Normal Text><F-String Deliminator>f'</F-String Deliminator><F-String>x</F-String><String Substitution>{</String Substitution><Normal Text>bar[</Normal Text><String Deliminator>"</String Deliminator><String>baz</String><String Deliminator>"</String Deliminator><Normal Text>]</Normal Text><String Substitution>:.</String Substitution><Normal Text>_3f</Normal Text><String Substitution>}</String Substitution><F-String>y</F-String><String Char>\n</String Char><F-String Deliminator>'</F-String Deliminator><Normal Text> </Normal Text><Comment># bad format</Comment><br/>
<Normal Text>    </Normal Text><F-String Deliminator>f'</F-String Deliminator><F-String>x</F-String><String Substitution>{</String Substitution><Normal Text>bar[</Normal Text><String Deliminator>"</String Deliminator><String>baz</String><String Deliminator>"</String Deliminator><Normal Text>]</Normal Text><String Substitution>:.</String Substitution><Normal Text>f</Normal Text><String Substitution>}</String Substitution><F-String>y</F-String><String Char>\n</String Char><F-String Deliminator>'</F-String Deliminator><Normal Text> </Normal Text><Comment># bad format</Comment><br/>
<Normal Text></Normal Text><br/>
<Normal Text>    </Normal Text><F-String Deliminator>f'</F-String Deliminator><String Char>{{</String Char><F-String>x</F-String><String Substitution>{</String Substitution><Normal Text>bar[</Normal Text><String Deliminator>"</String Deliminator><String>baz</String><String Deliminator>"</String Deliminator><Normal Text>]</Normal Text><String Substitution>:.2}</String Substitution><String Char>}}</String Char><Error>}</Error><F-String> </F-String><String Char>}}</String Char><F-String> </F-String><String Char>{{</String Char><F-String> </F-String><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>!a}</String Substitution><F-String Deliminator>'</F-String Deliminator><br/>
<Normal Text>                        </Normal Text><Comment># ^ oups</Comment><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>def</Definition Keyword><Normal Text> test_t_literals():</Normal Text><br/>
<Normal Text>    </Normal Text><T-String Deliminator>t'</T-String Deliminator><T-String>x</T-String><String Substitution>{</String Substitution><Normal Text>bar</Normal Text><String Substitution>}</String Substitution><T-String>y</T-String><T-String Deliminator>'</T-String Deliminator><br/>
<Normal Text>    </Normal Text><T-String Deliminator>t'</T-String Deliminator><T-String>x</T-String><String Substitution>{</String Substitution><Normal Text>bar[</Normal Text><String Deliminator>"</String Deliminator><String>baz</String><String Deliminator>"</String Deliminator><Normal Text>]</Normal Text><String Substitution>}</String Substitution><T-String>y</T-String><String Char>\n</String Char><T-String Deliminator>'</T-String Deliminator><br/>
<Normal Text>    </Normal Text><T-String Deliminator>t'</T-String Deliminator><T-String>x</T-String><String Substitution>{</String Substitution><Normal Text>bar[</Normal Text><String Deliminator>"</String Deliminator><String>baz</String><String Deliminator>"</String Deliminator><Normal Text>]</Normal Text><String Substitution>:.2}</String Substitution><T-String>y</T-String><String Char>\n</String Char><T-String Deliminator>'</T-String Deliminator><br/>
<Normal Text>    </Normal Text><T-String Deliminator>t'</T-String Deliminator><String Char>{{</String Char><T-String>x</T-String><String Substitution>{</String Substitution><Normal Text>bar[</Normal Text><String Deliminator>"</String Deliminator><String>baz</String><String Deliminator>"</String Deliminator><Normal Text>]</Normal Text><String Substitution>:.2}</String Substitution><String Char>}}</String Char><Error>}</Error><T-String> </T-String><String Char>}}</String Char><T-String> </T-String><String Char>{{</String Char><T-String> </T-String><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>!a}</String Substitution><T-String Deliminator>'</T-String Deliminator><br/>
<Normal Text>                        </Normal Text><Comment># ^ oups</Comment><br/>
<Normal Text>    </Normal Text><Raw T-String Deliminator>tr'</Raw T-String Deliminator><Raw T-String>x</Raw T-String><String Substitution>{</String Substitution><Normal Text>bar</Normal Text><String Substitution>}</String Substitution><Raw T-String>y</Raw T-String><Raw T-String Deliminator>'</Raw T-String Deliminator><br/>
<Normal Text>    </Normal Text><Raw T-String Deliminator>tr'</Raw T-String Deliminator><Raw T-String>x</Raw T-String><String Substitution>{</String Substitution><Normal Text>bar[</Normal Text><String Deliminator>"</String Deliminator><String>baz</String><String Deliminator>"</String Deliminator><Normal Text>]</Normal Text><String Substitution>}</String Substitution><Raw T-String>y\n</Raw T-String><Raw T-String Deliminator>'</Raw T-String Deliminator><br/>
<Normal Text>    </Normal Text><Raw T-String Deliminator>tr'</Raw T-String Deliminator><Raw T-String>x</Raw T-String><String Substitution>{</String Substitution><Normal Text>bar[</Normal Text><String Deliminator>"</String Deliminator><String>baz</String><String Deliminator>"</String Deliminator><Normal Text>]</Normal Text><String Substitution>:.2}</String Substitution><Raw T-String>y\n</Raw T-String><Raw T-String Deliminator>'</Raw T-String Deliminator><br/>
<Normal Text>    </Normal Text><Raw T-String Deliminator>tr'</Raw T-String Deliminator><String Char>{{</String Char><Raw T-String>x</Raw T-String><String Substitution>{</String Substitution><Normal Text>bar[</Normal Text><String Deliminator>"</String Deliminator><String>baz</String><String Deliminator>"</String Deliminator><Normal Text>]</Normal Text><String Substitution>:.2}</String Substitution><String Char>}}</String Char><Error>}</Error><Raw T-String> </Raw T-String><String Char>}}</String Char><Raw T-String> </Raw T-String><String Char>{{</String Char><Raw T-String> </Raw T-String><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>!a}</String Substitution><Raw T-String Deliminator>'</Raw T-String Deliminator><br/>
<Normal Text>                         </Normal Text><Comment># ^ oups</Comment><br/>
<Normal Text></Normal Text><br/>
<Normal Text>a </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><String Deliminator>"</String Deliminator><String>Escapes in String </String><String Char>\U12345678</String Char><String> </String><String Char>\xAB</String Char><String> </String><String Char>\"</String Char><String Deliminator>"</String Deliminator><br/>
<Normal Text>a </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><String Deliminator>u'''</String Deliminator><String Char>\'</String Char><String>''</String><br/>
<String Deliminator>'''</String Deliminator><br/>
<Normal Text>a </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><String Deliminator>u'''</String Deliminator><String Char>\'</String Char><String Deliminator>'''</String Deliminator><br/>
<Normal Text>a </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><B-String Deliminator>b'</B-String Deliminator><Error>\</Error><B-String>u1234a</B-String><String Char>\xff</String Char><Error>é</Error><String Char>\12</String Char><B-String>k</B-String><String Char>\n</String Char><Error>\</Error><B-String>g</B-String><Operator>\</Operator><br/>
<B-String>s</B-String><Operator>\</Operator><br/>
<String Char>\"</String Char><Error>\</Error><B-String> </B-String><B-String Deliminator>'</B-String Deliminator><br/>
<Normal Text>a </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>Rb'</Raw B-String Deliminator><Raw B-String>\u1234a</Raw B-String><Error>é</Error><Raw B-String>\n\g\</Raw B-String><br/>
<Raw B-String Deliminator>'</Raw B-String Deliminator><br/>
<Normal Text>a </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><B-String Deliminator>b""""""</B-String Deliminator><br/>
<Normal Text>a </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><B-String Deliminator>b"""</B-String Deliminator><String Char>\"</String Char><B-String Deliminator>"""</B-String Deliminator><br/>
<Normal Text>a </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><String Deliminator>'</String Deliminator><String>a</String><String Deliminator>'</String Deliminator><Normal Text> </Normal Text><Operator>\</Operator><br/>
<Normal Text>    </Normal Text><String Deliminator>u'</String Deliminator><String Char>\x12</String Char><String Deliminator>'</String Deliminator><br/>
<Normal Text>a </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><B-String Deliminator>b"</B-String Deliminator><B-String>t</B-String><Error>\</Error><B-String>e's</B-String><String Char>\t</String Char><B-String Deliminator>"</B-String Deliminator><br/>
<Normal Text>a </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>Rb"</Raw B-String Deliminator><Raw B-String>t\e's\t</Raw B-String><Raw B-String Deliminator>"</Raw B-String Deliminator><br/>
<Normal Text>a </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>R"</Raw String Deliminator><Raw String>\\</Raw String><Raw String Deliminator>"</Raw String Deliminator><Normal Text> </Normal Text><Operator>\</Operator><br/>
<Raw B-String Deliminator>Rb'</Raw B-String Deliminator><Raw B-String>\\</Raw B-String><Raw B-String Deliminator>'</Raw B-String Deliminator><Normal Text> </Normal Text><Operator>\</Operator><br/>
<Raw F-String Deliminator>Rf"""</Raw F-String Deliminator><Raw F-String>\\</Raw F-String><Raw F-String Deliminator>"""</Raw F-String Deliminator><Normal Text> </Normal Text><Operator>\</Operator><br/>
<Raw String Deliminator>uR'''</Raw String Deliminator><Raw String>\\</Raw String><Raw String Deliminator>'''</Raw String Deliminator><br/>
<Normal Text></Normal Text><br/>
<Comment># regex (re and regex package)</Comment><br/>
<Comment>#{</Comment><br/>
<Comment># r'...'</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r'</Raw String Deliminator><Raw String>a</Raw String><Regex Quantifier>+</Regex Quantifier><Raw String>é</Raw String><Regex Quantifier>??</Regex Quantifier><Raw String>a</Raw String><Regex Quantifier>?*</Regex Quantifier><Raw String>a{x,}a</Raw String><Regex Quantifier>{,}</Regex Quantifier><Raw String>a</Raw String><Regex Quantifier>{1}</Regex Quantifier><Raw String>a</Raw String><Regex Quantifier>{1,}</Regex Quantifier><Raw String>a</Raw String><Regex Quantifier>{,2}</Regex Quantifier><Raw String>a</Raw String><Regex Quantifier>{1,2}</Regex Quantifier><Regex Backreference>\g<12></Regex Backreference><Regex Special>\L<name></Regex Special><Regex Backreference>\g<name></Regex Backreference><Regex Special>\w.</Regex Special><String Char>\'</String Char><Regex Special>\b</Regex Special><String Char>\\</String Char><Raw String>a#</Raw String><Regex Special>$</Regex Special><Raw String Deliminator>'</Raw String Deliminator><br/>
<Normal Text>             </Normal Text><Comment># ~~ invalid, but ok</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r'</Raw String Deliminator><String Char>\p{H}\x12\u1234\1\023\023</String Char><Raw String>4</Raw String><String Char>\123\123</String Char><Raw String>4</Raw String><String Char>\12</String Char><Raw String Deliminator>'</Raw String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r'</Raw String Deliminator><Regex Capturing>(</Regex Capturing><Raw String>a</Raw String><Regex Capturing>)</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><Raw String>a</Raw String><Regex Non-Capturing>)</Regex Non-Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?=</Regex Parenthesis Options><Raw String>a</Raw String><Regex Parenthesis>)</Regex Parenthesis><Regex Parenthesis Options>(?R)(?r)</Regex Parenthesis Options><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?a-m:</Regex Parenthesis Options><Raw String>a</Raw String><Regex Parenthesis>)(</Regex Parenthesis><Error>?</Error><Raw String>oups</Raw String><Regex Parenthesis>)</Regex Parenthesis><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?P<name></Regex Parenthesis Options><Raw String>a</Raw String><Regex Capturing>)</Regex Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?|</Regex Parenthesis Options><Raw String>a</Raw String><Regex Alternation>|</Regex Alternation><Raw String>b</Raw String><Regex Parenthesis>)</Regex Parenthesis><Comment>(?#comment\)\'\")</Comment><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?></Regex Parenthesis Options><Raw String>=a</Raw String><Regex Parenthesis>)</Regex Parenthesis><String Char>\</String Char><br/>
<Raw String>    </Raw String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(</Regex Parenthesis Options><Regex Backreference>1</Regex Backreference><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw String>a</Raw String><Regex Alternation>|</Regex Alternation><Raw String>b</Raw String><Regex Parenthesis>)</Regex Parenthesis><Error>)</Error><Raw String>a</Raw String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(?!</Regex Parenthesis Options><Raw String>a</Raw String><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw String>a</Raw String><Regex Alternation>|</Regex Alternation><Raw String>b</Raw String><Regex Parenthesis>)</Regex Parenthesis><Raw String Deliminator>'</Raw String Deliminator><br/>
<Normal Text>      </Normal Text><Comment># oups ~</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r'</Raw String Deliminator><Regex Set>[^xy-z]</Regex Set><Regex Alternation>|</Regex Alternation><Regex Set>[]xy</Regex Set><Regex Character Class>[:alpha:]</Regex Character Class><Regex Set>z]</Regex Set><Regex Alternation>|</Regex Alternation><Regex Set>[[</Regex Set><Regex Special>\w</Regex Special><Regex Set>a(){}</Regex Set><String Char>\b\]\[\.</String Char><Regex Set>.]</Regex Set><Regex Alternation>|</Regex Alternation><Regex Set>[[a-z]</Regex Set><Raw String>--</Raw String><Regex Set>[c]</Regex Set><Raw String>]</Raw String><Raw String Deliminator>'</Raw String Deliminator><br/>
<Normal Text>                                          </Normal Text><Comment># regex V1 ~~~~~~~~~~~~</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r'</Raw String Deliminator><Regex Capturing>(((</Regex Capturing><Raw String>a</Raw String><Regex Capturing>)))</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Raw String>a</Raw String><Regex Capturing>(</Regex Capturing><Raw String>"</Raw String><String Char>\'\"</String Char><Regex Capturing>))</Regex Capturing><Regex Parenthesis>)</Regex Parenthesis><Regex Non-Capturing>)</Regex Non-Capturing><Raw String Deliminator>'</Raw String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r'</Raw String Deliminator><Regex Non-Capturing>(?:</Regex Non-Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Raw String>a</Raw String><Regex Capturing>(</Regex Capturing><String Char>\</String Char><br/>
<Regex Special>.</Regex Special><Raw String Deliminator>'</Raw String Deliminator><Normal Text> </Normal Text><Comment># break</Comment><br/>
<Normal Text></Normal Text><br/>
<Comment># r"..."</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r"</Raw String Deliminator><Raw String>a</Raw String><Regex Quantifier>+</Regex Quantifier><Raw String>é</Raw String><Regex Quantifier>??</Regex Quantifier><Raw String>a</Raw String><Regex Quantifier>?*</Regex Quantifier><Raw String>a{x,}a</Raw String><Regex Quantifier>{,}</Regex Quantifier><Raw String>a</Raw String><Regex Quantifier>{1}</Regex Quantifier><Raw String>a</Raw String><Regex Quantifier>{1,}</Regex Quantifier><Raw String>a</Raw String><Regex Quantifier>{,2}</Regex Quantifier><Raw String>a</Raw String><Regex Quantifier>{1,2}</Regex Quantifier><Regex Backreference>\g<12></Regex Backreference><Regex Special>\L<name></Regex Special><Regex Backreference>\g<name></Regex Backreference><Regex Special>\w.</Regex Special><String Char>\"</String Char><Regex Special>\b</Regex Special><String Char>\\</String Char><Raw String>a#</Raw String><Regex Special>$</Regex Special><Raw String Deliminator>"</Raw String Deliminator><br/>
<Normal Text>             </Normal Text><Comment># ~~ invalid, but ok</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r"</Raw String Deliminator><String Char>\p{H}\x12\u1234\1\023\023</String Char><Raw String>4</Raw String><String Char>\123\123</String Char><Raw String>4</Raw String><String Char>\12</String Char><Raw String Deliminator>"</Raw String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r"</Raw String Deliminator><Regex Capturing>(</Regex Capturing><Raw String>a</Raw String><Regex Capturing>)</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><Raw String>a</Raw String><Regex Non-Capturing>)</Regex Non-Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?=</Regex Parenthesis Options><Raw String>a</Raw String><Regex Parenthesis>)</Regex Parenthesis><Regex Parenthesis Options>(?R)(?r)</Regex Parenthesis Options><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?a-m:</Regex Parenthesis Options><Raw String>a</Raw String><Regex Parenthesis>)(</Regex Parenthesis><Error>?</Error><Raw String>oups</Raw String><Regex Parenthesis>)</Regex Parenthesis><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?P<name></Regex Parenthesis Options><Raw String>a</Raw String><Regex Capturing>)</Regex Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?|</Regex Parenthesis Options><Raw String>a</Raw String><Regex Alternation>|</Regex Alternation><Raw String>b</Raw String><Regex Parenthesis>)</Regex Parenthesis><Comment>(?#comment\)\'\")</Comment><String Char>\</String Char><br/>
<Raw String>    </Raw String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?></Regex Parenthesis Options><Raw String>=a</Raw String><Regex Parenthesis>)(</Regex Parenthesis><Regex Parenthesis Options>?(</Regex Parenthesis Options><Regex Backreference>1</Regex Backreference><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw String>a</Raw String><Regex Alternation>|</Regex Alternation><Raw String>b</Raw String><Regex Parenthesis>)</Regex Parenthesis><Error>)</Error><Raw String>a</Raw String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(?!</Regex Parenthesis Options><Raw String>a</Raw String><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw String>a</Raw String><Regex Alternation>|</Regex Alternation><Raw String>b</Raw String><Regex Parenthesis>)</Regex Parenthesis><Raw String Deliminator>"</Raw String Deliminator><br/>
<Normal Text>            </Normal Text><Comment># oups ~</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r"</Raw String Deliminator><Regex Set>[^xy-z]</Regex Set><Regex Alternation>|</Regex Alternation><Regex Set>[]xy</Regex Set><Regex Character Class>[:alpha:]</Regex Character Class><Regex Set>z]</Regex Set><Regex Alternation>|</Regex Alternation><Regex Set>[[</Regex Set><Regex Special>\w</Regex Special><Regex Set>a(){}</Regex Set><String Char>\b\]\[\.</String Char><Regex Set>.]</Regex Set><Regex Alternation>|</Regex Alternation><Regex Set>[[a-z]</Regex Set><Raw String>--</Raw String><Regex Set>[c]</Regex Set><Raw String>]</Raw String><Raw String Deliminator>"</Raw String Deliminator><br/>
<Normal Text>                                          </Normal Text><Comment># regex V1 ~~~~~~~~~~~~</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r"</Raw String Deliminator><Regex Capturing>(((</Regex Capturing><Raw String>a</Raw String><Regex Capturing>)))</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Raw String>a</Raw String><Regex Capturing>(</Regex Capturing><String Char>\'\"</String Char><Raw String>'</Raw String><Regex Capturing>))</Regex Capturing><Regex Parenthesis>)</Regex Parenthesis><Regex Non-Capturing>)</Regex Non-Capturing><Raw String Deliminator>"</Raw String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r"</Raw String Deliminator><Regex Non-Capturing>(?:</Regex Non-Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Raw String>a</Raw String><Regex Capturing>(</Regex Capturing><String Char>\</String Char><br/>
<Regex Special>.</Regex Special><Raw String Deliminator>"</Raw String Deliminator><Normal Text> </Normal Text><Comment># break</Comment><br/>
<Normal Text></Normal Text><br/>
<Comment># r'''...'''</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r'''</Raw String Deliminator><br/>
<Raw String>    a</Raw String><Regex Quantifier>+</Regex Quantifier><Raw String>é</Raw String><Regex Quantifier>??</Regex Quantifier><Raw String>a</Raw String><Regex Quantifier>?*</Regex Quantifier><br/>
<Raw String>        </Raw String><Comment># ~~ invalid, but ok</Comment><br/>
<Raw String>    a{x,}a{</Raw String><Regex Quantifier>{,}</Regex Quantifier><Raw String>}a</Raw String><Regex Quantifier>{1}</Regex Quantifier><Raw String>a</Raw String><Regex Quantifier>{1,}</Regex Quantifier><Raw String>a</Raw String><Regex Quantifier>{,2}</Regex Quantifier><Raw String>a</Raw String><Regex Quantifier>{1,2}</Regex Quantifier><Raw String>  </Raw String><Comment># bla bla</Comment><br/>
<Raw String>    </Raw String><Regex Backreference>\g<12></Regex Backreference><Regex Special>\L<name></Regex Special><Regex Backreference>\g<name></Regex Backreference><br/>
<Raw String>    </Raw String><Regex Special>\w.</Regex Special><Raw String>''</Raw String><String Char>\'</String Char><Regex Special>\b</Regex Special><String Char>\\</String Char><Raw String>a</Raw String><String Char>\#\p{H}\x12\u1234\1\023\023</String Char><Raw String>4</Raw String><String Char>\123\123</String Char><Raw String>4</Raw String><String Char>\12</String Char><Regex Special>$</Regex Special><br/>
<Raw String Deliminator>'''</Raw String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r'''</Raw String Deliminator><br/>
<Raw String>    </Raw String><Regex Capturing>(</Regex Capturing><Raw String>a</Raw String><Regex Capturing>)</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><Raw String>a</Raw String><Regex Non-Capturing>)</Regex Non-Capturing><br/>
<Raw String>    </Raw String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?=</Regex Parenthesis Options><Raw String>a</Raw String><Regex Parenthesis>)</Regex Parenthesis><Regex Parenthesis Options>(?R)(?r)</Regex Parenthesis Options><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?a-m:</Regex Parenthesis Options><Raw String>a</Raw String><Regex Parenthesis>)(</Regex Parenthesis><Error>?</Error><Raw String>ou</Raw String><String Char>\</String Char><br/>
<Raw String>        ps</Raw String><Regex Parenthesis>)</Regex Parenthesis><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?P<name></Regex Parenthesis Options><Raw String>a</Raw String><Regex Capturing>)</Regex Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?|</Regex Parenthesis Options><Raw String>a</Raw String><Regex Alternation>|</Regex Alternation><Raw String>b</Raw String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Raw String>    a</Raw String><Comment>(?#comment\)\'\"''"")</Comment><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?></Regex Parenthesis Options><Raw String>=a</Raw String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Raw String>    </Raw String><Comment>(?#bla</Comment><br/>
<Comment>     bla)</Comment><Raw String>abc</Raw String><br/>
<Raw String>    </Raw String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(</Regex Parenthesis Options><Regex Backreference>1</Regex Backreference><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw String>a</Raw String><Regex Alternation>|</Regex Alternation><Raw String>b</Raw String><Regex Parenthesis>)</Regex Parenthesis><Error>)</Error><Raw String>a</Raw String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(?!</Regex Parenthesis Options><Raw String>a</Raw String><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw String>a</Raw String><Regex Alternation>|</Regex Alternation><Raw String>b</Raw String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Raw String>      </Raw String><Comment># oups ~</Comment><br/>
<Raw String Deliminator>'''</Raw String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r'''</Raw String Deliminator><br/>
<Raw String>    </Raw String><Regex Set>[^xy-</Regex Set><String Char>\</String Char><br/>
<Regex Set>        z]</Regex Set><br/>
<Raw String>    </Raw String><Regex Set>[]xy</Regex Set><Regex Character Class>[:alpha:]</Regex Character Class><br/>
<Regex Set>    z]</Regex Set><br/>
<Raw String>    </Raw String><Regex Set>[[</Regex Set><Regex Special>\w</Regex Special><Regex Set>a(){}</Regex Set><String Char>\b\]\[\.</String Char><Regex Set>.]</Regex Set><br/>
<Raw String>    </Raw String><Regex Set>[[a-z]</Regex Set><Raw String>--</Raw String><Regex Set>[c]</Regex Set><Raw String>] </Raw String><Comment># regex V1</Comment><br/>
<Raw String Deliminator>'''</Raw String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r'''</Raw String Deliminator><Regex Capturing>(</Regex Capturing><br/>
<Raw String>    </Raw String><Regex Capturing>(</Regex Capturing><br/>
<Raw String>        </Raw String><Regex Capturing>(</Regex Capturing><br/>
<Raw String>            a </Raw String><Comment># bla</Comment><br/>
<Raw String>        </Raw String><Regex Capturing>)</Regex Capturing><br/>
<Raw String>    </Raw String><Regex Capturing>)</Regex Capturing><br/>
<Regex Capturing>)</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><br/>
<Raw String>    </Raw String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><br/>
<Raw String>        </Raw String><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Raw String>a</Raw String><Regex Capturing>(</Regex Capturing><br/>
<Raw String>            '" </Raw String><Comment># bla</Comment><br/>
<Raw String>            abc</Raw String><String Char>\</String Char><br/>
<Raw String>                z</Raw String><br/>
<Raw String>        </Raw String><Regex Capturing>))</Regex Capturing><br/>
<Raw String>    </Raw String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Regex Non-Capturing>)</Regex Non-Capturing><Raw String Deliminator>'''</Raw String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r'''</Raw String Deliminator><br/>
<Raw String>    </Raw String><Regex Non-Capturing>(?:</Regex Non-Capturing><br/>
<Raw String>         </Raw String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><br/>
<Raw String>            </Raw String><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Raw String>a</Raw String><Regex Capturing>(</Regex Capturing><br/>
<Regex Special>.</Regex Special><Raw String Deliminator>'''</Raw String Deliminator><Normal Text> </Normal Text><Comment># break</Comment><br/>
<Normal Text></Normal Text><br/>
<Comment># r"""..."""</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r"""</Raw String Deliminator><br/>
<Raw String>    a</Raw String><Regex Quantifier>+</Regex Quantifier><Raw String>é</Raw String><Regex Quantifier>??</Regex Quantifier><Raw String>a</Raw String><Regex Quantifier>?*</Regex Quantifier><br/>
<Raw String>        </Raw String><Comment># ~~ invalid, but ok</Comment><br/>
<Raw String>    a{x,}a{</Raw String><Regex Quantifier>{,}</Regex Quantifier><Raw String>}a</Raw String><Regex Quantifier>{1}</Regex Quantifier><Raw String>a</Raw String><Regex Quantifier>{1,}</Regex Quantifier><Raw String>a</Raw String><Regex Quantifier>{,2}</Regex Quantifier><Raw String>a</Raw String><Regex Quantifier>{1,2}</Regex Quantifier><Raw String>  </Raw String><Comment># bla bla</Comment><br/>
<Raw String>    </Raw String><Regex Backreference>\g<12></Regex Backreference><Regex Special>\L<name></Regex Special><Regex Backreference>\g<name></Regex Backreference><br/>
<Raw String>    </Raw String><Regex Special>\w.</Regex Special><Raw String>""</Raw String><String Char>\"</String Char><Regex Special>\b</Regex Special><String Char>\\</String Char><Raw String>a</Raw String><String Char>\#\p{H}\x12\u1234\1\023\023</String Char><Raw String>4</Raw String><String Char>\123\123</String Char><Raw String>4</Raw String><String Char>\12</String Char><Regex Special>$</Regex Special><br/>
<Raw String Deliminator>"""</Raw String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r"""</Raw String Deliminator><br/>
<Raw String>    </Raw String><Regex Capturing>(</Regex Capturing><Raw String>a</Raw String><Regex Capturing>)</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><Raw String>a</Raw String><Regex Non-Capturing>)</Regex Non-Capturing><br/>
<Raw String>    </Raw String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?=</Regex Parenthesis Options><Raw String>a</Raw String><Regex Parenthesis>)</Regex Parenthesis><Regex Parenthesis Options>(?R)(?r)</Regex Parenthesis Options><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?a-m:</Regex Parenthesis Options><Raw String>a</Raw String><Regex Parenthesis>)(</Regex Parenthesis><Error>?</Error><Raw String>ou</Raw String><String Char>\</String Char><br/>
<Raw String>        ps</Raw String><Regex Parenthesis>)</Regex Parenthesis><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?P<name></Regex Parenthesis Options><Raw String>a</Raw String><Regex Capturing>)</Regex Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?|</Regex Parenthesis Options><Raw String>a</Raw String><Regex Alternation>|</Regex Alternation><Raw String>b</Raw String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Raw String>    a</Raw String><Comment>(?#comment\)\'\")</Comment><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?></Regex Parenthesis Options><Raw String>=a</Raw String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Raw String>    </Raw String><Comment>(?#bla</Comment><br/>
<Comment>     bla)</Comment><Raw String>abc</Raw String><br/>
<Raw String>    </Raw String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(</Regex Parenthesis Options><Regex Backreference>1</Regex Backreference><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw String>a</Raw String><Regex Alternation>|</Regex Alternation><Raw String>b</Raw String><Regex Parenthesis>)</Regex Parenthesis><Error>)</Error><Raw String>a</Raw String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(?!</Regex Parenthesis Options><Raw String>a</Raw String><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw String>a</Raw String><Regex Alternation>|</Regex Alternation><Raw String>b</Raw String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Raw String>      </Raw String><Comment># oups ~</Comment><br/>
<Raw String Deliminator>"""</Raw String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r"""</Raw String Deliminator><br/>
<Raw String>    </Raw String><Regex Set>[^xy-</Regex Set><String Char>\</String Char><br/>
<Regex Set>        z]</Regex Set><br/>
<Raw String>    </Raw String><Regex Set>[]xy</Regex Set><Regex Character Class>[:alpha:]</Regex Character Class><br/>
<Regex Set>    z]</Regex Set><br/>
<Raw String>    </Raw String><Regex Set>[[</Regex Set><Regex Special>\w</Regex Special><Regex Set>a(){}</Regex Set><String Char>\b\]\[\.</String Char><Regex Set>.]</Regex Set><Raw String> </Raw String><Comment># bla bla</Comment><br/>
<Raw String>    </Raw String><Regex Set>[[a-z]</Regex Set><Raw String>--</Raw String><Regex Set>[c]</Regex Set><Raw String>] </Raw String><Comment># regex V1</Comment><br/>
<Raw String Deliminator>"""</Raw String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r"""</Raw String Deliminator><Regex Capturing>(</Regex Capturing><br/>
<Raw String>    </Raw String><Regex Capturing>(</Regex Capturing><br/>
<Raw String>        </Raw String><Regex Capturing>(</Regex Capturing><br/>
<Raw String>            a </Raw String><Comment># bla</Comment><br/>
<Raw String>        </Raw String><Regex Capturing>)</Regex Capturing><br/>
<Raw String>    </Raw String><Regex Capturing>)</Regex Capturing><br/>
<Regex Capturing>)</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><br/>
<Raw String>    </Raw String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><br/>
<Raw String>        </Raw String><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Raw String>a</Raw String><Regex Capturing>(</Regex Capturing><br/>
<Raw String>            '" </Raw String><Comment># bla</Comment><br/>
<Raw String>            abc</Raw String><String Char>\</String Char><br/>
<Raw String>                z</Raw String><br/>
<Raw String>        </Raw String><Regex Capturing>))</Regex Capturing><br/>
<Raw String>    </Raw String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Regex Non-Capturing>)</Regex Non-Capturing><Raw String Deliminator>"""</Raw String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw String Deliminator>r"""</Raw String Deliminator><br/>
<Raw String>    </Raw String><Regex Non-Capturing>(?:</Regex Non-Capturing><br/>
<Raw String>         </Raw String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><br/>
<Raw String>            </Raw String><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Raw String>a</Raw String><Regex Capturing>(</Regex Capturing><br/>
<Regex Special>.</Regex Special><Raw String Deliminator>"""</Raw String Deliminator><Normal Text> </Normal Text><Comment># break</Comment><br/>
<Normal Text></Normal Text><br/>
<Comment># rb'...'</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>rb'</Raw B-String Deliminator><Raw B-String>a</Raw B-String><Regex Quantifier>+</Regex Quantifier><Error>é</Error><Regex Quantifier>??</Regex Quantifier><Raw B-String>a</Raw B-String><Regex Quantifier>?*</Regex Quantifier><Raw B-String>a{x,}a</Raw B-String><Regex Quantifier>{,}</Regex Quantifier><Raw B-String>a</Raw B-String><Regex Quantifier>{1}</Regex Quantifier><Raw B-String>a</Raw B-String><Regex Quantifier>{1,}</Regex Quantifier><Raw B-String>a</Raw B-String><Regex Quantifier>{,2}</Regex Quantifier><Raw B-String>a</Raw B-String><Regex Quantifier>{1,2}</Regex Quantifier><Regex Backreference>\g<12></Regex Backreference><Regex Special>\L<name></Regex Special><Regex Backreference>\g<name></Regex Backreference><Regex Special>\w.</Regex Special><String Char>\'</String Char><Regex Special>\b</Regex Special><String Char>\\</String Char><Raw B-String>a#</Raw B-String><Regex Special>$</Regex Special><Raw B-String Deliminator>'</Raw B-String Deliminator><br/>
<Normal Text>     </Normal Text><Comment># oups ~   ~~ invalid, but ok</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>rb'</Raw B-String Deliminator><Error>\</Error><Raw B-String>p{H}</Raw B-String><String Char>\x12</String Char><Error>\</Error><Raw B-String>u1234</Raw B-String><String Char>\1\023\023</String Char><Raw B-String>4</Raw B-String><String Char>\123\123</String Char><Raw B-String>4</Raw B-String><String Char>\12</String Char><Raw B-String Deliminator>'</Raw B-String Deliminator><br/>
<Normal Text>        </Normal Text><Comment># ~~ oups  ~~</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>br'</Raw B-String Deliminator><Regex Capturing>(</Regex Capturing><Raw B-String>a</Raw B-String><Regex Capturing>)</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><Raw B-String>a</Raw B-String><Regex Non-Capturing>)</Regex Non-Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?=</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><Regex Parenthesis Options>(?R)(?r)</Regex Parenthesis Options><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?a-m:</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Parenthesis>)(</Regex Parenthesis><Error>?</Error><Raw B-String>oups</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?P<name></Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Capturing>)</Regex Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?|</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Alternation>|</Regex Alternation><Raw B-String>b</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><Comment>(?#comment\)\'\")</Comment><String Char>\</String Char><br/>
<Raw B-String>    </Raw B-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?></Regex Parenthesis Options><Raw B-String>=a</Raw B-String><Regex Parenthesis>)(</Regex Parenthesis><Regex Parenthesis Options>?(</Regex Parenthesis Options><Regex Backreference>1</Regex Backreference><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Alternation>|</Regex Alternation><Raw B-String>b</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><Error>)</Error><Raw B-String>a</Raw B-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(?!</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Alternation>|</Regex Alternation><Raw B-String>b</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><Raw B-String Deliminator>'</Raw B-String Deliminator><br/>
<Normal Text>            </Normal Text><Comment># oups ~</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>rb'</Raw B-String Deliminator><Regex Set>[^xy-z]</Regex Set><Regex Alternation>|</Regex Alternation><Regex Set>[]xy</Regex Set><Regex Character Class>[:alpha:]</Regex Character Class><Regex Set>z]</Regex Set><Regex Alternation>|</Regex Alternation><Regex Set>[[</Regex Set><Regex Special>\w</Regex Special><Regex Set>a(){}</Regex Set><String Char>\b\]\[\.</String Char><Regex Set>.]</Regex Set><Regex Alternation>|</Regex Alternation><Regex Set>[[a-z]</Regex Set><Raw B-String>--</Raw B-String><Regex Set>[c]</Regex Set><Raw B-String>]</Raw B-String><Raw B-String Deliminator>'</Raw B-String Deliminator><br/>
<Normal Text>                                           </Normal Text><Comment># regex V1 ~~~~~~~~~~~~</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>br'</Raw B-String Deliminator><Regex Capturing>(((</Regex Capturing><Raw B-String>a</Raw B-String><Regex Capturing>)))</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Capturing>(</Regex Capturing><Raw B-String>"</Raw B-String><String Char>\'\"</String Char><Regex Capturing>))</Regex Capturing><Regex Parenthesis>)</Regex Parenthesis><Regex Non-Capturing>)</Regex Non-Capturing><Raw B-String Deliminator>'</Raw B-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>rb'</Raw B-String Deliminator><Regex Non-Capturing>(?:</Regex Non-Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Capturing>(</Regex Capturing><String Char>\</String Char><br/>
<Regex Special>.</Regex Special><Raw B-String Deliminator>'</Raw B-String Deliminator><Normal Text> </Normal Text><Comment># break</Comment><br/>
<Normal Text></Normal Text><br/>
<Comment># rb"..."</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>rb"</Raw B-String Deliminator><Raw B-String>a</Raw B-String><Regex Quantifier>+</Regex Quantifier><Error>é</Error><Regex Quantifier>??</Regex Quantifier><Raw B-String>a</Raw B-String><Regex Quantifier>?*</Regex Quantifier><Raw B-String>a{x,}a</Raw B-String><Regex Quantifier>{,}</Regex Quantifier><Raw B-String>a</Raw B-String><Regex Quantifier>{1}</Regex Quantifier><Raw B-String>a</Raw B-String><Regex Quantifier>{1,}</Regex Quantifier><Raw B-String>a</Raw B-String><Regex Quantifier>{,2}</Regex Quantifier><Raw B-String>a</Raw B-String><Regex Quantifier>{1,2}</Regex Quantifier><Regex Backreference>\g<12></Regex Backreference><Regex Special>\L<name></Regex Special><Regex Backreference>\g<name></Regex Backreference><Regex Special>\w.</Regex Special><String Char>\"</String Char><Regex Special>\b</Regex Special><String Char>\\</String Char><Raw B-String>a#</Raw B-String><Regex Special>$</Regex Special><Raw B-String Deliminator>"</Raw B-String Deliminator><br/>
<Normal Text>     </Normal Text><Comment># oups ~   ~~ invalid, but ok</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>rb"</Raw B-String Deliminator><Error>\</Error><Raw B-String>p{H}</Raw B-String><String Char>\x12</String Char><Error>\</Error><Raw B-String>u1234</Raw B-String><String Char>\1\023\023</String Char><Raw B-String>4</Raw B-String><String Char>\123\123</String Char><Raw B-String>4</Raw B-String><String Char>\12</String Char><Raw B-String Deliminator>"</Raw B-String Deliminator><br/>
<Normal Text>        </Normal Text><Comment># ~~ oups  ~~</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>br"</Raw B-String Deliminator><Regex Capturing>(</Regex Capturing><Raw B-String>a</Raw B-String><Regex Capturing>)</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><Raw B-String>a</Raw B-String><Regex Non-Capturing>)</Regex Non-Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?=</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><Regex Parenthesis Options>(?R)(?r)</Regex Parenthesis Options><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?a-m:</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Parenthesis>)(</Regex Parenthesis><Error>?</Error><Raw B-String>oups</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?P<name></Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Capturing>)</Regex Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?|</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Alternation>|</Regex Alternation><Raw B-String>b</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><Comment>(?#comment\)\'\")</Comment><String Char>\</String Char><br/>
<Raw B-String>    </Raw B-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?></Regex Parenthesis Options><Raw B-String>=a</Raw B-String><Regex Parenthesis>)(</Regex Parenthesis><Regex Parenthesis Options>?(</Regex Parenthesis Options><Regex Backreference>1</Regex Backreference><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Alternation>|</Regex Alternation><Raw B-String>b</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><Error>)</Error><Raw B-String>a</Raw B-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(?!</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Alternation>|</Regex Alternation><Raw B-String>b</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><Raw B-String Deliminator>"</Raw B-String Deliminator><br/>
<Normal Text>            </Normal Text><Comment># oups ~</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>rb"</Raw B-String Deliminator><Regex Set>[^xy-z]</Regex Set><Regex Alternation>|</Regex Alternation><Regex Set>[]xy</Regex Set><Regex Character Class>[:alpha:]</Regex Character Class><Regex Set>z]</Regex Set><Regex Alternation>|</Regex Alternation><Regex Set>[[</Regex Set><Regex Special>\w</Regex Special><Regex Set>a(){}</Regex Set><String Char>\b\]\[\.</String Char><Regex Set>.]</Regex Set><Regex Alternation>|</Regex Alternation><Regex Set>[[a-z]</Regex Set><Raw B-String>--</Raw B-String><Regex Set>[c]</Regex Set><Raw B-String>]</Raw B-String><Raw B-String Deliminator>"</Raw B-String Deliminator><br/>
<Normal Text>                                           </Normal Text><Comment># regex V1 ~~~~~~~~~~~~</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>br"</Raw B-String Deliminator><Regex Capturing>(((</Regex Capturing><Raw B-String>a</Raw B-String><Regex Capturing>)))</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Capturing>(</Regex Capturing><String Char>\'\"</String Char><Raw B-String>'</Raw B-String><Regex Capturing>))</Regex Capturing><Regex Parenthesis>)</Regex Parenthesis><Regex Non-Capturing>)</Regex Non-Capturing><Raw B-String Deliminator>"</Raw B-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>rb"</Raw B-String Deliminator><Regex Non-Capturing>(?:</Regex Non-Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Capturing>(</Regex Capturing><String Char>\</String Char><br/>
<Regex Special>.</Regex Special><Raw B-String Deliminator>"</Raw B-String Deliminator><Normal Text> </Normal Text><Comment># break</Comment><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Comment># rb'''...'''</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>rb'''</Raw B-String Deliminator><br/>
<Raw B-String>    a</Raw B-String><Regex Quantifier>+</Regex Quantifier><Error>é</Error><Regex Quantifier>??</Regex Quantifier><Raw B-String>a</Raw B-String><Regex Quantifier>?*</Regex Quantifier><br/>
<Raw B-String>        </Raw B-String><Comment># ~~ invalid, but ok</Comment><br/>
<Raw B-String>    a{x,}a</Raw B-String><Regex Quantifier>{,}</Regex Quantifier><Raw B-String>a</Raw B-String><Regex Quantifier>{1}</Regex Quantifier><Raw B-String>a</Raw B-String><Regex Quantifier>{1,}</Regex Quantifier><Raw B-String>a</Raw B-String><Regex Quantifier>{,2}</Regex Quantifier><Raw B-String>a</Raw B-String><Regex Quantifier>{1,2}</Regex Quantifier><Raw B-String>  </Raw B-String><Comment># bla bla</Comment><br/>
<Raw B-String>    </Raw B-String><Regex Backreference>\g<12></Regex Backreference><Regex Special>\L<name></Regex Special><Regex Backreference>\g<name></Regex Backreference><br/>
<Raw B-String>    </Raw B-String><Regex Special>\w.</Regex Special><Raw B-String>''</Raw B-String><String Char>\'</String Char><Regex Special>\b</Regex Special><String Char>\\</String Char><Raw B-String>a</Raw B-String><String Char>\#</String Char><Error>\</Error><Raw B-String>p{H}</Raw B-String><String Char>\x12</String Char><Error>\</Error><Raw B-String>u1234</Raw B-String><String Char>\1\023\023</String Char><Raw B-String>4</Raw B-String><String Char>\123\123</String Char><Raw B-String>4</Raw B-String><String Char>\12</String Char><Regex Special>$</Regex Special><br/>
<Raw B-String Deliminator>'''</Raw B-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>br'''</Raw B-String Deliminator><br/>
<Raw B-String>    </Raw B-String><Regex Capturing>(</Regex Capturing><Raw B-String>a</Raw B-String><Regex Capturing>)</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><Raw B-String>a</Raw B-String><Regex Non-Capturing>)</Regex Non-Capturing><br/>
<Raw B-String>    </Raw B-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?=</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><Regex Parenthesis Options>(?R)(?r)</Regex Parenthesis Options><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?a-m:</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Parenthesis>)(</Regex Parenthesis><Error>?</Error><Raw B-String>ou</Raw B-String><String Char>\</String Char><br/>
<Raw B-String>        ps</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?P<name></Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Capturing>)</Regex Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?|</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Alternation>|</Regex Alternation><Raw B-String>b</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Raw B-String>    a</Raw B-String><Comment>(?#comment\)\'\"''"")</Comment><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?></Regex Parenthesis Options><Raw B-String>=a</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Raw B-String>    </Raw B-String><Comment>(?#bla</Comment><br/>
<Comment>     bla)</Comment><Raw B-String>abc</Raw B-String><br/>
<Raw B-String>    </Raw B-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(</Regex Parenthesis Options><Regex Backreference>1</Regex Backreference><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Alternation>|</Regex Alternation><Raw B-String>b</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><Error>)</Error><Raw B-String>a</Raw B-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(?!</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Alternation>|</Regex Alternation><Raw B-String>b</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Raw B-String>      </Raw B-String><Comment># oups ~</Comment><br/>
<Raw B-String Deliminator>'''</Raw B-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>rb'''</Raw B-String Deliminator><br/>
<Raw B-String>    </Raw B-String><Regex Set>[^xy-</Regex Set><String Char>\</String Char><br/>
<Regex Set>        z]</Regex Set><br/>
<Raw B-String>    </Raw B-String><Regex Set>[]xy</Regex Set><Regex Character Class>[:alpha:]</Regex Character Class><br/>
<Regex Set>    z]</Regex Set><br/>
<Raw B-String>    </Raw B-String><Regex Set>[[</Regex Set><Regex Special>\w</Regex Special><Regex Set>a(){}</Regex Set><String Char>\b\]\[\.</String Char><Regex Set>.]</Regex Set><br/>
<Raw B-String>    </Raw B-String><Regex Set>[[a-z]</Regex Set><Raw B-String>--</Raw B-String><Regex Set>[c]</Regex Set><Raw B-String>] </Raw B-String><Comment># regex V1</Comment><br/>
<Raw B-String Deliminator>'''</Raw B-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>br'''</Raw B-String Deliminator><Regex Capturing>(</Regex Capturing><br/>
<Raw B-String>    </Raw B-String><Regex Capturing>(</Regex Capturing><br/>
<Raw B-String>        </Raw B-String><Regex Capturing>(</Regex Capturing><br/>
<Raw B-String>            a </Raw B-String><Comment># bla</Comment><br/>
<Raw B-String>        </Raw B-String><Regex Capturing>)</Regex Capturing><br/>
<Raw B-String>    </Raw B-String><Regex Capturing>)</Regex Capturing><br/>
<Regex Capturing>)</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><br/>
<Raw B-String>    </Raw B-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><br/>
<Raw B-String>        </Raw B-String><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Capturing>(</Regex Capturing><br/>
<Raw B-String>            '" </Raw B-String><Comment># bla</Comment><br/>
<Raw B-String>            abc</Raw B-String><String Char>\</String Char><br/>
<Raw B-String>                z</Raw B-String><br/>
<Raw B-String>        </Raw B-String><Regex Capturing>))</Regex Capturing><br/>
<Raw B-String>    </Raw B-String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Regex Non-Capturing>)</Regex Non-Capturing><Raw B-String Deliminator>'''</Raw B-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>rb'''</Raw B-String Deliminator><br/>
<Raw B-String>    </Raw B-String><Regex Non-Capturing>(?:</Regex Non-Capturing><br/>
<Raw B-String>         </Raw B-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><br/>
<Raw B-String>            </Raw B-String><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Capturing>(</Regex Capturing><br/>
<Regex Special>.</Regex Special><Raw B-String Deliminator>'''</Raw B-String Deliminator><Normal Text> </Normal Text><Comment># break</Comment><br/>
<Normal Text></Normal Text><br/>
<Comment># rb"""..."""</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>rb"""</Raw B-String Deliminator><br/>
<Raw B-String>    a</Raw B-String><Regex Quantifier>+</Regex Quantifier><Error>é</Error><Regex Quantifier>??</Regex Quantifier><Raw B-String>a</Raw B-String><Regex Quantifier>?*</Regex Quantifier><br/>
<Raw B-String>        </Raw B-String><Comment># ~~ invalid, but ok</Comment><br/>
<Raw B-String>    a{x,}a</Raw B-String><Regex Quantifier>{,}</Regex Quantifier><Raw B-String>a</Raw B-String><Regex Quantifier>{1}</Regex Quantifier><Raw B-String>a</Raw B-String><Regex Quantifier>{1,}</Regex Quantifier><Raw B-String>a</Raw B-String><Regex Quantifier>{,2}</Regex Quantifier><Raw B-String>a</Raw B-String><Regex Quantifier>{1,2}</Regex Quantifier><Raw B-String>  </Raw B-String><Comment># bla bla</Comment><br/>
<Raw B-String>    </Raw B-String><Regex Backreference>\g<12></Regex Backreference><Regex Special>\L<name></Regex Special><Regex Backreference>\g<name></Regex Backreference><br/>
<Raw B-String>    </Raw B-String><Regex Special>\w.</Regex Special><Raw B-String>""</Raw B-String><String Char>\"</String Char><Regex Special>\b</Regex Special><String Char>\\</String Char><Raw B-String>a</Raw B-String><String Char>\#</String Char><Error>\</Error><Raw B-String>p{H}</Raw B-String><String Char>\x12</String Char><Error>\</Error><Raw B-String>u1234</Raw B-String><String Char>\1\023\023</String Char><Raw B-String>4</Raw B-String><String Char>\123\123</String Char><Raw B-String>4</Raw B-String><String Char>\12</String Char><Regex Special>$</Regex Special><br/>
<Raw B-String Deliminator>"""</Raw B-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>br"""</Raw B-String Deliminator><br/>
<Raw B-String>    </Raw B-String><Regex Capturing>(</Regex Capturing><Raw B-String>a</Raw B-String><Regex Capturing>)</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><Raw B-String>a</Raw B-String><Regex Non-Capturing>)</Regex Non-Capturing><br/>
<Raw B-String>    </Raw B-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?=</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><Regex Parenthesis Options>(?R)(?r)</Regex Parenthesis Options><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?a-m:</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Parenthesis>)(</Regex Parenthesis><Error>?</Error><Raw B-String>ou</Raw B-String><String Char>\</String Char><br/>
<Raw B-String>        ps</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?P<name></Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Capturing>)</Regex Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?|</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Alternation>|</Regex Alternation><Raw B-String>b</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Raw B-String>    a</Raw B-String><Comment>(?#comment\)\'\")</Comment><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?></Regex Parenthesis Options><Raw B-String>=a</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Raw B-String>    </Raw B-String><Comment>(?#bla</Comment><br/>
<Comment>     bla)</Comment><Raw B-String>abc</Raw B-String><br/>
<Raw B-String>    </Raw B-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(</Regex Parenthesis Options><Regex Backreference>1</Regex Backreference><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Alternation>|</Regex Alternation><Raw B-String>b</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><Error>)</Error><Raw B-String>a</Raw B-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(?!</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Alternation>|</Regex Alternation><Raw B-String>b</Raw B-String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Raw B-String>      </Raw B-String><Comment># oups ~</Comment><br/>
<Raw B-String Deliminator>"""</Raw B-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>rb"""</Raw B-String Deliminator><br/>
<Raw B-String>    </Raw B-String><Regex Set>[^xy-</Regex Set><String Char>\</String Char><br/>
<Regex Set>        z]</Regex Set><br/>
<Raw B-String>    </Raw B-String><Regex Set>[]xy</Regex Set><Regex Character Class>[:alpha:]</Regex Character Class><br/>
<Regex Set>    z]</Regex Set><br/>
<Raw B-String>    </Raw B-String><Regex Set>[[</Regex Set><Regex Special>\w</Regex Special><Regex Set>a(){}</Regex Set><String Char>\b\]\[\.</String Char><Regex Set>.]</Regex Set><Raw B-String> </Raw B-String><Comment># bla bla</Comment><br/>
<Raw B-String>    </Raw B-String><Regex Set>[[a-z]</Regex Set><Raw B-String>--</Raw B-String><Regex Set>[c]</Regex Set><Raw B-String>] </Raw B-String><Comment># regex V1</Comment><br/>
<Raw B-String Deliminator>"""</Raw B-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>br"""</Raw B-String Deliminator><Regex Capturing>(</Regex Capturing><br/>
<Raw B-String>    </Raw B-String><Regex Capturing>(</Regex Capturing><br/>
<Raw B-String>        </Raw B-String><Regex Capturing>(</Regex Capturing><br/>
<Raw B-String>            a </Raw B-String><Comment># bla</Comment><br/>
<Raw B-String>        </Raw B-String><Regex Capturing>)</Regex Capturing><br/>
<Raw B-String>    </Raw B-String><Regex Capturing>)</Regex Capturing><br/>
<Regex Capturing>)</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><br/>
<Raw B-String>    </Raw B-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><br/>
<Raw B-String>        </Raw B-String><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Capturing>(</Regex Capturing><br/>
<Raw B-String>            '" </Raw B-String><Comment># bla</Comment><br/>
<Raw B-String>            abc</Raw B-String><String Char>\</String Char><br/>
<Raw B-String>                z</Raw B-String><br/>
<Raw B-String>        </Raw B-String><Regex Capturing>))</Regex Capturing><br/>
<Raw B-String>    </Raw B-String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Regex Non-Capturing>)</Regex Non-Capturing><Raw B-String Deliminator>"""</Raw B-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw B-String Deliminator>rb"""</Raw B-String Deliminator><br/>
<Raw B-String>    </Raw B-String><Regex Non-Capturing>(?:</Regex Non-Capturing><br/>
<Raw B-String>         </Raw B-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><br/>
<Raw B-String>            </Raw B-String><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Raw B-String>a</Raw B-String><Regex Capturing>(</Regex Capturing><br/>
<Regex Special>.</Regex Special><Raw B-String Deliminator>"""</Raw B-String Deliminator><Normal Text> </Normal Text><Comment># break</Comment><br/>
<Normal Text></Normal Text><br/>
<Comment># rf'...'</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>rf'</Raw F-String Deliminator><Raw F-String>a</Raw F-String><Regex Quantifier>+</Regex Quantifier><Raw F-String>é</Raw F-String><Regex Quantifier>??</Regex Quantifier><Raw F-String>a</Raw F-String><Regex Quantifier>?*</Regex Quantifier><Regex Special>\L<name>\L<</Regex Special><String Substitution>{</String Substitution><Normal Text>name</Normal Text><String Substitution>}</String Substitution><Regex Special>></Regex Special><Regex Backreference>\g<name>\g<</Regex Backreference><String Substitution>{</String Substitution><Normal Text>name</Normal Text><String Substitution>}</String Substitution><Regex Backreference>>\g<12></Regex Backreference><Regex Special>\w.</Regex Special><String Char>\'</String Char><Regex Special>\b</Regex Special><String Char>\\</String Char><Raw F-String>a#</Raw F-String><Raw F-String Deliminator>'</Raw F-String Deliminator><br/>
<Normal Text>              </Normal Text><Comment># ~~ invalid, but ok</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>rf'</Raw F-String Deliminator><String Char>\p{{H}}\p</String Char><String Substitution>{</String Substitution><Normal Text>name</Normal Text><String Substitution>}</String Substitution><String Char>\p{{</String Char><String Substitution>{</String Substitution><Normal Text>name</Normal Text><String Substitution>}</String Substitution><String Char>}}\x12\u1234\1\023\023</String Char><Raw F-String>4</Raw F-String><String Char>\123\123</String Char><Raw F-String>4</Raw F-String><String Char>\12</String Char><Regex Special>$</Regex Special><Raw F-String Deliminator>'</Raw F-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>rf'</Raw F-String Deliminator><Raw F-String>a</Raw F-String><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><Raw F-String>a</Raw F-String><String Char>{{</String Char><Raw F-String>x,</Raw F-String><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>,</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>1</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>1,</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>,2</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>1,2</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><Regex Quantifier>,</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>,</Regex Quantifier><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><Regex Quantifier>,</Regex Quantifier><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><String Char>}}</String Char><Raw F-String Deliminator>'</Raw F-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>fr'</Raw F-String Deliminator><Regex Capturing>(</Regex Capturing><Raw F-String>a</Raw F-String><Regex Capturing>)</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><Raw F-String>a</Raw F-String><Regex Non-Capturing>)</Regex Non-Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?=</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Regex Parenthesis Options>(?R)(?r)</Regex Parenthesis Options><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?a-m:</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Parenthesis>)(</Regex Parenthesis><Error>?</Error><Raw F-String>oups</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?P<name></Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Capturing>)</Regex Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?|</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Alternation>|</Regex Alternation><Raw F-String>b</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Comment>(?#comment\)\'\")</Comment><String Char>\</String Char><br/>
<Raw F-String>    </Raw F-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?></Regex Parenthesis Options><Raw F-String>=a</Raw F-String><Regex Parenthesis>)(</Regex Parenthesis><Regex Parenthesis Options>?(</Regex Parenthesis Options><Regex Backreference>1</Regex Backreference><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Alternation>|</Regex Alternation><Raw F-String>b</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Error>)</Error><Raw F-String>a</Raw F-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(?!</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Alternation>|</Regex Alternation><Raw F-String>b</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Raw F-String Deliminator>'</Raw F-String Deliminator><br/>
<Normal Text>            </Normal Text><Comment># oups ~</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>fr'</Raw F-String Deliminator><Regex Capturing>(</Regex Capturing><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Capturing>)</Regex Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?=</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis>)</Regex Parenthesis><Regex Parenthesis Options>(?</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis Options>)</Regex Parenthesis Options><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis Options>:</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Parenthesis>)(</Regex Parenthesis><Error>?</Error><Raw F-String>oups</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?P<</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Raw F-String>>a</Raw F-String><Regex Capturing>)</Regex Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Alternation>|</Regex Alternation><Raw F-String>b</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Error>)</Error><Raw F-String>a</Raw F-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(?!</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis Options>)</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>y</Normal Text><String Substitution>}</String Substitution><Regex Alternation>|</Regex Alternation><String Substitution>{</String Substitution><Normal Text>y</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis>)</Regex Parenthesis><Raw F-String Deliminator>'</Raw F-String Deliminator><br/>
<Normal Text>                                                         </Normal Text><Comment># oups ~</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>rf'</Raw F-String Deliminator><Regex Set>[^x$</Regex Set><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Set>y-z]</Regex Set><Regex Alternation>|</Regex Alternation><Regex Set>[]xy</Regex Set><Regex Character Class>[:alpha:]</Regex Character Class><Regex Set>z]</Regex Set><Regex Alternation>|</Regex Alternation><Regex Set>[[</Regex Set><Regex Special>\w</Regex Special><Regex Set>a</Regex Set><Error>}</Error><Regex Set>()</Regex Set><String Char>{{}}\b\]\[\.</String Char><Regex Set>.]</Regex Set><Regex Alternation>|</Regex Alternation><Regex Set>[[a-z]</Regex Set><Raw F-String>--</Raw F-String><Regex Set>[c]</Regex Set><Raw F-String>]</Raw F-String><Raw F-String Deliminator>'</Raw F-String Deliminator><br/>
<Normal Text>                                                  </Normal Text><Comment># regex V1 ~~~~~~~~~~~~</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>fr'</Raw F-String Deliminator><Regex Capturing>(((</Regex Capturing><Raw F-String>a</Raw F-String><Regex Capturing>)))</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Regex Special>$</Regex Special><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Raw F-String>a</Raw F-String><Regex Capturing>(</Regex Capturing><Raw F-String>"</Raw F-String><String Char>\'\"</String Char><Regex Capturing>))</Regex Capturing><Regex Parenthesis>)</Regex Parenthesis><Regex Non-Capturing>)</Regex Non-Capturing><Raw F-String Deliminator>'</Raw F-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>rf'</Raw F-String Deliminator><Regex Non-Capturing>(?:</Regex Non-Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Capturing>(</Regex Capturing><String Char>\</String Char><br/>
<Regex Special>.$</Regex Special><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Raw F-String Deliminator>'</Raw F-String Deliminator><Normal Text> </Normal Text><Comment># break</Comment><br/>
<Normal Text></Normal Text><br/>
<Comment># rf"..."</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>rf"</Raw F-String Deliminator><Raw F-String>a</Raw F-String><Regex Quantifier>+</Regex Quantifier><Raw F-String>é</Raw F-String><Regex Quantifier>??</Regex Quantifier><Raw F-String>a</Raw F-String><Regex Quantifier>?*</Regex Quantifier><Regex Special>\L<name>\L<</Regex Special><String Substitution>{</String Substitution><Normal Text>name</Normal Text><String Substitution>}</String Substitution><Regex Special>></Regex Special><Regex Backreference>\g<name>\g<</Regex Backreference><String Substitution>{</String Substitution><Normal Text>name</Normal Text><String Substitution>}</String Substitution><Regex Backreference>>\g<12></Regex Backreference><Regex Special>\w.</Regex Special><String Char>\'</String Char><Regex Special>\b</Regex Special><String Char>\\</String Char><Raw F-String>a#</Raw F-String><Raw F-String Deliminator>"</Raw F-String Deliminator><br/>
<Normal Text>              </Normal Text><Comment># ~~ invalid, but ok</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>rf"</Raw F-String Deliminator><String Char>\p{{H}}\p</String Char><String Substitution>{</String Substitution><Normal Text>name</Normal Text><String Substitution>}</String Substitution><String Char>\p{{</String Char><String Substitution>{</String Substitution><Normal Text>name</Normal Text><String Substitution>}</String Substitution><String Char>}}\x12\u1234\1\023\023</String Char><Raw F-String>4</Raw F-String><String Char>\123\123</String Char><Raw F-String>4</Raw F-String><String Char>\12</String Char><Regex Special>$</Regex Special><Raw F-String Deliminator>"</Raw F-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>rf"</Raw F-String Deliminator><Raw F-String>a</Raw F-String><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><Raw F-String>a</Raw F-String><String Char>{{</String Char><Raw F-String>x,</Raw F-String><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>,</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>1</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>1,</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>,2</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>1,2</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><Regex Quantifier>,</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>,</Regex Quantifier><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><Regex Quantifier>,</Regex Quantifier><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><String Char>}}</String Char><Raw F-String Deliminator>"</Raw F-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>fr"</Raw F-String Deliminator><Regex Capturing>(</Regex Capturing><Raw F-String>a</Raw F-String><Regex Capturing>)</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><Raw F-String>a</Raw F-String><Regex Non-Capturing>)</Regex Non-Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?=</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Regex Parenthesis Options>(?R)(?r)</Regex Parenthesis Options><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?a-m:</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Parenthesis>)(</Regex Parenthesis><Error>?</Error><Raw F-String>oups</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?P<name></Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Capturing>)</Regex Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?|</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Alternation>|</Regex Alternation><Raw F-String>b</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Comment>(?#comment\)\'\")</Comment><String Char>\</String Char><br/>
<Raw F-String>    </Raw F-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?></Regex Parenthesis Options><Raw F-String>=a</Raw F-String><Regex Parenthesis>)(</Regex Parenthesis><Regex Parenthesis Options>?(</Regex Parenthesis Options><Regex Backreference>1</Regex Backreference><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Alternation>|</Regex Alternation><Raw F-String>b</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Error>)</Error><Raw F-String>a</Raw F-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(?!</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Alternation>|</Regex Alternation><Raw F-String>b</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Raw F-String Deliminator>"</Raw F-String Deliminator><br/>
<Normal Text>            </Normal Text><Comment># oups ~</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>fr"</Raw F-String Deliminator><Regex Capturing>(</Regex Capturing><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Capturing>)</Regex Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?=</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis>)</Regex Parenthesis><Regex Parenthesis Options>(?</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis Options>)</Regex Parenthesis Options><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis Options>:</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Parenthesis>)(</Regex Parenthesis><Error>?</Error><Raw F-String>oups</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?P<</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Raw F-String>>a</Raw F-String><Regex Capturing>)</Regex Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Alternation>|</Regex Alternation><Raw F-String>b</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Error>)</Error><Raw F-String>a</Raw F-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(?!</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis Options>)</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>y</Normal Text><String Substitution>}</String Substitution><Regex Alternation>|</Regex Alternation><String Substitution>{</String Substitution><Normal Text>y</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis>)</Regex Parenthesis><Raw F-String Deliminator>"</Raw F-String Deliminator><br/>
<Normal Text>                                                         </Normal Text><Comment># oups ~</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>rf"</Raw F-String Deliminator><Regex Set>[^x$</Regex Set><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Set>y-z]</Regex Set><Regex Alternation>|</Regex Alternation><Regex Set>[]xy</Regex Set><Regex Character Class>[:alpha:]</Regex Character Class><Regex Set>z]</Regex Set><Regex Alternation>|</Regex Alternation><Regex Set>[[</Regex Set><Regex Special>\w</Regex Special><Regex Set>a</Regex Set><Error>}</Error><Regex Set>()</Regex Set><String Char>{{}}\b\]\[\.</String Char><Regex Set>.]</Regex Set><Regex Alternation>|</Regex Alternation><Regex Set>[[a-z]</Regex Set><Raw F-String>--</Raw F-String><Regex Set>[c]</Regex Set><Raw F-String>]</Raw F-String><Raw F-String Deliminator>"</Raw F-String Deliminator><br/>
<Normal Text>                                                  </Normal Text><Comment># regex V1 ~~~~~~~~~~~~</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>fr"</Raw F-String Deliminator><Regex Capturing>(((</Regex Capturing><Raw F-String>a</Raw F-String><Regex Capturing>)))</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Regex Special>$</Regex Special><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Raw F-String>a</Raw F-String><Regex Capturing>(</Regex Capturing><Raw F-String>'</Raw F-String><String Char>\"</String Char><Raw F-String>'</Raw F-String><Regex Capturing>))</Regex Capturing><Regex Parenthesis>)</Regex Parenthesis><Regex Non-Capturing>)</Regex Non-Capturing><Raw F-String Deliminator>"</Raw F-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>rf"</Raw F-String Deliminator><Regex Non-Capturing>(?:</Regex Non-Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Capturing>(</Regex Capturing><String Char>\</String Char><br/>
<Regex Special>.$</Regex Special><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Raw F-String Deliminator>"</Raw F-String Deliminator><Normal Text> </Normal Text><Comment># break</Comment><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Comment># rf'''...'''</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>rf'''</Raw F-String Deliminator><br/>
<Raw F-String>    a</Raw F-String><Regex Quantifier>+</Regex Quantifier><Raw F-String>é</Raw F-String><Regex Quantifier>??</Regex Quantifier><Raw F-String>a</Raw F-String><Regex Quantifier>?*</Regex Quantifier><br/>
<Raw F-String>        </Raw F-String><Comment># ~~ invalid, but ok</Comment><br/>
<Raw F-String>    a</Raw F-String><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><Raw F-String>a</Raw F-String><String Char>{{</String Char><Raw F-String>x,</Raw F-String><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>,</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>1</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>1,</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>,2</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>1,2</Regex Quantifier><String Char>}}</String Char><Raw F-String>  </Raw F-String><Comment># bla bla</Comment><br/>
<Raw F-String>    a</Raw F-String><String Char>{{</String Char><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><Regex Quantifier>,</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>,</Regex Quantifier><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><Regex Quantifier>,</Regex Quantifier><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><String Char>}}</String Char><br/>
<Raw F-String>    </Raw F-String><Regex Special>\L<name>\L<</Regex Special><String Substitution>{</String Substitution><Normal Text>name</Normal Text><String Substitution>}</String Substitution><Regex Special>></Regex Special><Regex Backreference>\g<name>\g<</Regex Backreference><String Substitution>{</String Substitution><Normal Text>name</Normal Text><String Substitution>}</String Substitution><Regex Backreference>>\g<12></Regex Backreference><br/>
<Raw F-String>    </Raw F-String><Regex Special>\w.</Regex Special><Raw F-String>''</Raw F-String><String Char>\'</String Char><Regex Special>\b</Regex Special><String Char>\\</String Char><Raw F-String>a</Raw F-String><String Char>\#\p{{H}}\p</String Char><String Substitution>{</String Substitution><Normal Text>name</Normal Text><String Substitution>}</String Substitution><String Char>\p{{</String Char><String Substitution>{</String Substitution><Normal Text>name</Normal Text><String Substitution>}</String Substitution><String Char>}}\x12\u1234\1\023\023</String Char><Raw F-String>4</Raw F-String><String Char>\123\123</String Char><Raw F-String>4</Raw F-String><String Char>\12</String Char><Regex Special>$</Regex Special><br/>
<Raw F-String Deliminator>'''</Raw F-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>fr'''</Raw F-String Deliminator><br/>
<Raw F-String>    </Raw F-String><Regex Capturing>(</Regex Capturing><Raw F-String>a</Raw F-String><Regex Capturing>)</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><Raw F-String>a</Raw F-String><Regex Non-Capturing>)</Regex Non-Capturing><br/>
<Raw F-String>    </Raw F-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?=</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Regex Parenthesis Options>(?R)(?r)</Regex Parenthesis Options><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?a-m:</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Parenthesis>)(</Regex Parenthesis><Error>?</Error><Raw F-String>ou</Raw F-String><String Char>\</String Char><br/>
<Raw F-String>        ps</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?P<name></Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Capturing>)</Regex Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?|</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Alternation>|</Regex Alternation><Raw F-String>b</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Raw F-String>    a</Raw F-String><Comment>(?#comment\)\'\"''"")</Comment><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?></Regex Parenthesis Options><Raw F-String>=a</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Raw F-String>    </Raw F-String><Comment>(?#bla </Comment><String Substitution>{}</String Substitution><Comment> </Comment><String Substitution>{</String Substitution><Normal Text>a</Normal Text><String Substitution>}</String Substitution><Comment> </Comment><String Char>{{</String Char><Comment>a</Comment><String Char>}}</String Char><Comment> </Comment><Error>}</Error><br/>
<Comment>     bla)</Comment><Raw F-String>abc</Raw F-String><br/>
<Raw F-String>    </Raw F-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(</Regex Parenthesis Options><Regex Backreference>1</Regex Backreference><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Alternation>|</Regex Alternation><Raw F-String>b</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Error>)</Error><Raw F-String>a</Raw F-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(?!</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Alternation>|</Regex Alternation><Raw F-String>b</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Raw F-String>      </Raw F-String><Comment># oups ~</Comment><br/>
<Raw F-String>    </Raw F-String><Regex Capturing>(</Regex Capturing><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Capturing>)</Regex Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?=</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis>)</Regex Parenthesis><Regex Parenthesis Options>(?</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis Options>)</Regex Parenthesis Options><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis Options>:</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Parenthesis>)(</Regex Parenthesis><Error>?</Error><Raw F-String>oups</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?P<</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Raw F-String>>a</Raw F-String><Regex Capturing>)</Regex Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Alternation>|</Regex Alternation><Raw F-String>b</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Error>)</Error><Raw F-String>a</Raw F-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(?!</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis Options>)</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>y</Normal Text><String Substitution>}</String Substitution><Regex Alternation>|</Regex Alternation><String Substitution>{</String Substitution><Normal Text>y</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis>)</Regex Parenthesis><br/>
<Raw F-String>                                                   </Raw F-String><Comment># oups ~</Comment><br/>
<Raw F-String Deliminator>'''</Raw F-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>rf'''</Raw F-String Deliminator><br/>
<Raw F-String>    </Raw F-String><Regex Set>[^x$</Regex Set><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Set>y-</Regex Set><String Char>\</String Char><br/>
<Regex Set>        z]</Regex Set><br/>
<Raw F-String>    </Raw F-String><Regex Set>[]xy</Regex Set><Regex Character Class>[:alpha:]</Regex Character Class><br/>
<Regex Set>    z]</Regex Set><br/>
<Raw F-String>    </Raw F-String><Regex Set>[[</Regex Set><Regex Special>\w</Regex Special><Regex Set>a</Regex Set><Error>}</Error><Regex Set>()</Regex Set><String Char>{{}}\b\]\[\.</String Char><Regex Set>.]</Regex Set><br/>
<Raw F-String>    </Raw F-String><Regex Set>[[a-z]</Regex Set><Raw F-String>--</Raw F-String><Regex Set>[c]</Regex Set><Raw F-String>] </Raw F-String><Comment># regex V1</Comment><br/>
<Raw F-String Deliminator>'''</Raw F-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>fr'''</Raw F-String Deliminator><Regex Capturing>(</Regex Capturing><br/>
<Raw F-String>    </Raw F-String><Regex Capturing>(</Regex Capturing><br/>
<Raw F-String>        </Raw F-String><Regex Capturing>(</Regex Capturing><br/>
<Raw F-String>            a </Raw F-String><Comment># bla</Comment><br/>
<Raw F-String>        </Raw F-String><Regex Capturing>)</Regex Capturing><br/>
<Raw F-String>    </Raw F-String><Regex Capturing>)</Regex Capturing><br/>
<Regex Capturing>)</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><br/>
<Raw F-String>    </Raw F-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><br/>
<Raw F-String>        </Raw F-String><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Capturing>(</Regex Capturing><br/>
<Raw F-String>            '" </Raw F-String><Comment># bla</Comment><br/>
<Raw F-String>            abc</Raw F-String><String Char>\</String Char><br/>
<Raw F-String>                z</Raw F-String><br/>
<Raw F-String>        </Raw F-String><Regex Capturing>))</Regex Capturing><br/>
<Raw F-String>    </Raw F-String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Regex Non-Capturing>)</Regex Non-Capturing><Raw F-String Deliminator>'''</Raw F-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>rf'''</Raw F-String Deliminator><br/>
<Raw F-String>    </Raw F-String><Regex Non-Capturing>(?:</Regex Non-Capturing><br/>
<Raw F-String>         </Raw F-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><br/>
<Raw F-String>            </Raw F-String><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Regex Special>$</Regex Special><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Raw F-String>a</Raw F-String><Regex Capturing>(</Regex Capturing><br/>
<Regex Special>.</Regex Special><Raw F-String Deliminator>'''</Raw F-String Deliminator><Normal Text> </Normal Text><Comment># break</Comment><br/>
<Normal Text></Normal Text><br/>
<Comment># rf"""..."""</Comment><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>rf"""</Raw F-String Deliminator><br/>
<Raw F-String>    a</Raw F-String><Regex Quantifier>+</Regex Quantifier><Raw F-String>é</Raw F-String><Regex Quantifier>??</Regex Quantifier><Raw F-String>a</Raw F-String><Regex Quantifier>?*</Regex Quantifier><br/>
<Raw F-String>        </Raw F-String><Comment># ~~ invalid, but ok</Comment><br/>
<Raw F-String>    a</Raw F-String><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><Raw F-String>a</Raw F-String><String Char>{{</String Char><Raw F-String>x,</Raw F-String><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>,</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>1</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>1,</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>,2</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>1,2</Regex Quantifier><String Char>}}</String Char><Raw F-String>  </Raw F-String><Comment># bla bla</Comment><br/>
<Raw F-String>    a</Raw F-String><String Char>{{</String Char><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><Regex Quantifier>,</Regex Quantifier><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><Regex Quantifier>,</Regex Quantifier><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><String Char>}}</String Char><Raw F-String>a</Raw F-String><String Char>{{</String Char><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><Regex Quantifier>,</Regex Quantifier><String Substitution>{</String Substitution><Normal Text>n</Normal Text><String Substitution>}</String Substitution><String Char>}}</String Char><br/>
<Raw F-String>    </Raw F-String><Regex Special>\L<name>\L<</Regex Special><String Substitution>{</String Substitution><Normal Text>name</Normal Text><String Substitution>}</String Substitution><Regex Special>></Regex Special><Regex Backreference>\g<name>\g<</Regex Backreference><String Substitution>{</String Substitution><Normal Text>name</Normal Text><String Substitution>}</String Substitution><Regex Backreference>>\g<12></Regex Backreference><br/>
<Raw F-String>    </Raw F-String><Regex Special>\w.</Regex Special><Raw F-String>""</Raw F-String><String Char>\"</String Char><Regex Special>\b</Regex Special><String Char>\\</String Char><Raw F-String>a</Raw F-String><String Char>\#\p{{H}}\p</String Char><String Substitution>{</String Substitution><Normal Text>name</Normal Text><String Substitution>}</String Substitution><String Char>\p{{</String Char><String Substitution>{</String Substitution><Normal Text>name</Normal Text><String Substitution>}</String Substitution><String Char>}}\x12\u1234\1\023\023</String Char><Raw F-String>4</Raw F-String><String Char>\123\123</String Char><Raw F-String>4</Raw F-String><String Char>\12</String Char><Regex Special>$</Regex Special><br/>
<Raw F-String Deliminator>"""</Raw F-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>fr"""</Raw F-String Deliminator><br/>
<Raw F-String>    </Raw F-String><Regex Capturing>(</Regex Capturing><Raw F-String>a</Raw F-String><Regex Capturing>)</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><Raw F-String>a</Raw F-String><Regex Non-Capturing>)</Regex Non-Capturing><br/>
<Raw F-String>    </Raw F-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?=</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Regex Parenthesis Options>(?R)(?r)</Regex Parenthesis Options><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?</Regex Parenthesis Options><Raw F-String>a-m:a</Raw F-String><Regex Parenthesis>)(</Regex Parenthesis><Error>?</Error><Raw F-String>ou</Raw F-String><String Char>\</String Char><br/>
<Raw F-String>        ps</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?P<name></Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Capturing>)</Regex Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?|</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Alternation>|</Regex Alternation><Raw F-String>b</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Raw F-String>    a</Raw F-String><Comment>(?#comment\)\'\")</Comment><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?></Regex Parenthesis Options><Raw F-String>=a</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Raw F-String>    </Raw F-String><Comment>(?#bla </Comment><String Substitution>{}</String Substitution><Comment> </Comment><String Substitution>{</String Substitution><Normal Text>a</Normal Text><String Substitution>}</String Substitution><Comment> </Comment><String Char>{{</String Char><Comment>a</Comment><String Char>}}</String Char><Comment> </Comment><Error>}</Error><br/>
<Comment>     bla)</Comment><Raw F-String>abc</Raw F-String><br/>
<Raw F-String>    </Raw F-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(</Regex Parenthesis Options><Regex Backreference>1</Regex Backreference><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Alternation>|</Regex Alternation><Raw F-String>b</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Error>)</Error><Raw F-String>a</Raw F-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(?!</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Alternation>|</Regex Alternation><Raw F-String>b</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Raw F-String>      </Raw F-String><Comment># oups ~</Comment><br/>
<Raw F-String>    </Raw F-String><Regex Capturing>(</Regex Capturing><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Capturing>)</Regex Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?=</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis>)</Regex Parenthesis><Regex Parenthesis Options>(?</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis Options>)</Regex Parenthesis Options><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis Options>:</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Parenthesis>)(</Regex Parenthesis><Error>?</Error><Raw F-String>oups</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?P<</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Raw F-String>>a</Raw F-String><Regex Capturing>)</Regex Capturing><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis Options>)</Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Alternation>|</Regex Alternation><Raw F-String>b</Raw F-String><Regex Parenthesis>)</Regex Parenthesis><Error>)</Error><Raw F-String>a</Raw F-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?(?!</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis Options>)</Regex Parenthesis Options><String Substitution>{</String Substitution><Normal Text>y</Normal Text><String Substitution>}</String Substitution><Regex Alternation>|</Regex Alternation><String Substitution>{</String Substitution><Normal Text>y</Normal Text><String Substitution>}</String Substitution><Regex Parenthesis>)</Regex Parenthesis><br/>
<Raw F-String>                                                   </Raw F-String><Comment># oups ~</Comment><br/>
<Raw F-String Deliminator>"""</Raw F-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>rf"""</Raw F-String Deliminator><br/>
<Raw F-String>    </Raw F-String><Regex Set>[^x$</Regex Set><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Regex Set>y-</Regex Set><String Char>\</String Char><br/>
<Regex Set>        z]</Regex Set><br/>
<Raw F-String>    </Raw F-String><Regex Set>[]xy</Regex Set><Regex Character Class>[:alpha:]</Regex Character Class><br/>
<Regex Set>    z]</Regex Set><br/>
<Raw F-String>    </Raw F-String><Regex Set>[[</Regex Set><Regex Special>\w</Regex Special><Regex Set>a</Regex Set><Error>}</Error><Regex Set>()</Regex Set><String Char>{{}}\b\]\[\.</String Char><Regex Set>.]</Regex Set><Raw F-String> </Raw F-String><Comment># bla bla</Comment><br/>
<Raw F-String>    </Raw F-String><Regex Set>[[a-z]</Regex Set><Raw F-String>--</Raw F-String><Regex Set>[c]</Regex Set><Raw F-String>] </Raw F-String><Comment># regex V1</Comment><br/>
<Raw F-String Deliminator>"""</Raw F-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>fr"""</Raw F-String Deliminator><Regex Capturing>(</Regex Capturing><br/>
<Raw F-String>    </Raw F-String><Regex Capturing>(</Regex Capturing><br/>
<Raw F-String>        </Raw F-String><Regex Capturing>(</Regex Capturing><br/>
<Raw F-String>            a </Raw F-String><Comment># bla</Comment><br/>
<Raw F-String>        </Raw F-String><Regex Capturing>)</Regex Capturing><br/>
<Raw F-String>    </Raw F-String><Regex Capturing>)</Regex Capturing><br/>
<Regex Capturing>)</Regex Capturing><Regex Non-Capturing>(?:</Regex Non-Capturing><br/>
<Raw F-String>    </Raw F-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><br/>
<Raw F-String>        </Raw F-String><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Raw F-String>a</Raw F-String><Regex Capturing>(</Regex Capturing><br/>
<Raw F-String>            '" </Raw F-String><Comment># bla</Comment><br/>
<Raw F-String>            abc</Raw F-String><String Char>\</String Char><br/>
<Raw F-String>                z</Raw F-String><br/>
<Raw F-String>        </Raw F-String><Regex Capturing>))</Regex Capturing><br/>
<Raw F-String>    </Raw F-String><Regex Parenthesis>)</Regex Parenthesis><br/>
<Regex Non-Capturing>)</Regex Non-Capturing><Raw F-String Deliminator>"""</Raw F-String Deliminator><br/>
<Normal Text>patt </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Raw F-String Deliminator>rf"""</Raw F-String Deliminator><br/>
<Raw F-String>    </Raw F-String><Regex Non-Capturing>(?:</Regex Non-Capturing><br/>
<Raw F-String>         </Raw F-String><Regex Parenthesis>(</Regex Parenthesis><Regex Parenthesis Options>?!</Regex Parenthesis Options><br/>
<Raw F-String>            </Raw F-String><Regex Capturing>(</Regex Capturing><Regex Parenthesis Options>?<a></Regex Parenthesis Options><Regex Special>$</Regex Special><String Substitution>{</String Substitution><Normal Text>x</Normal Text><String Substitution>}</String Substitution><Raw F-String>a</Raw F-String><Regex Capturing>(</Regex Capturing><br/>
<Regex Special>.</Regex Special><Raw F-String Deliminator>"""</Raw F-String Deliminator><Normal Text> </Normal Text><Comment># break</Comment><br/>
<Comment>#}</Comment><br/>
<Normal Text></Normal Text><br/>
<Comment>"Escapes in Doc/Comment String </Comment><String Char>\u1234</String Char><Comment> </Comment><String Char>\xAb</String Char><Comment> </Comment><String Char>\"\\</String Char><Comment>"</Comment><br/>
<Comment>''' Doc/Comment String </Comment><String Char>\N{123}</String Char><Comment> </Comment><String Char>\'</String Char><Comment>'''</Comment><br/>
<Comment>""" Doc/Comment String </Comment><String Char>\17</String Char><Comment> </Comment><String Char>\x1f</String Char><Comment> </Comment><String Char>\n</String Char><Comment> </Comment><String Char>\"</String Char><Comment> </Comment><String Char>\\</String Char><Comment>"""</Comment><br/>
<Normal Text></Normal Text><br/>
<Comment># Decimal, Hex, Binary, Octal</Comment><br/>
<Normal Text>a </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Int>1_2_34L</Int><br/>
<Normal Text>b </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Int>0_0_00_0</Int><br/>
<Normal Text>c </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Hex>0xA_3f_43D</Hex><br/>
<Normal Text>d </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Binary>0b0_0_1_01</Binary><br/>
<Normal Text>e </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Octal>0o71_2_34</Octal><br/>
<Comment># Float</Comment><br/>
<Normal Text>d </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Float>1.1E+3</Float><br/>
<Normal Text>e </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Float>1.E+3</Float><br/>
<Normal Text>f </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Float>.1E+3</Float><br/>
<Normal Text>g </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Float>1E+3</Float><br/>
<Normal Text>h </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Float>1.1</Float><br/>
<Normal Text>i </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Float>1.</Float><br/>
<Normal Text>j </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Float>.1</Float><br/>
<Normal Text>k </Normal Text><Operator>=</Operator><Normal Text>  </Normal Text><Int>1</Int><br/>
<Normal Text>l </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Float>1_0.e+3_22</Float><Normal Text> </Normal Text><Operator>+</Operator><Normal Text> </Normal Text><Float>.2_1e2</Float><Normal Text> </Normal Text><Operator>+</Operator><Normal Text> </Normal Text><Float>11_1.</Float><br/>
<Comment># Complex</Comment><br/>
<Normal Text>m </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Complex>1.1E+3j</Complex><br/>
<Normal Text>n </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Complex>1.E+3j</Complex><br/>
<Normal Text>o </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Complex>.1E+3j</Complex><br/>
<Normal Text>p </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Complex>1E+3j</Complex><br/>
<Normal Text>q </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Complex>1.1j</Complex><br/>
<Normal Text>r </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Complex>1.j</Complex><br/>
<Normal Text>s </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Complex>.1j</Complex><br/>
<Normal Text>t </Normal Text><Operator>=</Operator><Normal Text>  </Normal Text><Complex>1j</Complex><br/>
<Normal Text>u </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Complex>1_0.e+3_22j</Complex><Normal Text> </Normal Text><Operator>+</Operator><Normal Text> </Normal Text><Complex>.2_1e2j</Complex><Normal Text> </Normal Text><Operator>+</Operator><Normal Text> </Normal Text><Complex>11_1.j</Complex><br/>
<Normal Text></Normal Text><br/>
<Comment># Invalid numbers</Comment><br/>
<Normal Text>aaa.</Normal Text><Error>123</Error><br/>
<Normal Text>aaa123</Normal Text><br/>
<Float>.0</Float><Error>x123</Error><br/>
<Normal Text></Normal Text><br/>
<Comment># match and case keywords</Comment><br/>
<Normal Text>foo(</Normal Text><br/>
<Normal Text>    </Normal Text><Comment># no keyword</Comment><br/>
<Normal Text>    match </Normal Text><Flow Control Keyword>if</Flow Control Keyword><Normal Text> xx </Normal Text><Flow Control Keyword>else</Flow Control Keyword><Normal Text> yyy</Normal Text><br/>
<Normal Text>)</Normal Text><br/>
<Normal Text>match </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Int>3</Int><br/>
<Normal Text>match.foo()</Normal Text><br/>
<Flow Control Keyword>match</Flow Control Keyword><Normal Text> command.split():</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>case</Flow Control Keyword><Normal Text> [</Normal Text><String Deliminator>"</String Deliminator><String>quit</String><String Deliminator>"</String Deliminator><Normal Text>]:</Normal Text><br/>
<Normal Text>        </Normal Text><Builtin Function>print</Builtin Function><Normal Text>(</Normal Text><String Deliminator>"</String Deliminator><String>Goodbye!</String><String Deliminator>"</String Deliminator><Normal Text>)</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text>match(command.split())</Normal Text><br/>
<Flow Control Keyword>match</Flow Control Keyword><Normal Text>(command.split()):</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>case</Flow Control Keyword><Normal Text> [</Normal Text><String Deliminator>"</String Deliminator><String>quit</String><String Deliminator>"</String Deliminator><Normal Text>]:</Normal Text><br/>
<Normal Text>        </Normal Text><Builtin Function>print</Builtin Function><Normal Text>(</Normal Text><String Deliminator>"</String Deliminator><String>Goodbye!</String><String Deliminator>"</String Deliminator><Normal Text>)</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Definition Keyword>def</Definition Keyword><Normal Text> func1():</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>yield</Flow Control Keyword><Normal Text> </Normal Text><Int>1</Int><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>yield</Flow Control Keyword><Normal Text>  </Normal Text><Flow Control Keyword>from</Flow Control Keyword><Normal Text> [func(), </Normal Text><Int>1</Int><Normal Text>, </Normal Text><Int>2</Int><Normal Text>, </Normal Text><String Deliminator>"</String Deliminator><String>3</String><String Deliminator>"</String Deliminator><Normal Text>]</Normal Text><br/>
<Normal Text>    </Normal Text><Comment># invalid, "from" no longer part of "yield from"</Comment><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>yield</Flow Control Keyword><Normal Text>, </Normal Text><Import>from</Import><Normal Text> </Normal Text><Int>1</Int><br/>
<Normal Text></Normal Text><br/>
<Flow Control Keyword>async</Flow Control Keyword><Normal Text> </Normal Text><Definition Keyword>def</Definition Keyword><Normal Text> func2():</Normal Text><br/>
<Normal Text>    </Normal Text><Flow Control Keyword>await</Flow Control Keyword><Normal Text> asyncio.sleep(</Normal Text><Int>1</Int><Normal Text>)</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Flow Control Keyword>assert</Flow Control Keyword><Normal Text> cond, </Normal Text><Operator>\</Operator><br/>
<Normal Text>    </Normal Text><String Deliminator>"</String Deliminator><String>bla bla</String><String Deliminator>"</String Deliminator><br/>
<Normal Text></Normal Text><br/>
<Builtin Function>print</Builtin Function><Normal Text>(</Normal Text><String Deliminator>'</String Deliminator><String>dsdsa</String><String Deliminator>'</String Deliminator><Normal Text> </Normal Text><Operator>\</Operator><br/>
<Normal Text>      </Normal Text><String Deliminator>'</String Deliminator><String>dsdasw</String><String Deliminator>'</String Deliminator><br/>
<Normal Text>      </Normal Text><String Deliminator>'</String Deliminator><String>dsadsa</String><String Deliminator>'</String Deliminator><Normal Text>)</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Comment>"</Comment><String Char>\\\\\\\\\\</String Char><Comment>ENSURE THAT THIS AND THE FOLLOWING LINES ARE AT THE </Comment><Region Marker>END</Region Marker><Comment> OF THE FILE</Comment><String Char>\\\\\\\\\\</String Char><Comment> </Comment><Operator>\</Operator><br/>
<Comment>"</Comment><br/>
<Normal Text>a </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><String Deliminator>'</String Deliminator><String>otherwise the next line will be</String><br/>
<Error>stuck on the Error attribute'</Error><br/>
<Raw B-String Deliminator>BR"</Raw B-String Deliminator><Raw B-String>Strings delimited by single quotes (' or </Raw B-String><Raw B-String Deliminator>"</Raw B-String Deliminator><Normal Text>)</Normal Text><br/>
<Normal Text>can NOT be defined across multiple lines</Normal Text><br/>
<Normal Text>unless escaped </Normal Text><Flow Control Keyword>with</Flow Control Keyword><Normal Text> </Normal Text><Operator>\</Operator><br/>
<String Deliminator>"</String Deliminator><br/>
