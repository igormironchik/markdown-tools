<Markdown>---</Markdown><br/>
<Key>title</Key><Key Points Operator>:</Key Points Operator><Attribute> </Attribute><String>"Hello, Quarto"</String><br/>
<Key>format</Key><Key Points Operator>:</Key Points Operator><Attribute> html</Attribute><br/>
<Key>editor</Key><Key Points Operator>:</Key Points Operator><Attribute> visual</Attribute><br/>
<Markdown>---</Markdown><br/>
<Normal Text></Normal Text><br/>
<Structure>```{r}</Structure><br/>
<Comment>#| label: load-packages</Comment><br/>
<Comment>#| include: false</Comment><br/>
<Normal Text></Normal Text><br/>
<Keyword>library</Keyword><Symbol>(</Symbol><Normal Text>tidyverse</Normal Text><Symbol>)</Symbol><br/>
<Keyword>library</Keyword><Symbol>(</Symbol><Normal Text>palmerpenguins</Normal Text><Symbol>)</Symbol><br/>
<Structure>```</Structure><br/>
<Normal Text></Normal Text><br/>
<Header H2>## This example</Header H2><br/>
<Normal Text></Normal Text><br/>
<Normal Text>This example code mostly from the Quatro guide: </Normal Text><Normal Text: Link>https://quarto.org/docs/guide/</Normal Text: Link><Normal Text> . GPL-2.</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text>Quarto is very similar to R markdown, but also allows (inline) code blocks in Python, Julia, and Observable JS.</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Header H2>## Meet Quarto</Header H2><br/>
<Normal Text></Normal Text><br/>
<Normal Text>Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see </Normal Text><Auto-Link><</Auto-Link><Link>https://quarto.org</Link><Auto-Link>></Auto-Link><Normal Text>.</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Header H2>## Meet the penguins</Header H2><br/>
<Normal Text></Normal Text><br/>
<Inline Image>![](</Inline Image><Inline Image: Link>https://raw.githubusercontent.com/quarto-dev/quarto-web/main/docs/get-started/hello/rstudio/lter_penguins.png</Inline Image: Link><Inline Image>)</Inline Image><Normal Text>{style="float:right;" fig-alt="Illustration of three species of Palmer Archipelago penguins: Chinstrap, Gentoo, and Adelie. Artwork by @allison_horst." width="401"}</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text>The </Normal Text><Code>`penguins`</Code><Normal Text> data from the </Normal Text><Reference-Link>[</Reference-Link><Reference-Link Name>**palmerpenguins**</Reference-Link Name><Reference-Link>](</Reference-Link><Reference-Link: Link>https://allisonhorst.github.io/palmerpenguins</Reference-Link: Link><Reference-Link> "palmerpenguins R package")</Reference-Link><Normal Text> package contains size measurements for </Normal Text><Structure>`{r}</Structure><Normal Text> </Normal Text><Keyword>nrow</Keyword><Symbol>(</Symbol><Normal Text>penguins</Normal Text><Symbol>)</Symbol><Structure>`</Structure><Normal Text> penguins from three species observed on three islands in the Palmer Archipelago, Antarctica.</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text>The plot below shows the relationship between flipper and bill lengths of these penguins.</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Structure>```{r}</Structure><br/>
<Comment>#| label: plot-penguins</Comment><br/>
<Comment>#| warning: false</Comment><br/>
<Comment>#| echo: false</Comment><br/>
<Comment># </Comment><Alert Level 3>NOTE</Alert Level 3><Comment>: We may want to add some sort of ighlighting for the above rendering options</Comment><br/>
<Normal Text></Normal Text><br/>
<Keyword>ggplot</Keyword><Symbol>(</Symbol><Normal Text>penguins, </Normal Text><br/>
<Normal Text>       </Normal Text><Keyword>aes</Keyword><Symbol>(</Symbol><Identifier>x =</Identifier><Normal Text> flipper_length_mm, </Normal Text><Identifier>y =</Identifier><Normal Text> bill_length_mm</Normal Text><Symbol>))</Symbol><Normal Text> </Normal Text><Operator>+</Operator><br/>
<Normal Text>  </Normal Text><Keyword>geom_point</Keyword><Symbol>(</Symbol><Keyword>aes</Keyword><Symbol>(</Symbol><Identifier>color =</Identifier><Normal Text> species, </Normal Text><Identifier>shape =</Identifier><Normal Text> species</Normal Text><Symbol>))</Symbol><Normal Text> </Normal Text><Operator>+</Operator><br/>
<Normal Text>  </Normal Text><Keyword>scale_color_manual</Keyword><Symbol>(</Symbol><Identifier>values =</Identifier><Normal Text> </Normal Text><Keyword>c</Keyword><Symbol>(</Symbol><String>"darkorange"</String><Normal Text>,</Normal Text><String>"purple"</String><Normal Text>,</Normal Text><String>"cyan4"</String><Symbol>))</Symbol><Normal Text> </Normal Text><Operator>+</Operator><br/>
<Normal Text>  </Normal Text><Keyword>labs</Keyword><Symbol>(</Symbol><br/>
<Normal Text>    </Normal Text><Identifier>title =</Identifier><Normal Text> </Normal Text><String>"Flipper and bill length"</String><Normal Text>,</Normal Text><br/>
<Normal Text>    </Normal Text><Identifier>subtitle =</Identifier><Normal Text> </Normal Text><String>"Dimensions for penguins at Palmer Station LTER"</String><Normal Text>,</Normal Text><br/>
<Normal Text>    </Normal Text><Identifier>x =</Identifier><Normal Text> </Normal Text><String>"Flipper length (mm)"</String><Normal Text>, </Normal Text><Identifier>y =</Identifier><Normal Text> </Normal Text><String>"Bill length (mm)"</String><Normal Text>,</Normal Text><br/>
<Normal Text>    </Normal Text><Identifier>color =</Identifier><Normal Text> </Normal Text><String>"Penguin species"</String><Normal Text>, </Normal Text><Identifier>shape =</Identifier><Normal Text> </Normal Text><String>"Penguin species"</String><br/>
<Normal Text>  </Normal Text><Symbol>)</Symbol><Normal Text> </Normal Text><Operator>+</Operator><br/>
<Normal Text>  </Normal Text><Keyword>theme_minimal</Keyword><Symbol>()</Symbol><br/>
<Structure>```</Structure><br/>
<Normal Text></Normal Text><br/>
<Normal Text></Normal Text><br/>
<Structure>```{python}</Structure><br/>
<Comment>#| label: fig-polar</Comment><br/>
<Comment>#| fig-cap: "A line plot on a polar axis"</Comment><br/>
<Normal Text></Normal Text><br/>
<Import>import</Import><Normal Text> numpy </Normal Text><Import>as</Import><Normal Text> np</Normal Text><br/>
<Import>import</Import><Normal Text> matplotlib.pyplot </Normal Text><Import>as</Import><Normal Text> plt</Normal Text><br/>
<Normal Text></Normal Text><br/>
<Normal Text>r </Normal Text><Operator>=</Operator><Normal Text> np.arange(</Normal Text><Int>0</Int><Normal Text>, </Normal Text><Int>2</Int><Normal Text>, </Normal Text><Float>0.01</Float><Normal Text>)</Normal Text><br/>
<Normal Text>theta </Normal Text><Operator>=</Operator><Normal Text> </Normal Text><Int>2</Int><Normal Text> </Normal Text><Operator>*</Operator><Normal Text> np.pi </Normal Text><Operator>*</Operator><Normal Text> r</Normal Text><br/>
<Normal Text>fig, ax </Normal Text><Operator>=</Operator><Normal Text> plt.subplots(</Normal Text><br/>
<Normal Text>  subplot_kw </Normal Text><Operator>=</Operator><Normal Text> {</Normal Text><String Deliminator>'</String Deliminator><String>projection</String><String Deliminator>'</String Deliminator><Normal Text>: </Normal Text><String Deliminator>'</String Deliminator><String>polar</String><String Deliminator>'</String Deliminator><Normal Text>} </Normal Text><br/>
<Normal Text>)</Normal Text><br/>
<Normal Text>ax.plot(theta, r)</Normal Text><br/>
<Normal Text>ax.set_rticks([</Normal Text><Float>0.5</Float><Normal Text>, </Normal Text><Int>1</Int><Normal Text>, </Normal Text><Float>1.5</Float><Normal Text>, </Normal Text><Int>2</Int><Normal Text>])</Normal Text><br/>
<Normal Text>ax.grid(</Normal Text><Special Variable>True</Special Variable><Normal Text>)</Normal Text><br/>
<Normal Text>plt.show()</Normal Text><br/>
<Structure>```</Structure><br/>
<Normal Text></Normal Text><br/>
<Structure>```{julia}</Structure><br/>
<Comment>#| label: fig-parametric</Comment><br/>
<Comment>#| fig-cap: "Parametric Plots"</Comment><br/>
<Normal Text></Normal Text><br/>
<Import>using</Import><Normal Text> </Normal Text><Module>Plots</Module><br/>
<Normal Text></Normal Text><br/>
<Function>plot</Function><Normal Text>(</Normal Text><Variable>sin</Variable><Normal Text>, </Normal Text><br/>
<Normal Text>     </Normal Text><Function>x->sin</Function><Normal Text>(</Normal Text><Float>2</Float><Variable>x</Variable><Normal Text>), </Normal Text><br/>
<Normal Text>     </Normal Text><Float>0</Float><Normal Text>, </Normal Text><br/>
<Normal Text>     </Normal Text><Float>2</Float><Variable>Ï€</Variable><Normal Text>, </Normal Text><br/>
<Normal Text>     </Normal Text><Variable>leg</Variable><Operator>=</Operator><Boolean>false</Boolean><Normal Text>, </Normal Text><br/>
<Normal Text>     </Normal Text><Variable>fill</Variable><Operator>=</Operator><Normal Text>(</Normal Text><Float>0</Float><Normal Text>,</Normal Text><Operator>:</Operator><Variable>lavender</Variable><Normal Text>))</Normal Text><br/>
<Structure>```</Structure><br/>
<Normal Text></Normal Text><br/>
<Structure>```{ojs}</Structure><br/>
<Normal Text>viewof bill_length_min </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Objects>Inputs</Objects><Symbol>.</Symbol><Function Name>range</Function Name><Normal Text>(</Normal Text><br/>
<Normal Text>  [</Normal Text><Decimal>32</Decimal><Symbol>,</Symbol><Normal Text> </Normal Text><Decimal>50</Decimal><Normal Text>]</Normal Text><Symbol>,</Symbol><Normal Text> </Normal Text><br/>
<Normal Text>  {</Normal Text><JSON>value</JSON><Symbol>:</Symbol><Normal Text> </Normal Text><Decimal>35</Decimal><Symbol>,</Symbol><Normal Text> </Normal Text><JSON>step</JSON><Symbol>:</Symbol><Normal Text> </Normal Text><Decimal>1</Decimal><Symbol>,</Symbol><Normal Text> </Normal Text><JSON>label</JSON><Symbol>:</Symbol><Normal Text> </Normal Text><String>"Bill length (min):"</String><Normal Text>}</Normal Text><br/>
<Normal Text>)</Normal Text><br/>
<Normal Text>viewof islands </Normal Text><Symbol>=</Symbol><Normal Text> </Normal Text><Objects>Inputs</Objects><Symbol>.</Symbol><Function Name>checkbox</Function Name><Normal Text>(</Normal Text><br/>
<Normal Text>  [</Normal Text><String>"Torgersen"</String><Symbol>,</Symbol><Normal Text> </Normal Text><String>"Biscoe"</String><Symbol>,</Symbol><Normal Text> </Normal Text><String>"Dream"</String><Normal Text>]</Normal Text><Symbol>,</Symbol><Normal Text> </Normal Text><br/>
<Normal Text>  { </Normal Text><JSON>value</JSON><Symbol>:</Symbol><Normal Text> [</Normal Text><String>"Torgersen"</String><Symbol>,</Symbol><Normal Text> </Normal Text><String>"Biscoe"</String><Normal Text>]</Normal Text><Symbol>,</Symbol><Normal Text> </Normal Text><br/>
<Normal Text>    </Normal Text><JSON>label</JSON><Symbol>:</Symbol><Normal Text> </Normal Text><String>"Islands:"</String><br/>
<Normal Text>  }</Normal Text><br/>
<Normal Text>)</Normal Text><br/>
<Structure>```</Structure><br/>
