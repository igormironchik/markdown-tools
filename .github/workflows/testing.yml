name: "build"

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
  
env:
  CONAN_HOME: "${{ github.workspace }}/.conan2"

jobs:
  linux:
    name: linux
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        language: ['cpp']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - run: sudo apt update

    - run: sudo apt upgrade

    - run: sudo apt install libfreetype6-dev libjpeg-dev libpng-dev zlib1g zlib1g-dev libfontconfig1-dev fontconfig libxml2-dev libtiff-dev freeglut3-dev libxcb-icccm4  libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-shape0 libxcb-xinerama0 libxcb-xkb1 libxkbcommon-x11-0 patchelf libcups2-dev lcov

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.7.3'
        modules: 'qtimageformats qtwebchannel qtwebengine qtwebview qtpositioning'
        set-env: 'true'

    - run: chmod a+x ./script/linux/install-kde.sh

    - run: chmod a+x ./script/linux/build.sh

    - name: Install Qt
      run: ./script/linux/install-qt.sh

    - name: Install KDE
      run: ./script/linux/install-kde.sh

    - name: Build
      run: ./script/linux/build.sh Debug ON

    - name: Test
      run: |
        export QT_QPA_PLATFORM=offscreen
        ctest --test-dir build-markdown-tools --output-on-failure --verbose -C Debug

    - name: Upload coverage info
      run: |
        lcov --directory . --capture --output-file coverage.info
        lcov --remove coverage.info '/usr/*' --output-file coverage.info
        lcov --list coverage.info

    - name: Codecov Upload
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}

#   windows:
#     name: windows
#     runs-on: windows-2019
#
#     strategy:
#       fail-fast: true
#       matrix:
#         language: ['cpp']
#
#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v3
#       with:
#         submodules: recursive
#
#     - name: Install Conan
#       id: conan
#       uses: turtlebrowser/get-conan@main
#
#     - run: conan profile detect
#
#     - name: Install Qt
#       uses: jurplel/install-qt-action@v3
#       with:
#         version: '6.6.2'
#         modules: qtwebengine qtwebchannel qtwebview qtpositioning
#
#     - run: mkdir build
#
#     - name: Install dependencies with Conan
#       run: conan install -of build --build=missing .
#
#     - name: Install ECM
#       run: cmd /c script\windows\install-extra-cmake-modules.bat
#
#     - name: Generate Makefiles
#       run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Relese
#
#     - name: Append PATH with packages
#       run: echo "${{ github.workspace }}\build\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
#
#     - name: Build
#       run: cmake --build build --config Release
#
#     - name: Test
#       run: ctest --output-on-failure --verbose --test-dir build -C Release
