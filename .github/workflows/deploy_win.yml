
name: "deploy_win"

on:
  workflow_dispatch:
  
env:
  CONAN_HOME: "${{ github.workspace }}/.conan2"

jobs:
  windows:
    name: windows
    runs-on: windows-2022
 
    strategy:
      fail-fast: true
      matrix:
        language: ['cpp']
 
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
 
    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main
       
    - run: conan profile detect
         
    - name: Set PATH to Qt
      run: |
        $qt_version = Get-Content ${{ github.workspace }}\script\qt.version -TotalCount 1
        $qt_arch = Get-Content ${{ github.workspace }}\script\qt.arch.win -TotalCount 1
        echo "${{ github.workspace }}\Qt\$qt_version\$qt_arch\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
       
    - name: Set PATH to KDE
      run: echo "${{ github.workspace }}\..\KDE\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Install pkg-config
      run: choco install pkgconfiglite
     
    - name: Install Qt
      run: cmd /c "script\windows\install-qt.bat"
       
    - name: Install OpenSSL
      run: cmd /c "script\windows\install-openssl.bat"

    - name: Enable NMake
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install KDE
      run: cmd /c "script\windows\install-kde.bat"

    - name: Build
      run: cmd /c "script\windows\build.bat"
       
    - name: Copy binaries
      run: cmd /c "script\windows\copy-binaries.bat"

    - name: Copy OpenSSL
      run: cmd /c "script\windows\copy-openssl.bat"
       
    - name: Deploy
      run: cmd /c "script\windows\deploy.bat"
      
    - name: Upload installer
      uses: actions/upload-artifact@v4
      with:
        name: Markdown_Windows_x64.Installer.exe
        path: Markdown_Windows_x64.Installer.exe
